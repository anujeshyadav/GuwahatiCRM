{"version":3,"sources":["views/apps/freshlist/customer/warehouse/CreateWareHouse.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CreateWareHouse","useState","CreatWarehouseView","setCreatWarehouseView","formData","setFormData","index","error","setError","handleInputChange","e","type","i","target","name","value","test","console","log","useEffect","Createwarehousexml","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","AddWareHouse","input","catch","err","className","render","history","onClick","push","onSubmit","preventDefault","userId","localStorage","getItem","_id","swal","CreateWarehousesave","status","WarehouseName","mobileno","email","locaton","message","map","ele","phoneinput","key","lg","md","sm","label","_text","inputClass","country","onKeyDown","_attributes","includes","countryCodeEditable","onChange","phone","style","color","placeholder","checked","marginRight","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/332.35d70d0e.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  Createwarehousexml,\r\n  CreateWarehousesave,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\n\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\n// import UserContext from \"../../../../../context/Context\";\r\n\r\nconst CreateWareHouse = () => {\r\n  const [CreatWarehouseView, setCreatWarehouseView] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value } = e.target;\r\n    if (type == \"number\") {\r\n      if (/^\\d{0,10}$/.test(value)) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: value,\r\n        });\r\n        setError(\"\");\r\n      } else {\r\n        setError(\r\n          \"Please enter a valid number with a maximum length of 10 digits\"\r\n        );\r\n      }\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n      console.log(formData);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    Createwarehousexml()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData).AddWareHouse.input);\r\n        setCreatWarehouseView(JSON.parse(jsonData).AddWareHouse);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    formData[\"created_by\"] = userId;\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      CreateWarehousesave(formData)\r\n        .then(res => {\r\n          if (res.status) {\r\n            setFormData({\r\n              WarehouseName: \"\",\r\n              mobileno: \"\",\r\n              email: \"\",\r\n              locaton: \"\",\r\n            });\r\n            swal(`Warehouse  ${res.message}`);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Create WareHouse</h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softNumen/system/WareHouseListSoft\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {CreatWarehouseView &&\r\n                  CreatWarehouseView?.input?.map((ele, i) => {\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>{ele?.label?._text}</Label>\r\n                                <PhoneInput\r\n                                  inputClass=\"myphoneinput\"\r\n                                  country={\"us\"}\r\n                                  onKeyDown={e => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  countryCodeEditable={false}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={phone => {\r\n                                    console.log(phone);\r\n                                    setFormData({\r\n                                      ...formData,\r\n                                      [ele?.name?._text]: phone,\r\n                                    });\r\n                                  }}\r\n                                  // onChange={handleInputChange}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        </>\r\n                      );\r\n                    } else if (ele?.type?._attributes?.type == \"text\") {\r\n                      return (\r\n                        <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                          <FormGroup key={i}>\r\n                            <Label>{ele?.label?._text}</Label>\r\n                            <Input\r\n                              type={ele?.type?._attributes?.type}\r\n                              placeholder={ele?.placeholder?._text}\r\n                              name={ele?.name?._text}\r\n                              value={formData[ele?.name?._text]}\r\n                              onChange={e => {\r\n                                handleInputChange(\r\n                                  e,\r\n                                  ele?.type?._attributes?.type,\r\n                                  i\r\n                                );\r\n                              }}\r\n                            />\r\n                            {index === i ? (\r\n                              <>\r\n                                {error && (\r\n                                  <span style={{ color: \"red\" }}>{error}</span>\r\n                                )}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                          <FormGroup key={i}>\r\n                            <Label>{ele?.label?._text}</Label>\r\n                            <Input\r\n                              type={ele?.type?._attributes?.type}\r\n                              placeholder={ele?.placeholder?._text}\r\n                              name={ele?.name?._text}\r\n                              value={formData[ele?.name?._text]}\r\n                              onChange={e => {\r\n                                handleInputChange(\r\n                                  e,\r\n                                  ele?.type?._attributes?.type,\r\n                                  i\r\n                                );\r\n                              }}\r\n                            />\r\n                            {index === i ? (\r\n                              <>\r\n                                {error && (\r\n                                  <span style={{ color: \"red\" }}>{error}</span>\r\n                                )}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    }\r\n                  })}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-0\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={e => {\r\n                      setFormData({\r\n                        ...formData,\r\n                        [\"status\"]: e.target.value,\r\n                      });\r\n                    }}\r\n                  >\r\n                    <input\r\n                      checked={formData[\"status\"] == \"Active\"}\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n                    <input\r\n                      checked={formData[\"status\"] == \"Deactive\"}\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateWareHouse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}