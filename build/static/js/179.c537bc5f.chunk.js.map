{"version":3,"sources":["views/SuperAdminUi/SuperAdminUI.js","../node_modules/reactstrap/es/Spinner.js","views/apps/freshlist/order/SalesReturnView.js","views/apps/freshlist/order/purchase/PurchaseReturnList.js","assets/img/profile/pages/logomain.png","views/apps/freshlist/house/CheckPermission.js"],"names":["SuperAdminUI","onDropdownChange","onSubmit","useState","SuperAdminList","setSuperAdminList","UserInfo","setUserInfo","selectedSuperAdmin","setSelectedSuperAdmin","setSelectedSuperAdminName","List","localStorage","getItem","useEffect","console","log","Userinfo","JSON","parse","length","_GetList","Super_Admin_List","then","res","setItem","stringify","SuperAdmin","catch","err","rolename","roleName","className","value","onChange","e","selectedName","target","options","selectedIndex","getAttribute","split","selectedValue","type","map","ele","i","data-name","_id","database","firstName","lastName","lg","sm","md","onClick","preventDefault","color","_excluded","propTypes","tag","tagPropType","PropTypes","string","size","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","SalesReturnView","args","setIndex","error","setProductList","grandTotalAmt","setGrandTotalAmt","setEditdata","setSalesPersonList","location","useParams","useLocation","productId","Product_Title","Qty_Sales","Qty_Return","Product_Price","OrderedListData","setOrderedListData","handleProductChangeProduct","index","name","list","getFromLocalData","orderItems","state","grandTotal","reduce","a","b","Product_MRP","Create_Sales_personList","SalesPerson","userdata","ProductListView","Product","userInfo","render","history","style","cursor","goBack","userData","myarr","qty","Number","returnQty","price","payload","userId","returnItems","mobileNumber","email","Return_amount","orderId","created_by","swal","SalesReturnProduct","item","key","readOnly","placeholder","Ripple","SelectedColums","PurchaseReturn","toggleModal","setState","prevState","modalone","LookupviewStart","modal","handleChangeView","data","types","ViewOneUserView","ViewOneData","EditOneUserView","EditOneData","onGridReady","params","gridApi","api","gridColumnApi","columnApi","gridRef","current","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","handleChangeHeader","checked","push","delindex","findIndex","headerName","splice","exportToPDF","csvData","getDataAsCsv","processCellCallback","processCell","parseCsv","parsedData","generatePDF","exportToExcel","CsvData","convertCsvToExcel","blob","downloadExcelFile","convertCSVtoExcel","Papa","complete","result","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","shiftElementUp","currentIndex","Arrindex","myArrayCopy","SelectedcolumnDefs","elementToMove","shiftElementDown","convertCsvToXml","rows","xmlString","forEach","row","cell","Blob","link","document","href","URL","createObjectURL","download","click","HandleSetVisibleField","setColumnDefs","columnDefs","rowData","toggleDropdown","isOpen","HeadingRightShift","updatedSelectedColumnDefs","Set","handleLeftShift","SelectedCols","slice","handleParentSubmit","id","db","Apicalling","handleDropdownChange","createRef","MasterShow","userName","InsiderPermissions","ViewData","setMySelectedarr","paginationPageSize","AllcolumnDefs","defaultColDef","sortable","enablePivot","enableValue","resizable","suppressMenu","valueGetter","field","width","filter","cellRendererFramework","View","togglemodal","Size","HSN_Code","this","Loading","Purchase_ReturnList","userHeading","context","UserInformatio","InsidePermissions","CheckPermission","buttons","cancel","text","Delete_targetINlist","selectedData","getSelectedRows","updateRowData","remove","Promise","resolve","reject","header","skipEmptyLines","Error","pdfsize","Object","keys","doc","jsPDF","setTextColor","tableData","values","addImage","Logo","date","Date","setCreationDate","autoTable","head","body","startY","save","dynamicTyping","worksheet","workbook","excelBuffer","bookType","url","window","appendChild","revokeObjectURL","display","justifyContent","marginTop","height","fontWeight","title","Download","position","zIndex","border","backgroundColor","exportDataAsCsv","right","Consumer","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","ref","domLayout","toggle","maxWidth","xl","xs","class","element","backdrop","fullscreen","Component","contextType","UserContext","module","exports","pageparmission","newparmisson","rolePermission","find","pagename","permission","includes","Create","Edit","Delete"],"mappings":"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","file":"static/js/179.c537bc5f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, CustomInput, Row } from \"reactstrap\";\r\nimport { Super_Admin_List } from \"../../ApiEndPoint/Api\";\r\nimport { _Get, _GetList } from \"../../ApiEndPoint/ApiCalling\";\r\n\r\nconst SuperAdminUI = ({ onDropdownChange, onSubmit }) => {\r\n  const [SuperAdminList, setSuperAdminList] = useState([]);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [selectedSuperAdmin, setSelectedSuperAdmin] = useState(\"\");\r\n  const [selectedSuperAdminName, setSelectedSuperAdminName] = useState(\"\");\r\n    let List = localStorage.getItem(\"AllSuper\");\r\n\r\n    useEffect(() => {\r\n      // Super_Admin_List;\r\n      console.log(\"a\");\r\n      let Userinfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n      setUserInfo(Userinfo);\r\n      let List = JSON.parse(localStorage.getItem(\"AllSuper\"));\r\n      if (List?.length) {\r\n        setSuperAdminList(List);\r\n      } else {\r\n        _GetList(Super_Admin_List)\r\n          .then((res) => {\r\n            // console.log(res?.SuperAdmin);\r\n            localStorage.setItem(\"AllSuper\", JSON.stringify(res?.SuperAdmin));\r\n            setSuperAdminList(res?.SuperAdmin);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    }, [List]);\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      // Call the onSubmit function passed from the parent component\r\n      onSubmit(e);\r\n    };\r\n    const handleDropdownChange = (e) => {\r\n      const selectedName = e.target.options[e.target.selectedIndex]\r\n        .getAttribute(\"data-name\")\r\n        ?.split(\" \")[0];\r\n      const selectedValue =\r\n        e.target.options[e.target.selectedIndex].getAttribute(\"data-name\");\r\n      setSelectedSuperAdmin(selectedName);\r\n      setSelectedSuperAdminName(selectedName);\r\n      onDropdownChange(selectedValue);\r\n    };\r\n    console.log(selectedSuperAdmin);\r\n    return (\r\n      <div>\r\n        <Row>\r\n          {UserInfo?.rolename?.roleName === \"MASTER\" &&\r\n            UserInfo?.rolename?.roleName === \"MASTER\" && (\r\n              <>\r\n                <Col>\r\n                  <CustomInput\r\n                    className=\"mb-1\"\r\n                    value={selectedSuperAdmin}\r\n                    onChange={handleDropdownChange}\r\n                    type=\"select\">\r\n                    <option>--select SuperAdmin--</option>\r\n                    {SuperAdminList &&\r\n                      SuperAdminList?.map((ele, i) => (\r\n                        <option\r\n                          data-name={`${ele?._id} ${ele?.database}`}\r\n                          value={ele?._id}>\r\n                          {ele?.firstName} {ele?.lastName}\r\n                        </option>\r\n                      ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n                  <Button\r\n                    className=\"mb-1\"\r\n                    onClick={handleSubmit}\r\n                    color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </>\r\n            )}\r\n        </Row>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default SuperAdminUI;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SalesReturnProduct,\r\n  ProductListView,\r\n  Create_Sales_personList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst SalesReturnView = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [Editdata, setEditdata] = useState({});\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [SalesPersonList, setSalesPersonList] = useState([]);\r\n  const Params = useParams();\r\n  const location = useLocation();\r\n\r\n  const [OrderedListData, setOrderedListData] = useState([\r\n    {\r\n      productId: \"\",\r\n      Product_Title: \"\",\r\n      Qty_Sales: \"\",\r\n      Qty_Return: 0,\r\n      Product_Price: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...OrderedListData];\r\n    list[index][name] = value;\r\n    setOrderedListData(list);\r\n  };\r\n  useEffect(() => {\r\n    let getFromLocalData = JSON.parse(\r\n      localStorage.getItem(\"OrderList\")\r\n    )?.orderItems;\r\n    if (location?.state) {\r\n      setOrderedListData(location?.state.orderItems);\r\n      let grandTotal = location?.state?.orderItems?.reduce(\r\n        (a, b) => a + b?.productId?.Product_MRP,\r\n        0\r\n      );\r\n\r\n      setGrandTotalAmt(grandTotal);\r\n      localStorage.setItem(\"EditoneProduct\", location?.state);\r\n      setEditdata(location?.state);\r\n    } else {\r\n      setOrderedListData(getFromLocalData);\r\n      let grandTotal = location?.state?.orderItems?.reduce(\r\n        (a, b) => a + b?.productId?.Product_MRP,\r\n        0\r\n      );\r\n      console.log(grandTotal);\r\n      setGrandTotalAmt(grandTotal);\r\n    }\r\n  }, []);\r\n  useEffect(() => {}, [OrderedListData]);\r\n\r\n  useEffect(() => {\r\n    Create_Sales_personList()\r\n      .then((res) => {\r\n        setSalesPersonList(res?.SalesPerson);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(OrderedListData);\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userData);\r\n\r\n    let myarr = OrderedListData?.map((ele, i) => {\r\n      return {\r\n        productId: ele?.productId?._id,\r\n        Qty_Sales: ele?.qty,\r\n        Qty_Return: Number(ele?.returnQty),\r\n        Product_Price: ele?.price,\r\n      };\r\n    });\r\n\r\n    let payload = {\r\n      userId: userData?._id,\r\n      returnItems: myarr,\r\n      mobileNumber: userData?.mobileNumber,\r\n      email: userData.email,\r\n      Return_amount: grandTotalAmt,\r\n      orderId: location?.state?._id,\r\n      created_by: userData?._id,\r\n    };\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SalesReturnProduct(payload)\r\n        .then((res) => {\r\n          swal(\"Sales Returned Successfully\");\r\n\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Sales Return</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => history.goBack()}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              {OrderedListData &&\r\n                OrderedListData?.map((item, index) => {\r\n                  console.log(item);\r\n                  return (\r\n                    <Row className=\"\" key={index}>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Product Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"Product_Title\"\r\n                            readOnly\r\n                            placeholder=\"Product Name\"\r\n                            value={item?.productId?.Product_Title}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Price</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"price\"\r\n                            readOnly\r\n                            placeholder=\"Price\"\r\n                            value={item?.productId?.Product_MRP}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Purchased Quantity</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            readOnly\r\n                            name=\"qty\"\r\n                            placeholder=\"Req_Qty\"\r\n                            value={item?.qty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProduct(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Return Quantity</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"returnQty\"\r\n                            placeholder=\"Return Quantity\"\r\n                            value={OrderedListData?.returnQty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProduct(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                })}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total :\r\n                      <strong>\r\n                        {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                          ? 0\r\n                          : grandTotalAmt}\r\n                      </strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SalesReturnView;\r\n","import React, { useRef } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n  CustomInput,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\nimport { ContextLayout } from \"../../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport Logo from \"../../../../../assets/img/profile/pages/logomain.png\";\r\nimport Papa from \"papaparse\";\r\nimport { Eye, Trash2, ChevronDown, Edit, CornerDownLeft } from \"react-feather\";\r\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\r\nimport \"../../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport { ImDownload } from \"react-icons/im\";\r\nimport {\r\n  FaArrowAltCircleLeft,\r\n  FaArrowAltCircleRight,\r\n  FaFilter,\r\n  FaPlus,\r\n} from \"react-icons/fa\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  Purchase_ReturnList,\r\n  Delete_targetINlist,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  BsCloudDownloadFill,\r\n  BsFillArrowDownSquareFill,\r\n  BsFillArrowUpSquareFill,\r\n} from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport UserContext from \"../../../../../context/Context\";\r\nimport SalesReturnView from \".././SalesReturnView\";\r\nimport { CheckPermission } from \"../../house/CheckPermission\";\r\nimport SuperAdminUI from \"../../../../SuperAdminUi/SuperAdminUI\";\r\n\r\nconst SelectedColums = [];\r\n\r\nclass PurchaseReturn extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridRef = React.createRef();\r\n    this.gridApi = null;\r\n    this.state = {\r\n      isOpen: false,\r\n      MasterShow: false,\r\n\r\n      Arrindex: \"\",\r\n      rowData: [],\r\n      userName: \"\",\r\n      modal: false,\r\n      InsiderPermissions: {},\r\n      modalone: false,\r\n      ViewData: {},\r\n      setMySelectedarr: [],\r\n      SelectedCols: [],\r\n      paginationPageSize: 5,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      AllcolumnDefs: [],\r\n      SelectedcolumnDefs: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        enablePivot: true,\r\n        enableValue: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: \"UID\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          // checkboxSelection: true,\r\n          width: 80,\r\n          filter: true,\r\n        },\r\n\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"transactions\",\r\n          width: 180,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.View && (\r\n                    <Eye\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"green\"\r\n                      onClick={() => {\r\n                        this.togglemodal();\r\n                        this.handleChangeView(params.data, \"readonly\");\r\n                      }}\r\n                    />\r\n                  )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // {\r\n        //   headerName: \"Full Name\",\r\n        //   field: \"orderItems\",\r\n        //   filter: true,\r\n        //   width: 180,\r\n        //   valueGetter: params => {\r\n        //     if (params.data.orderItems && params.data.orderItems.length > 0) {\r\n        //       return params.data.fullName;\r\n        //     }\r\n        //     return null;\r\n        //   },\r\n        // },\r\n\r\n        {\r\n          headerName: \"Product Name\",\r\n          field: \"returnItems\",\r\n          filter: true,\r\n          width: 220,\r\n          valueGetter: (params) => {\r\n            if (\r\n              params.data.returnItems &&\r\n              params.data.returnItems?.length > 0\r\n            ) {\r\n              return params?.data?.returnItems?.map((val) => {\r\n                return val?.productId?.Product_Title;\r\n              });\r\n            }\r\n            return null;\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Size\",\r\n          field: \"returnItems\",\r\n          filter: true,\r\n          width: 220,\r\n          valueGetter: (params) => {\r\n            if (\r\n              params.data?.returnItems &&\r\n              params.data?.returnItems?.length > 0\r\n            ) {\r\n              return params?.data?.returnItems?.map((val) => {\r\n                return val?.productId?.Size;\r\n              });\r\n            }\r\n            return null;\r\n          },\r\n        },\r\n        {\r\n          headerName: \"HSN_Code\",\r\n          field: \"returnItems\",\r\n          filter: true,\r\n          width: 220,\r\n          valueGetter: (params) => {\r\n            if (params.data.returnItems && params.data.returnItems.length > 0) {\r\n              return params?.data?.returnItems?.map((val) => {\r\n                return val?.productId?.HSN_Code;\r\n              });\r\n            }\r\n            return null;\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Email\",\r\n          field: \"email\",\r\n          filter: true,\r\n          width: 200,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.email}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"MobileNo\",\r\n          field: \"mobileNumber\",\r\n          filter: true,\r\n          width: 150,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.mobileNumber}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        // {\r\n        //   headerName: \"Status\",\r\n        //   field: \"status\",\r\n        //   filter: true,\r\n        //   width: 150,\r\n        //   cellRendererFramework: params => {\r\n        //     return params.value === \"completed\" ? (\r\n        //       <div className=\"badge badge-pill badge-success\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     ) : params.value === \"pending\" ? (\r\n        //       <div className=\"badge badge-pill badge-warning\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     ) : (\r\n        //       <div className=\"badge badge-pill badge-success\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n      ],\r\n    };\r\n  }\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modalone: !prevState.modalone,\r\n    }));\r\n  };\r\n  LookupviewStart = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  handleChangeView = (data, types) => {\r\n    let type = types;\r\n    if (type == \"readonly\") {\r\n      console.log(\"ResponseData\", data.orderItems);\r\n      this.setState({ ViewOneUserView: true });\r\n      this.setState({ ViewOneData: data });\r\n    } else {\r\n      this.setState({ EditOneUserView: true });\r\n      this.setState({ EditOneData: data });\r\n    }\r\n  };\r\n  async Apicalling(id, db) {\r\n    this.setState({ Loading: true });\r\n    await Purchase_ReturnList(id, db)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({ Loading: false });\r\n\r\n        this.setState({ rowData: res?.PurchaseReturn });\r\n        this.setState({ AllcolumnDefs: this.state.columnDefs });\r\n        this.setState({ SelectedCols: this.state.columnDefs });\r\n\r\n        let userHeading = JSON.parse(localStorage.getItem(\"TargetList\"));\r\n        if (userHeading?.length) {\r\n          this.setState({ columnDefs: userHeading });\r\n          this.gridApi.setColumnDefs(userHeading);\r\n          this.setState({ SelectedcolumnDefs: userHeading });\r\n        } else {\r\n          this.setState({ columnDefs: this.state.columnDefs });\r\n          this.setState({ SelectedcolumnDefs: this.state.columnDefs });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ Loading: false });\r\n        this.setState({ rowData: [] });\r\n\r\n        console.log(err);\r\n      });\r\n  }\r\n  async componentDidMount() {\r\n    const UserInformation = this.context?.UserInformatio;\r\n    const InsidePermissions = CheckPermission(\"Purchase Return\");\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (userData?.rolename?.roleName === \"MASTER\") {\r\n      this.setState({ MasterShow: true });\r\n    }\r\n    await this.Apicalling(userData?._id, userData?.database);\r\n  }\r\n\r\n  runthisfunction(id) {\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          Delete_targetINlist(id)\r\n            .then((res) => {\r\n              let selectedData = this.gridApi.getSelectedRows();\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridRef.current = params.api;\r\n\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleChangeHeader = (e, value, index) => {\r\n    let check = e.target.checked;\r\n    if (check) {\r\n      SelectedColums?.push(value);\r\n    } else {\r\n      const delindex = SelectedColums?.findIndex(\r\n        (ele) => ele?.headerName === value?.headerName\r\n      );\r\n\r\n      SelectedColums?.splice(delindex, 1);\r\n    }\r\n  };\r\n  parseCsv(csvData) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: (result) => {\r\n          if (result.data && result.data.length > 0) {\r\n            resolve(result.data);\r\n          } else {\r\n            reject(new Error(\"No data found in the CSV\"));\r\n          }\r\n        },\r\n        error: (error) => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  generatePDF(parsedData) {\r\n    let pdfsize = [Object.keys(parsedData[0])][0].length;\r\n    let size = pdfsize > 15 ? \"a1\" : pdfsize < 14 > 10 ? \"a3\" : \"a4\";\r\n\r\n    const doc = new jsPDF(\"landscape\", \"mm\", size, false);\r\n    doc.setTextColor(5, 87, 97);\r\n    const tableData = parsedData.map((row) => Object.values(row));\r\n    doc.addImage(Logo, \"JPEG\", 10, 10, 50, 30);\r\n    let date = new Date();\r\n    doc.setCreationDate(date);\r\n    doc.text(\"UserAccount\", 14, 51);\r\n    doc.autoTable({\r\n      head: [Object.keys(parsedData[0])],\r\n      body: tableData,\r\n      startY: 60,\r\n    });\r\n\r\n    doc.save(\"UserList.pdf\");\r\n  }\r\n\r\n  exportToPDF = async () => {\r\n    const csvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    try {\r\n      const parsedData = await this.parseCsv(csvData);\r\n      this.generatePDF(parsedData);\r\n    } catch (error) {\r\n      console.error(\"Error parsing CSV:\", error);\r\n    }\r\n  };\r\n  processCell = (params) => {\r\n    return params.value;\r\n  };\r\n\r\n  convertCsvToExcel(csvData) {\r\n    return new Promise((resolve) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        complete: function (result) {\r\n          const worksheet = XLSX.utils.json_to_sheet(result.data);\r\n          const workbook = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n          const excelBuffer = XLSX.write(workbook, {\r\n            bookType: \"xlsx\",\r\n            type: \"array\",\r\n          });\r\n          const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          resolve(blob);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  downloadExcelFile(blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"Userlist.xlsx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  exportToExcel = async (e) => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    const blob = await this.convertCsvToExcel(CsvData);\r\n    this.downloadExcelFile(blob);\r\n  };\r\n\r\n  convertCSVtoExcel = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: (result) => {\r\n        const ws = XLSX.utils.json_to_sheet(result.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelType = \"xls\";\r\n        XLSX.writeFile(wb, `UserList.${excelType}`);\r\n      },\r\n    });\r\n  };\r\n\r\n  shiftElementUp = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex > 0) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex - 1 });\r\n      myArrayCopy.splice(currentIndex - 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n\r\n  shiftElementDown = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex < this.state.SelectedcolumnDefs.length - 1) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex + 1 });\r\n      myArrayCopy.splice(currentIndex + 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n  convertCsvToXml = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: (result) => {\r\n        const rows = result.data;\r\n\r\n        // Create XML\r\n        let xmlString = \"<root>\\n\";\r\n\r\n        rows.forEach((row) => {\r\n          xmlString += \"  <row>\\n\";\r\n          row.forEach((cell, index) => {\r\n            xmlString += `    <field${index + 1}>${cell}</field${index + 1}>\\n`;\r\n          });\r\n          xmlString += \"  </row>\\n\";\r\n        });\r\n\r\n        xmlString += \"</root>\";\r\n        const blob = new Blob([xmlString], { type: \"text/xml\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"output.xml\";\r\n        link.click();\r\n      },\r\n    });\r\n  };\r\n\r\n  HandleSetVisibleField = (e) => {\r\n    e.preventDefault();\r\n    debugger;\r\n    this.gridApi.setColumnDefs(this.state.SelectedcolumnDefs);\r\n    this.setState({ columnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ SelectedcolumnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ rowData: this.state.rowData });\r\n    localStorage.setItem(\r\n      \"TargetList\",\r\n      JSON.stringify(this.state.SelectedcolumnDefs)\r\n    );\r\n    this.LookupviewStart();\r\n  };\r\n  toggleDropdown = () => {\r\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\r\n  };\r\n  HeadingRightShift = () => {\r\n    const updatedSelectedColumnDefs = [\r\n      ...new Set([\r\n        ...this.state.SelectedcolumnDefs.map((item) => JSON.stringify(item)),\r\n        ...SelectedColums.map((item) => JSON.stringify(item)),\r\n      ]),\r\n    ].map((item) => JSON.parse(item));\r\n    this.setState({\r\n      SelectedcolumnDefs: [...new Set(updatedSelectedColumnDefs)], // Update the state with the combined array\r\n    });\r\n  };\r\n  handleLeftShift = () => {\r\n    let SelectedCols = this.state.SelectedcolumnDefs?.slice();\r\n    let delindex = this.state.Arrindex; /* Your delete index here */\r\n\r\n    if (SelectedCols && delindex >= 0) {\r\n      const splicedElement = SelectedCols?.splice(delindex, 1); // Remove the element\r\n\r\n      this.setState({\r\n        SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n      });\r\n    }\r\n  };\r\n  handleParentSubmit = (e) => {\r\n    e.preventDefault();\r\n    let SuperAdmin = JSON.parse(localStorage.getItem(\"SuperadminIdByMaster\"));\r\n    let id = SuperAdmin.split(\" \")[0];\r\n    let db = SuperAdmin.split(\" \")[1];\r\n    this.Apicalling(id, db);\r\n  };\r\n  handleDropdownChange = (selectedValue) => {\r\n    localStorage.setItem(\"SuperadminIdByMaster\", JSON.stringify(selectedValue));\r\n  };\r\n  render() {\r\n    if (this.state.Loading) {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20rem\",\r\n          }}>\r\n          <Spinner\r\n            style={{\r\n              height: \"4rem\",\r\n              width: \"4rem\",\r\n            }}\r\n            color=\"primary\">\r\n            Loading...\r\n          </Spinner>\r\n        </div>\r\n      );\r\n    }\r\n    const {\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n      SelectedcolumnDefs,\r\n      isOpen,\r\n      SelectedCols,\r\n      InsiderPermissions,\r\n      AllcolumnDefs,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Col className=\"app-user-list\">\r\n          {this.state.EditOneUserView && this.state.EditOneUserView ? (\r\n            <Row className=\"card\">\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end p-1\">\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({ EditOneUserView: false });\r\n                    }}\r\n                    color=\"danger\">\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              {/* <EditAccount EditOneData={this.state.EditOneData} /> */}\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {this.state.ViewOneUserView && this.state.ViewOneUserView ? (\r\n                <>\r\n                  <Row className=\"card\">\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-end p-1\">\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.setState({ ViewOneUserView: false });\r\n                          }}\r\n                          color=\"danger\">\r\n                          Back\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <SalesReturnView ViewOneData={this.state.ViewOneData} />\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col sm=\"12\">\r\n                    <Card>\r\n                      <Row className=\"mt-2 ml-2 mr-2\">\r\n                        <Col>\r\n                          <h1\r\n                            className=\"float-left\"\r\n                            style={{ fontWeight: \"600\" }}>\r\n                            Purchase Return List\r\n                          </h1>\r\n                        </Col>\r\n                        {this.state.MasterShow && (\r\n                          <Col>\r\n                            <SuperAdminUI\r\n                              onDropdownChange={this.handleDropdownChange}\r\n                              onSubmit={this.handleParentSubmit}\r\n                            />\r\n                          </Col>\r\n                        )}\r\n\r\n                        <Col>\r\n                          {InsiderPermissions && InsiderPermissions?.View && (\r\n                            <>\r\n                              <span className=\"mx-1\">\r\n                                <FaFilter\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  title=\"filter coloumn\"\r\n                                  size=\"35px\"\r\n                                  onClick={this.LookupviewStart}\r\n                                  color=\"#39cccc\"\r\n                                  className=\"float-right\"\r\n                                />\r\n                              </span>\r\n\r\n                              {/* <span>\r\n                            <Route\r\n                              render={({ history }) => (\r\n                                <Badge\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"float-right mr-1\"\r\n                                  color=\"primary\"\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      \"/app/softnumen/order/createorder\"\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <FaPlus size={15} /> Create Order\r\n                                </Badge>\r\n                              )}\r\n                            />\r\n                          </span> */}\r\n                            </>\r\n                          )}\r\n                          {InsiderPermissions &&\r\n                            InsiderPermissions?.Download && (\r\n                              <span className=\"mx-1\">\r\n                                <div className=\"dropdown-container float-right\">\r\n                                  <ImDownload\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    title=\"download file\"\r\n                                    size=\"35px\"\r\n                                    className=\"dropdown-button \"\r\n                                    color=\"#39cccc\"\r\n                                    onClick={this.toggleDropdown}\r\n                                  />\r\n                                  {isOpen && (\r\n                                    <div\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        zIndex: \"1\",\r\n                                        border: \"1px solid #39cccc\",\r\n                                        backgroundColor: \"white\",\r\n                                      }}\r\n                                      className=\"dropdown-content dropdownmy\">\r\n                                      <h5\r\n                                        onClick={() => this.exportToPDF()}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive mt-1\">\r\n                                        .PDF\r\n                                      </h5>\r\n                                      <h5\r\n                                        onClick={() =>\r\n                                          this.gridApi.exportDataAsCsv()\r\n                                        }\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive\">\r\n                                        .CSV\r\n                                      </h5>\r\n                                      <h5\r\n                                        onClick={this.convertCSVtoExcel}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive\">\r\n                                        .XLS\r\n                                      </h5>\r\n                                      <h5\r\n                                        onClick={this.exportToExcel}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive\">\r\n                                        .XLSX\r\n                                      </h5>\r\n                                      <h5\r\n                                        onClick={() => this.convertCsvToXml()}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive\">\r\n                                        .XML\r\n                                      </h5>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </span>\r\n                            )}\r\n                        </Col>\r\n                      </Row>\r\n                      <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n                        {this.state.rowData === null ? null : (\r\n                          <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                            <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                              <div className=\"mb-1\">\r\n                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                  <DropdownToggle tag=\"div\">\r\n                                    {this.gridApi\r\n                                      ? this.state.currenPageSize\r\n                                      : \"\" * this.state.getPageSize -\r\n                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {this.state.rowData.length -\r\n                                      this.state.currenPageSize *\r\n                                        this.state.getPageSize >\r\n                                    0\r\n                                      ? this.state.currenPageSize *\r\n                                        this.state.getPageSize\r\n                                      : this.state.rowData.length}{\" \"}\r\n                                    of {this.state.rowData.length}\r\n                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu right>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(5)}>\r\n                                      5\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(20)}>\r\n                                      20\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(50)}>\r\n                                      50\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(100)}>\r\n                                      100\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(134)}>\r\n                                      134\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap justify-content-end mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                  <Input\r\n                                    placeholder=\"search Item here...\"\r\n                                    onChange={(e) =>\r\n                                      this.updateSearchQuery(e.target.value)\r\n                                    }\r\n                                    value={this.state.value}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ContextLayout.Consumer className=\"ag-theme-alpine\">\r\n                              {(context) => (\r\n                                <AgGridReact\r\n                                  id=\"myAgGrid\"\r\n                                  gridOptions={this.gridOptions}\r\n                                  rowSelection=\"multiple\"\r\n                                  defaultColDef={defaultColDef}\r\n                                  columnDefs={columnDefs}\r\n                                  rowData={rowData}\r\n                                  onGridReady={this.onGridReady}\r\n                                  colResizeDefault={\"shift\"}\r\n                                  animateRows={true}\r\n                                  floatingFilter={false}\r\n                                  pagination={true}\r\n                                  paginationPageSize={\r\n                                    this.state.paginationPageSize\r\n                                  }\r\n                                  pivotPanelShow=\"always\"\r\n                                  enableRtl={context.state.direction === \"rtl\"}\r\n                                  ref={this.gridRef} // Attach the ref to the grid\r\n                                  domLayout=\"autoHeight\" // Adjust layout as needed\r\n                                />\r\n                              )}\r\n                            </ContextLayout.Consumer>\r\n                          </div>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.LookupviewStart}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}>\r\n          <ModalHeader toggle={this.LookupviewStart}>Change Fileds</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"12\" xl=\"4\" xs=\"12\">\r\n                <h4>Available Columns</h4>\r\n                <div className=\"mainshffling\">\r\n                  <div class=\"ex1\">\r\n                    {AllcolumnDefs &&\r\n                      AllcolumnDefs?.map((ele, i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              onClick={(e) =>\r\n                                this.handleChangeHeader(e, ele, i)\r\n                              }\r\n                              key={i}\r\n                              className=\"mycustomtag mt-1\">\r\n                              <span className=\"mt-1\">\r\n                                <h5\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"allfields\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    // checked={check && check}\r\n                                    className=\"mx-1\"\r\n                                  />\r\n\r\n                                  {ele?.headerName}\r\n                                </h5>\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"12\" xl=\"2\" xs=\"12\" className=\"colarrowbtn\">\r\n                <div className=\"mainarrowbtn\">\r\n                  <div style={{ cursor: \"pointer\" }}>\r\n                    <FaArrowAltCircleRight\r\n                      onClick={this.HeadingRightShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ cursor: \"pointer\" }} className=\"my-2\">\r\n                    <FaArrowAltCircleLeft\r\n                      onClick={this.handleLeftShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\" xl=\"6\" xs=\"12\">\r\n                <Row>\r\n                  <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n                    <h4>Visible Columns</h4>\r\n                    <div className=\"mainshffling\">\r\n                      <div class=\"ex1\">\r\n                        {SelectedcolumnDefs &&\r\n                          SelectedcolumnDefs?.map((ele, i) => {\r\n                            return (\r\n                              <>\r\n                                <div key={i} className=\"mycustomtag mt-1\">\r\n                                  <span className=\"mt-1\">\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.setState({ Arrindex: i })\r\n                                      }\r\n                                      style={{\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor: `${\r\n                                          this.state.Arrindex === i\r\n                                            ? \"#1877f2\"\r\n                                            : \"\"\r\n                                        }`,\r\n                                      }}\r\n                                      className=\"allfields\">\r\n                                      <IoMdRemoveCircleOutline\r\n                                        onClick={() => {\r\n                                          const SelectedCols =\r\n                                            this.state.SelectedcolumnDefs?.slice();\r\n                                          const delindex =\r\n                                            SelectedCols?.findIndex(\r\n                                              (element) =>\r\n                                                element?.headerName ==\r\n                                                ele?.headerName\r\n                                            );\r\n\r\n                                          if (SelectedCols && delindex >= 0) {\r\n                                            const splicedElement =\r\n                                              SelectedCols?.splice(delindex, 1); // Remove the element\r\n                                            // splicedElement contains the removed element, if needed\r\n\r\n                                            this.setState({\r\n                                              SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n                                            });\r\n                                          }\r\n                                        }}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        size=\"25px\"\r\n                                        color=\"red\"\r\n                                        className=\"mr-1\"\r\n                                      />\r\n\r\n                                      {ele?.headerName}\r\n                                    </h5>\r\n                                  </span>\r\n                                </div>\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"updownbtn justify-content-center\">\r\n                      <div>\r\n                        <BsFillArrowUpSquareFill\r\n                          className=\"arrowassign mb-1\"\r\n                          size=\"30px\"\r\n                          onClick={this.shiftElementUp}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillArrowDownSquareFill\r\n                          onClick={this.shiftElementDown}\r\n                          className=\"arrowassign\"\r\n                          size=\"30px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  {/* <Button onClick={this.HandleSetVisibleField} color=\"primary\">\r\n                    Submit\r\n                  </Button> */}\r\n\r\n                  <Badge\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"\"\r\n                    color=\"primary\"\r\n                    onClick={this.HandleSetVisibleField}>\r\n                    Submit\r\n                  </Badge>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.modalone}\r\n          toggle={this.toggleModal}\r\n          className=\"modal-dialog modal-xl\"\r\n          size=\"lg\"\r\n          backdrop={true}\r\n          fullscreen={true}>\r\n          <ModalHeader toggle={this.toggleModal}>View Details</ModalHeader>\r\n          <ModalBody className=\"myproducttable\"></ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default PurchaseReturn;\r\n","module.exports = __webpack_public_path__ + \"static/media/logomain.cee4d0c2.png\";","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n    Download: newparmisson?.permission.includes(\"Download\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n"],"sourceRoot":""}