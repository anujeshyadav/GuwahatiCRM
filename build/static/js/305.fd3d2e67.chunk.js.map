{"version":3,"sources":["views/apps/freshlist/accounts/CreateDispach.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CreateDispach","args","useState","CreatAccountView","setCreatAccountView","DeliveryBoy","setDeliveryBoy","AllUsers","setAllUsers","Countries","setCountry","formData","setFormData","DispatchData","setDispatchData","dropdownValue","setdropdownValue","index","setindex","error","setError","RoleList","setRoleList","modal","setModal","toggle","Context","useContext","UserContext","history","useHistory","location","useLocation","handleInputChange","e","type","i","target","name","value","checked","test","files","length","useEffect","state","data","localStorage","setItem","JSON","stringify","dispatchdata","parse","getItem","pageparmission","userdata","_id","Get_RoleList","then","res","ShowList","Role","filter","item","position","rolename","console","log","catch","err","swal","GoodDispatchxmlView","jsonData","xmlJs","xml2json","compact","spaces","GoodDispatch","input","userData","CreateAccountList","database","adminDetails","className","render","style","cursor","color","size","onClick","goBack","onSubmit","preventDefault","formdata","FormData","append","userId","orderId","orderItems","map","ele","_attributes","_text","CNUpload","MyDropdown","dropdown","AssignDeliveryBoy","Save_GoodDispatch","Edit_StatusDispatchList","status","response","Lookup","key","lg","md","sm","label","disabled","onKeyDown","includes","placeholder","onChange","right","top","phoneinput","inputClass","country","countryCodeEditable","phone","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","dateFormat","UserInformatio","moment","tz","timeZone","format","number","onWheel","multiple","Array","from","handleFileChange","required","mySelected","roleName","option","firstName","lastName","Ripple","isOpen","partyId","createdAt","split","address","grandTotal","striped","scope","productId","Product_Title","Product_MRP","Size","unitType","qty","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/305.fd3d2e67.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountList,\r\n  Edit_StatusDispatchList,\r\n  Get_RoleList,\r\n  GoodDispatchxmlView,\r\n  Save_GoodDispatch,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { array } from \"prop-types\";\r\n\r\nconst CreateDispach = (args) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [DeliveryBoy, setDeliveryBoy] = useState([]);\r\n  const [AllUsers, setAllUsers] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [DispatchData, setDispatchData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [RoleList, setRoleList] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const Context = useContext(UserContext);\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const handleFileChange = (e, type, i) => {\r\n    const { name, value, files } = e.target;\r\n    let allimages = Array.from(e.target.files[0]);\r\n    setindex(i);\r\n    setFormData({\r\n      ...formData,\r\n      [name]: e.target.files[0],\r\n    });\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        }\r\n      } else if (type == \"file\") {\r\n        if (e.target.files) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n          });\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!!location?.state?.data) {\r\n      localStorage.setItem(\r\n        \"DispatchItem\",\r\n        JSON.stringify(location?.state.data)\r\n      );\r\n\r\n      setDispatchData(location?.state.data);\r\n    } else {\r\n      let dispatchdata = JSON.parse(localStorage.getItem(\"DispatchItem\"));\r\n      setDispatchData(dispatchdata);\r\n    }\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let userid = pageparmission?._id;\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    Get_RoleList()\r\n      .then((res) => {\r\n        let ShowList = res?.Role?.filter(\r\n          (item, i) => item?.position > userdata?.rolename?.position\r\n        );\r\n\r\n        setRoleList(ShowList);\r\n        console.log(ShowList);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Roles List Not found\");\r\n      });\r\n    GoodDispatchxmlView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        setCreatAccountView(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setdropdownValue(JSON.parse(jsonData)?.GoodDispatch);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    CreateAccountList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        let value = res?.adminDetails;\r\n        console.log(value);\r\n        if (value) {\r\n          setDeliveryBoy(value);\r\n          setAllUsers(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    console.log(DispatchData);\r\n\r\n    let formdata = new FormData();\r\n\r\n    formdata.append(`userId`, DispatchData?.userId);\r\n    formdata.append(`orderId`, DispatchData?.orderId);\r\n    formdata.append(`status`, \"InProcess\");\r\n    formdata.append(`orderItems`, JSON.stringify(DispatchData?.orderItems));\r\n\r\n    CreatAccountView?.map((ele, i) => {\r\n      if (ele?.type?._attributes?.type == \"text\") {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      } else if (ele?.type?._attributes?.type == \"file\") {\r\n        if (ele?.name?._text == \"CNUpload\") {\r\n          formdata.append(\"file\", formData?.CNUpload);\r\n        }\r\n        if (ele?.name?._text == \"FetchSalesInvoice\") {\r\n        }\r\n      } else {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      }\r\n    });\r\n    formdata.append(\r\n      `${dropdownValue?.MyDropdown?.dropdown.name?._text}`,\r\n      formData.AssignDeliveryBoy\r\n    );\r\n\r\n    Save_GoodDispatch(formdata)\r\n      .then((res) => {\r\n        console.log(res);\r\n        let payload = { status: \"Inprocess\" };\r\n        Edit_StatusDispatchList(DispatchData?._id, payload)\r\n          .then((res) => {\r\n            console.log(res);\r\n            history.goBack();\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        if (res.status) {\r\n          swal(\"Good Dispatch Created Successfully\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        swal(\"Something went wrong Please Try again After Some Time\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Create Dispatch</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => history.goBack()}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* <hr /> */}\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.map((ele, i) => {\r\n                    if (ele?.Lookup?._text == \"yes\") {\r\n                      return (\r\n                        <>\r\n                          <>\r\n                            <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n\r\n                              <Input\r\n                                disabled\r\n                                className=\"form-control\"\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder=\"Click to fetch Details\"\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(e) => {\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  );\r\n                                }}\r\n                              />\r\n                              <Button\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  toggle();\r\n                                }}\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  right: 14,\r\n                                  top: 33,\r\n                                }}\r\n                                className=\"lookupview\"\r\n                                color=\"primary\">\r\n                                Fetch\r\n                              </Button>\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </Col>\r\n                          </>\r\n                        </>\r\n                      );\r\n                    }\r\n\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"in\"}\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [ele?.name?._text]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        console.log(ele);\r\n                        return (\r\n                          <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Countries}\r\n                                onChange={(country) => {\r\n                                  setCountry(country);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Country\"]: country?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            {ele?.type?._attributes?.type == \"date\" ? (\r\n                              <>\r\n                                <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      dateFormat={\r\n                                        Context?.UserInformatio?.dateFormat\r\n                                      }\r\n                                      value={\r\n                                        moment(formData[ele?.name?._text])\r\n                                          .tz(Context?.UserInformatio?.timeZone)\r\n                                          .format(\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          )\r\n                                        // formData[ele?.name?._text]\r\n                                      }\r\n                                      // value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {!!ele?.number ? (\r\n                            <>\r\n                              <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                                <FormGroup key={i}>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text}\r\n                                  </Label>\r\n\r\n                                  <Input\r\n                                    onWheel={(e) => {\r\n                                      e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                    }}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                              <FormGroup key={i}>\r\n                                {ele?.type?._attributes?.type &&\r\n                                ele?.type?._attributes?.type == \"file\" ? (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      multiple\r\n                                      className=\"form-control\"\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      //   value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        handleFileChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n                <Col lg=\"3\" md=\"3\">\r\n                  <div className=\"mt-1\">\r\n                    <FormGroup>\r\n                      <Label>Select Delivery Role *</Label>\r\n                      <CustomInput\r\n                        required\r\n                        type=\"select\"\r\n                        name=\"rolename\"\r\n                        // value={formData[\"rolename\"]}\r\n                        onChange={(e) => {\r\n                          let mySelected = AllUsers?.filter(\r\n                            (ele) => ele?.rolename == e.target.value\r\n                          );\r\n                          setDeliveryBoy(mySelected);\r\n                        }}>\r\n                        <option>--select--</option>\r\n                        {RoleList &&\r\n                          RoleList?.length &&\r\n                          RoleList?.map((ele, i) => {\r\n                            return (\r\n                              <option value={ele?._id}>{ele?.roleName}</option>\r\n                            );\r\n                          })}\r\n                      </CustomInput>\r\n                    </FormGroup>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"mt-1\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        {dropdownValue?.MyDropdown?.dropdown?.label?._text} *\r\n                      </Label>\r\n                      <CustomInput\r\n                        required\r\n                        type=\"select\"\r\n                        name={dropdownValue?.MyDropdown?.dropdown?.name?._text}\r\n                        value={\r\n                          formData[\r\n                            dropdownValue?.MyDropdown?.dropdown?.name?._text\r\n                          ]\r\n                        }\r\n                        onChange={handleInputChange}>\r\n                        <option value=\"\">--Assign Delivery Boy--</option>\r\n                        {DeliveryBoy &&\r\n                          DeliveryBoy?.map((option, index) => {\r\n                            return (\r\n                              <option key={option?._id} value={option?._id}>\r\n                                {`${option?.firstName} ${option?.lastName}`}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                      </CustomInput>\r\n                    </FormGroup>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                <Label className=\"mb-0\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => {\r\n                    setFormData({\r\n                      ...formData,\r\n                      [\"status\"]: e.target.value,\r\n                    });\r\n                  }}>\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Deactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                </div>\r\n              </Col> */}\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mr-1 mt-2 mx-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Modal\r\n          size=\"xl\"\r\n          // centered=\"true\"\r\n          isOpen={modal}\r\n          toggle={toggle}\r\n          {...args}\r\n          // style={{ maxWidth: \"1050px\" }}\r\n        >\r\n          <ModalHeader toggle={toggle}>Invoice Details</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"container\">\r\n              <Row>\r\n                <Col>\r\n                  <Label>Party Name :</Label>\r\n                  <h5 className=\"mx-1\">\r\n                    {DispatchData && DispatchData?.partyId?.firstName}\r\n                  </h5>\r\n                </Col>\r\n                <Col>\r\n                  <Label>Date Created :</Label>\r\n                  <h5>\r\n                    {DispatchData && DispatchData?.createdAt?.split(\"T\")[0]}\r\n                  </h5>\r\n                </Col>\r\n                <Col>\r\n                  <Label>Address :</Label>\r\n                  <h5>\r\n                    <strong>{DispatchData && DispatchData?.address} </strong>\r\n                  </h5>\r\n                </Col>\r\n                <Col>\r\n                  <Label>Grand Total :</Label>\r\n                  <h5>\r\n                    <strong>{DispatchData && DispatchData?.grandTotal} </strong>\r\n                    Rs/-\r\n                  </h5>\r\n                </Col>\r\n\r\n                {/* <Col>\r\n                <Label>Download Invoice :</Label>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <FaDownload\r\n                    onClick={this.handleStockTrxInvoiceShow}\r\n                    color=\"#00c0e\"\r\n                    fill=\"#00c0e\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    size={20}\r\n                  />\r\n                </div>\r\n              </Col> */}\r\n              </Row>\r\n              <Row className=\"p-2\">\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <h4>Product Details</h4>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Table style={{ cursor: \"pointer\" }} striped>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Product Name</th>\r\n                        <th>Price</th>\r\n                        <th>Size</th>\r\n                        <th>Unit</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {DispatchData?.orderItems &&\r\n                        DispatchData?.orderItems?.map((ele, i) => (\r\n                          <>\r\n                            <tr>\r\n                              <th scope=\"row\">{i + 1}</th>\r\n                              <td>{ele?.productId?.Product_Title}</td>\r\n                              <td>{ele?.productId?.Product_MRP}</td>\r\n                              <td>{ele?.Size}</td>\r\n                              <td>{ele?.unitType}</td>\r\n                              <td>{ele?.qty}</td>\r\n                              <td>\r\n                                {ele?.productId?.Product_MRP *\r\n                                  ele?.Size *\r\n                                  ele?.qty}\r\n                              </td>\r\n                            </tr>\r\n                          </>\r\n                        ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateDispach;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}