{"version":3,"sources":["views/apps/freshlist/customer/HRM/ViewHrm/JobeditList.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","JobeditList","useState","jobTitle","branch","jobCategory","numberOfPositions","status","startDate","endDate","skills","jobDescription","jobRequirements","data","setData","id","useParams","history","useHistory","useEffect","_Get","Hrm_ViewOne","response","Job","console","log","fetchData","handleSubmit","e","preventDefault","_Put","Hrm_Update","push","handleInputChange","target","name","value","color","type","onClick","goBack","onSubmit","md","for","onChange","placeholder","row","sm","size","offset","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/393.e4445bb2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { Card, CardBody, Form, FormGroup, Label, Input, Row, Col, Button, CardHeader } from 'reactstrap';\r\nimport { Hrm_Update, Hrm_ViewOne } from '../../../../../../ApiEndPoint/Api';\r\nimport { _Get, _Put } from '../../../../../../ApiEndPoint/ApiCalling';\r\n\r\nconst JobeditList = () => {\r\n    const [data, setData] = useState({\r\n        jobTitle: '',\r\n        branch: '',\r\n        jobCategory: '',\r\n        numberOfPositions: '',\r\n        status: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        skills: '',\r\n        jobDescription: '',\r\n        jobRequirements: '',\r\n    });\r\n\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await _Get(Hrm_ViewOne, id);\r\n                setData(response.Job);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [id]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await _Put(Hrm_Update, id, data);\r\n            history.push('/app/ajgroup/HRM/JobList')\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setData({ ...data, [name]: value });\r\n    };\r\n\r\n    const handleBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <h2>Job Form</h2>\r\n\r\n                <Button color=\" btn btn-danger\" type=\"button\" onClick={handleBack}>\r\n                    Back\r\n                </Button>\r\n\r\n            </CardHeader>\r\n            <CardBody>\r\n\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"jobTitle\">Job Title</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"jobTitle\"\r\n                                    id=\"jobTitle\"\r\n                                    value={data?.jobTitle}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder='Enter job Title'\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"branch\">Branch</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"branch\"\r\n                                    id=\"branch\"\r\n                                    value={data?.branch}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    <option value=\"\">Select Branch</option>\r\n                                    <option value=\"A\">A</option>\r\n                                    <option value=\"B\">B</option>\r\n                                    <option value=\"C\">C</option>\r\n\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"jobCategory\">Job Category</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"jobCategory\"\r\n                                    id=\"jobCategory\"\r\n                                    value={data?.jobCategory}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Select job category\"\r\n                                >\r\n                                    <option value=\"\">Select Job Category</option>\r\n                                    <option value=\"A\">A </option>\r\n                                    <option value=\"B\">B</option>\r\n\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"numberOfPositions\">Number of Positions</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"numberOfPositions\"\r\n                                    id=\"numberOfPositions\"\r\n                                    value={data?.numberOfPositions}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter number of positions\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"status\">Status</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"status\"\r\n                                    id=\"status\"\r\n                                    value={data?.status}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    <option value=\"\">Select Status</option>\r\n                                    <option value=\"Active\">Active</option>\r\n                                    <option value=\"Deactive\">Deactive</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"startDate\">Start Date</Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"startDate\"\r\n                                    id=\"startDate\"\r\n                                    value={data?.startDate}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Select start date\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"endDate\">End Date</Label>\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    name=\"endDate\"\r\n                                    id=\"endDate\"\r\n                                    value={data?.endDate}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Select end date\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"skills\">Skill</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"skills\"\r\n                                    id=\"skills\"\r\n                                    value={data?.skills}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter required skills\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"jobDescription\">Job Discraption</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"jobDescription\"\r\n                                    id=\"jobDescription\"\r\n                                    value={data?.jobDescription}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter job requirements\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"jobRequirements\">Job Requirement</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"jobRequirements\"\r\n                                    id=\"jobRequirements\"\r\n                                    value={data?.jobRequirements}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter job requirements\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup row>\r\n                        <Col sm={{ size: 8, offset: 4 }}>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Update\r\n                            </Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default JobeditList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}