{"version":3,"sources":["views/apps/freshlist/customer/HRM/ViewHrm/JobviewList.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","JobViewform","useState","jobTitle","branch","jobCategory","numberOfPositions","status","startDate","endDate","skills","jobDescription","jobRequirements","data","setData","id","useParams","history","useHistory","useEffect","_Get","Hrm_ViewOne","response","Job","console","log","fetchData","handleSubmit","e","preventDefault","_Put","Hrm_Update","handleInputChange","target","name","value","color","type","onClick","goBack","onSubmit","md","for","onChange","placeholder","readOnly","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":";4UACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQA8OeC,UAzOK,WAClB,MAAwBC,mBAAS,CAC/BC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,kBAAmB,GACnBC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,eAAgB,GAChBC,gBAAiB,KACjB,mBAXKC,EAAI,KAAEC,EAAO,KAaZC,EAAOC,cAAPD,GACFE,EAAUC,cAChBC,qBAAU,YACO,uCAAG,6GAESC,aAAKC,KAAaN,GAAI,KAAD,EAAtCO,EAAQ,OACdR,EAAQQ,EAASC,KAAK,gDAEtBC,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,kBAPc,mCAQfC,KACC,CAACX,IAEJ,IAAMY,EAAY,uCAAG,WAAOC,GAAC,iEACR,OAAnBA,EAAEC,iBAAiB,kBAGXC,aAAKC,KAAYhB,EAAIF,GAAM,KAAD,iDAGhCW,QAAQC,IAAI,EAAD,IAAQ,wDAGtB,gBAViB,sCAYZO,EAAoB,SAACJ,GACzB,MAAwBA,EAAEK,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdrB,EAAQ,2BAAKD,GAAI,kBAAGqB,EAAOC,MAO7B,OACE,kBAAC,IAAI,KACH,kBAAC,IAAU,KACT,4BAAI,YAEJ,kBAAC,IAAM,CAACC,MAAM,kBAAkBC,KAAK,SAASC,QATjC,WACjBrB,EAAQsB,WAQ+D,SAKrE,kBAAC,IAAQ,KAGP,kBAAC,IAAI,CAACC,SAAUb,GACd,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACc,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,YAAW,aACtB,kBAAC,IAAK,CACJL,KAAK,OACLH,KAAK,WACLnB,GAAG,WACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMV,SACbwC,SAAUX,EACVY,YAAY,kBACZC,UAAQ,MAId,kBAAC,IAAG,CAACJ,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,UAAS,UACpB,kBAAC,IAAK,CACJL,KAAK,SACLH,KAAK,SACLnB,GAAG,SACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMT,OACbuC,SAAUX,EACVa,UAAQ,GAER,4BAAQV,MAAM,IAAG,iBACjB,4BAAQA,MAAM,KAAI,KAClB,4BAAQA,MAAM,KAAI,KAClB,4BAAQA,MAAM,KAAI,SAM1B,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACM,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,eAAc,gBACzB,kBAAC,IAAK,CACJL,KAAK,SACLH,KAAK,cACLnB,GAAG,cACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMR,YACbsC,SAAUX,EACVY,YAAY,sBACZC,UAAQ,GAER,4BAAQV,MAAM,IAAG,uBACjB,4BAAQA,MAAM,KAAI,MAClB,4BAAQA,MAAM,KAAI,QAKxB,kBAAC,IAAG,CAACM,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,qBAAoB,uBAC/B,kBAAC,IAAK,CACJL,KAAK,SACLH,KAAK,oBACLnB,GAAG,oBACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMP,kBACbqC,SAAUX,EACVY,YAAY,4BACZC,UAAQ,OAKhB,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACJ,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,UAAS,UACpB,kBAAC,IAAK,CACJL,KAAK,SACLH,KAAK,SACLnB,GAAG,SACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMN,OACboC,SAAUX,EACVa,UAAQ,GAER,4BAAQV,MAAM,IAAG,iBACjB,4BAAQA,MAAM,UAAS,UACvB,4BAAQA,MAAM,YAAW,eAI/B,kBAAC,IAAG,CAACM,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,aAAY,cACvB,kBAAC,IAAK,CACJL,KAAK,OACLH,KAAK,YACLnB,GAAG,YACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAML,UACbmC,SAAUX,EACVY,YAAY,oBACZC,UAAQ,OAKhB,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACJ,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,WAAU,YACrB,kBAAC,IAAK,CACJL,KAAK,OACLH,KAAK,UACLnB,GAAG,UACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMJ,QACbkC,SAAUX,EACVY,YAAY,kBACZC,UAAQ,MAId,kBAAC,IAAG,CAACJ,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,UAAS,SACpB,kBAAC,IAAK,CACJL,KAAK,OACLH,KAAK,SACLnB,GAAG,SACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMH,OACbiC,SAAUX,EACVY,YAAY,wBACZC,UAAQ,OAKhB,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACJ,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,kBAAiB,mBAC5B,kBAAC,IAAK,CACJL,KAAK,OACLH,KAAK,iBACLnB,GAAG,iBACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMF,eACbgC,SAAUX,EACVY,YAAY,yBACZC,UAAQ,MAId,kBAAC,IAAG,CAACJ,GAAI,GACP,kBAAC,IAAS,KACR,kBAAC,IAAK,CAACC,IAAI,mBAAkB,mBAC7B,kBAAC,IAAK,CACJL,KAAK,OACLH,KAAK,kBACLnB,GAAG,kBACHoB,MAAW,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMD,gBACb+B,SAAUX,EACVY,YAAY,yBACZC,UAAQ,Y,iCCnO1B,2EAEIC,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBC,IAAKF,IAAUG,KACfC,MAAOJ,IAAUG,KACjBE,OAAQL,IAAUG,KAClBG,SAAUN,IAAUG,KACpBI,IAAKC,cACLC,UAAWT,IAAUU,OACrBC,UAAWX,IAAUY,QAMnBC,EAAY,SAAmBC,GACjC,IAAIL,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBT,EAAMY,EAAMZ,IACZI,EAAWQ,EAAMR,SACjBF,EAAQU,EAAMV,MACdC,EAASS,EAAMT,OACfU,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAOjB,GAElDqB,EAAUC,0BAAgBC,IAAWX,IAAWP,GAAM,MAAeE,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBK,GAMtM,MAJY,aAARI,IACFC,EAAWV,SAAWA,GAGJe,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,MAIfL,EAAUf,UAAYA,EACtBe,EAAUW,aA1BS,CACjBjB,IAAK,OA0BQM","file":"static/js/394.75a839e1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { Card, CardBody, Form, FormGroup, Label, Input, Row, Col, Button, CardHeader } from 'reactstrap';\r\nimport { Hrm_Update, Hrm_ViewOne } from '../../../../../../ApiEndPoint/Api';\r\nimport { _Get, _Put } from '../../../../../../ApiEndPoint/ApiCalling';\r\n\r\nconst JobViewform = () => {\r\n  const [data, setData] = useState({\r\n    jobTitle: '',\r\n    branch: '',\r\n    jobCategory: '',\r\n    numberOfPositions: '',\r\n    status: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    skills: '',\r\n    jobDescription: '',\r\n    jobRequirements: '',\r\n  });\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await _Get(Hrm_ViewOne, id);\r\n        setData(response.Job);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await _Put(Hrm_Update, id, data);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <h2>Job Form</h2>\r\n\r\n        <Button color=\" btn btn-danger\" type=\"button\" onClick={handleBack}>\r\n          Back\r\n        </Button>\r\n\r\n      </CardHeader>\r\n      <CardBody>\r\n\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"jobTitle\">Job Title</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  id=\"jobTitle\"\r\n                  value={data?.jobTitle}\r\n                  onChange={handleInputChange}\r\n                  placeholder='Enter job Title'\r\n                  readOnly\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"branch\">Branch</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"branch\"\r\n                  id=\"branch\"\r\n                  value={data?.branch}\r\n                  onChange={handleInputChange}\r\n                  readOnly\r\n                >\r\n                  <option value=\"\">Select Branch</option>\r\n                  <option value=\"A\">A</option>\r\n                  <option value=\"B\">B</option>\r\n                  <option value=\"C\">C</option>\r\n\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"jobCategory\">Job Category</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"jobCategory\"\r\n                  id=\"jobCategory\"\r\n                  value={data?.jobCategory}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Select job category\"\r\n                  readOnly\r\n                >\r\n                  <option value=\"\">Select Job Category</option>\r\n                  <option value=\"A\">A </option>\r\n                  <option value=\"B\">B</option>\r\n\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"numberOfPositions\">Number of Positions</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"numberOfPositions\"\r\n                  id=\"numberOfPositions\"\r\n                  value={data?.numberOfPositions}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter number of positions\"\r\n                  readOnly\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"status\">Status</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"status\"\r\n                  id=\"status\"\r\n                  value={data?.status}\r\n                  onChange={handleInputChange}\r\n                  readOnly\r\n                >\r\n                  <option value=\"\">Select Status</option>\r\n                  <option value=\"Active\">Active</option>\r\n                  <option value=\"Deactive\">Deactive</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"startDate\">Start Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  id=\"startDate\"\r\n                  value={data?.startDate}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Select start date\"\r\n                  readOnly\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"endDate\">End Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"endDate\"\r\n                  id=\"endDate\"\r\n                  value={data?.endDate}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Select end date\"\r\n                  readOnly\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"skills\">Skill</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"skills\"\r\n                  id=\"skills\"\r\n                  value={data?.skills}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter required skills\"\r\n                  readOnly\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"jobDescription\">Job Discraption</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"jobDescription\"\r\n                  id=\"jobDescription\"\r\n                  value={data?.jobDescription}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter job requirements\"\r\n                  readOnly\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"jobRequirements\">Job Requirement</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"jobRequirements\"\r\n                  id=\"jobRequirements\"\r\n                  value={data?.jobRequirements}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter job requirements\"\r\n                  readOnly\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default JobViewform;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}