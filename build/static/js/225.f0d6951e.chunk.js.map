{"version":3,"sources":["views/SuperAdminUi/SuperAdminUI.js","../node_modules/reactstrap/es/Spinner.js","views/apps/freshlist/accounts/DepartmentRoleAssign.js","views/apps/freshlist/accounts/RoleList.js","views/apps/freshlist/house/CheckPermission.js"],"names":["SuperAdminUI","onDropdownChange","onSubmit","useState","SuperAdminList","setSuperAdminList","UserInfo","setUserInfo","selectedSuperAdmin","setSelectedSuperAdmin","setSelectedSuperAdminName","List","localStorage","getItem","useEffect","console","log","Userinfo","JSON","parse","length","_GetList","Super_Admin_List","then","res","setItem","stringify","SuperAdmin","catch","err","rolename","roleName","value","onChange","e","selectedName","target","options","selectedIndex","getAttribute","split","selectedValue","type","map","ele","i","data-name","_id","database","firstName","lastName","lg","sm","md","onClick","preventDefault","color","_excluded","propTypes","tag","tagPropType","PropTypes","string","size","className","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","DepartmentRoleAssign","selectedDepartment","setSelectedDepartment","selectedRoles","setSelectedRoles","DepartMentList","setDepartMentList","RoleList","setRoleList","Loader","setLoader","setIndex","userData","URL","List_Department","Departments","Department","filter","status","RoleLists","Get_RoleList","WithoutAssign","Role","assign","Position","position","handleAssignRoles","userinfo","MainData","roleId","rolePosition","createdPosition","payload","created_by","departmentName","roles","_PostSave","Save_Assigned_Role","swal","style","display","justifyContent","marginTop","height","width","ms","render","history","cursor","backgroundColor","fontWeight","push","goBack","id","event","department","key","required","marginRight","includes","splice","indexOf","handleRoleChange","fontSize","slice","right","data","AllSelected","Number","handleAddRanking","placeholder","disabled","removeFormFields","buttons","cancel","text","_Delete","Delete_Department","Id","formValues","state","setState","handleSubmit","Loading","alldata","DepartmentPresent","DepartmentName","departmentDesc","Description","departmentId","Create_Department","handleShowDepartment","AllDeparts","values","toggleModal","prevState","modal","onGridReady","params","gridApi","api","gridColumnApi","columnApi","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","handleParentSubmit","MasterRoleList","db","Apicalling","handleDropdownChange","rowData","isOpen","InsiderPermissions","paginationPageSize","MasterShow","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","cellRendererFramework","desc","createdBy","Edit","border","padding","borderRadius","marginLeft","pathname","bind","this","name","_Get","Role_list_by_Master","pageparmission","rank","InsidePermissions","CheckPermission","selectedData","getSelectedRows","formData","FormData","append","updateRowData","remove","axiosConfig","post","response","xs","Create","View","Download","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","toggle","maxWidth","element","index","handleChange","rows","addFormFields","Component","contextType","UserContext","newparmisson","rolePermission","find","pagename","permission","Delete"],"mappings":"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","file":"static/js/225.f0d6951e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, CustomInput, Row } from \"reactstrap\";\r\nimport { Super_Admin_List } from \"../../ApiEndPoint/Api\";\r\nimport { _Get, _GetList } from \"../../ApiEndPoint/ApiCalling\";\r\n\r\nconst SuperAdminUI = ({ onDropdownChange, onSubmit }) => {\r\n  const [SuperAdminList, setSuperAdminList] = useState([]);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [selectedSuperAdmin, setSelectedSuperAdmin] = useState(\"\");\r\n  const [selectedSuperAdminName, setSelectedSuperAdminName] = useState(\"\");\r\n    let List = localStorage.getItem(\"AllSuper\");\r\n\r\n    useEffect(() => {\r\n      // Super_Admin_List;\r\n      console.log(\"a\");\r\n      let Userinfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n      setUserInfo(Userinfo);\r\n      let List = JSON.parse(localStorage.getItem(\"AllSuper\"));\r\n      if (List?.length) {\r\n        setSuperAdminList(List);\r\n      } else {\r\n        _GetList(Super_Admin_List)\r\n          .then((res) => {\r\n            // console.log(res?.SuperAdmin);\r\n            localStorage.setItem(\"AllSuper\", JSON.stringify(res?.SuperAdmin));\r\n            setSuperAdminList(res?.SuperAdmin);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    }, [List]);\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      // Call the onSubmit function passed from the parent component\r\n      onSubmit(e);\r\n    };\r\n    const handleDropdownChange = (e) => {\r\n      const selectedName = e.target.options[e.target.selectedIndex]\r\n        .getAttribute(\"data-name\")\r\n        ?.split(\" \")[0];\r\n      const selectedValue =\r\n        e.target.options[e.target.selectedIndex].getAttribute(\"data-name\");\r\n      setSelectedSuperAdmin(selectedName);\r\n      setSelectedSuperAdminName(selectedName);\r\n      onDropdownChange(selectedValue);\r\n    };\r\n    console.log(selectedSuperAdmin);\r\n    return (\r\n      <div>\r\n        <Row>\r\n          {UserInfo?.rolename?.roleName === \"MASTER\" &&\r\n            UserInfo?.rolename?.roleName === \"MASTER\" && (\r\n              <>\r\n                <Col>\r\n                  <CustomInput\r\n                    value={selectedSuperAdmin}\r\n                    onChange={handleDropdownChange}\r\n                    type=\"select\">\r\n                    <option>--select SuperAdmin--</option>\r\n                    {SuperAdminList &&\r\n                      SuperAdminList?.map((ele, i) => (\r\n                        <option\r\n                          data-name={`${ele?._id} ${ele?.database}`}\r\n                          value={ele?._id}>\r\n                          {ele?.firstName} {ele?.lastName}\r\n                        </option>\r\n                      ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n                  <Button onClick={handleSubmit} color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </>\r\n            )}\r\n        </Row>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default SuperAdminUI;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Input, Label, Row, Spinner } from \"reactstrap\";\r\nimport {\r\n  Get_RoleList,\r\n  _Get,\r\n  _GetList,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  List_Department,\r\n  Save_Assigned_Role,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst DepartmentRoleAssign = () => {\r\n  const [selectedDepartment, setSelectedDepartment] = useState(\"\");\r\n  const [selectedRoles, setSelectedRoles] = useState([]);\r\n  const [DepartMentList, setDepartMentList] = useState([]);\r\n  const [RoleList, setRoleList] = useState([]);\r\n  const [Loader, setLoader] = useState(false);\r\n  const [Index, setIndex] = useState(null);\r\n\r\n  //   const roleList = [\"Manager\", \"Developer\", \"Accountant\"]; // Replace with your actual role list\r\n\r\n  const handleDepartmentChange = (event) => {\r\n    const department = event.target.value;\r\n    setSelectedDepartment(department);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let URL = `${List_Department}/${userData?.database}`;\r\n    _GetList(URL)\r\n      .then((res) => {\r\n        let Departments = res?.Department?.filter(\r\n          (ele) => ele?.status == \"Active\"\r\n        );\r\n\r\n        setDepartMentList(Departments);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    RoleLists();\r\n  }, []);\r\n\r\n  const RoleLists = () => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    Get_RoleList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        let WithoutAssign = res?.Role?.filter(\r\n          (ele) =>\r\n            ele?.assign == 0 &&\r\n            ele?.roleName != \"SuperAdmin\" &&\r\n            ele?.roleName != \"Admin\"\r\n        );\r\n        let Position = userData?.rolename?.position;\r\n        let ShowList = res?.Role?.filter((ele, i) => ele?.position > Position);\r\n\r\n        setRoleList(WithoutAssign);\r\n        // setRoleList(res?.Role);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleRoleChange = (role, i) => {\r\n    setIndex(i);\r\n    const roles = [...selectedRoles];\r\n\r\n    if (roles?.includes(role)) {\r\n      // Remove role if it's already selected\r\n      roles?.splice(roles.indexOf(role), 1);\r\n    } else {\r\n      // Add role if it's not selected\r\n      roles.push(role);\r\n    }\r\n\r\n    setSelectedRoles(roles);\r\n  };\r\n\r\n  const handleAssignRoles = async () => {\r\n    // Implement your logic to assign roles to the selected department\r\n    let userinfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setLoader(true);\r\n    let MainData = selectedRoles?.map((ele, i) => {\r\n      return {\r\n        roleName: ele?.roleName,\r\n        database: ele?.database,\r\n        roleId: ele?._id,\r\n        rolePosition: ele?.createdPosition,\r\n      };\r\n    });\r\n    let payload = {\r\n      created_by: userinfo?._id,\r\n      database: userinfo?.database,\r\n      departmentName: selectedDepartment,\r\n      roles: MainData,\r\n    };\r\n\r\n    await _PostSave(Save_Assigned_Role, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setSelectedRoles([]);\r\n        setLoader(false);\r\n\r\n        swal(\"Roles Assigned Successfully\");\r\n        RoleLists();\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n\r\n        console.log(err);\r\n        swal(\"Something went wrong\");\r\n      });\r\n    // You can send this data to your server or manage it in your state\r\n  };\r\n  if (Loader) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"20rem\",\r\n        }}>\r\n        <Spinner\r\n          style={{\r\n            height: \"4rem\",\r\n            width: \"4rem\",\r\n          }}\r\n          color=\"primary\">\r\n          Loading...\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n  const handleAddRanking = (e, data, i) => {\r\n    let AllSelected = [...selectedRoles];\r\n\r\n    let index = selectedRoles?.indexOf(data);\r\n    AllSelected[index][\"createdPosition\"] = Number(e.target.value);\r\n    setSelectedRoles(AllSelected);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"card p-3\">\r\n        <Row>\r\n          <Col></Col>\r\n          <Col lg=\"2\" sm=\"2\" md=\"2\" ms=\"12\">\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"#39cccc\",\r\n                    color: \"white\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                  className=\" float-right\"\r\n                  color=\"#39cccc\"\r\n                  onClick={() =>\r\n                    history.push(\"/app/freshlist/account/CreateHeirarchy\")\r\n                  }>\r\n                  View Hierarchy\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n          <Col lg=\"2\" sm=\"2\" md=\"2\" ms=\"12\">\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"#39cccc\",\r\n                    color: \"white\",\r\n                    fontWeight: \"600\",\r\n                  }}\r\n                  className=\" float-right\"\r\n                  color=\"#39cccc\"\r\n                  onClick={() =>\r\n                    history.push(\"/app/Ajgroup/account/EditTeamRolePosition\")\r\n                  }>\r\n                  Edit Hierarchy\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n          {/* )} */}\r\n\r\n          <Col lg=\"2\">\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"float-right mr-1\"\r\n                  color=\"primary\"\r\n                  onClick={() => history.goBack()}>\r\n                  {\" \"}\r\n                  Back\r\n                  {/* <FaPlus size={15} /> Create User */}\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3 className=\"mb-3 mt-2\">\r\n            <strong>Assign Roles to Department</strong>\r\n          </h3>\r\n        </div>\r\n        <Row>\r\n          <Col lg=\"4\" sm=\"6\" md=\"4\">\r\n            <Label>Select Department:</Label>\r\n            <select\r\n              id=\"departments\"\r\n              className=\"form-control\"\r\n              onChange={handleDepartmentChange}\r\n              value={selectedDepartment}>\r\n              <option value=\"\">--Select Department--</option>\r\n              {DepartMentList &&\r\n                DepartMentList?.map((department, i) => (\r\n                  <option key={department?._id} value={department?._id}>\r\n                    {department?.departmentName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3 className=\"mb-3\">\r\n            {RoleList && RoleList ? (\r\n              <>\r\n                <strong>Choose Roles</strong>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <strong>No Roles Found</strong>\r\n              </>\r\n            )}\r\n          </h3>\r\n        </div>\r\n        <Row>\r\n          {RoleList.map((role, i) => (\r\n            <Col lg=\"6\" sm=\"12\" md=\"6\">\r\n              <div\r\n                key={role?._id}\r\n                className=\"form-label-group d-flex justify-content-space-between\">\r\n                <input\r\n                  className=\"mt-1\"\r\n                  required\r\n                  type=\"checkbox\"\r\n                  style={{ marginRight: \"3px\", height: \"22px\", width: \"22px\" }}\r\n                  id={role}\r\n                  value={role}\r\n                  //   checked={selectedRoles?.includes(role?._id)}\r\n                  onChange={() => handleRoleChange(role, i)}\r\n                />\r\n                <span\r\n                  className=\"mb-1 ml-1\"\r\n                  style={{ marginRight: \"20px\", fontSize: \"25px\" }}>\r\n                  {role?.roleName?.length > 12 ? (\r\n                    <>{role?.roleName?.slice(0, 18)}..</>\r\n                  ) : (\r\n                    <>{role?.roleName}</>\r\n                  )}\r\n                </span>\r\n\r\n                <span\r\n                  className=\"input\"\r\n                  style={{ position: \"absolute\", right: 20, width: \"100px\" }}>\r\n                  <Input\r\n                    onChange={(e) => handleAddRanking(e, role, i)}\r\n                    placeholder=\"Ex. 1 or 2 or 3\"\r\n                    type=\"number\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleAssignRoles}\r\n            disabled={!selectedDepartment || selectedRoles.length === 0}>\r\n            Assign Roles\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepartmentRoleAssign;\r\n","import React from \"react\";\r\nimport { FaPencilAlt } from \"react-icons/fa\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  Badge,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport xmlJs from \"xml-js\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown, Edit, Trash, Edit2 } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { BsEye, BsTrash } from \"react-icons/bs\";\r\nimport {\r\n  CreateAccountView,\r\n  Get_RoleList,\r\n  _Delete,\r\n  _Get,\r\n  _GetList,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { CheckPermission } from \"../house/CheckPermission\";\r\nimport SuperAdminUI from \"../../../SuperAdminUi/SuperAdminUI\";\r\nimport {\r\n  Create_Department,\r\n  Delete_Department,\r\n  List_Department,\r\n  Role_list_by_Master,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport DepartmentRoleAssign from \"./DepartmentRoleAssign\";\r\n\r\nclass RoleList extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rowData: [],\r\n      isOpen: false,\r\n      formValues: [{ DepartmentName: \"\", Description: \"\" }],\r\n      modal: false,\r\n      DepartmentName: \"\",\r\n      InsiderPermissions: {},\r\n      userData: {},\r\n      paginationPageSize: 20,\r\n      Position: 0,\r\n      MasterShow: false,\r\n      DepartmentPresent: false,\r\n      MasterRoleList: false,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: \"S.No\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          width: 150,\r\n          filter: true,\r\n        },\r\n        {\r\n          headerName: \"Role Name\",\r\n          field: \"roleName\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 160,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div className=\"\">\r\n                  <span>{params?.data?.roleName}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Role desc\",\r\n          field: \"desc\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 230,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div className=\"\">\r\n                  <span>{params?.data?.desc}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // {\r\n        //   headerName: \"Under Department\",\r\n        //   field: \"desc\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 230,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div className=\"\">\r\n        //           <span>{params?.data?.desc}</span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"sortorder\",\r\n          field: \"transactions\",\r\n          width: 200,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                {/* {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions.View && (\r\n                  <BsEye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/account/updateexistingrole/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )} */}\r\n\r\n                {this.state.userData &&\r\n                this.state.userData?._id == params?.data?.createdBy?._id ? (\r\n                  <>\r\n                    {this.state.userData?._id ==\r\n                      params?.data?.createdBy?._id && (\r\n                      <>\r\n                        {this.state.InsiderPermissions &&\r\n                          this.state.InsiderPermissions.Edit && (\r\n                            <Route\r\n                              render={({ history }) => (\r\n                                <span\r\n                                  style={{\r\n                                    border: \"1px solid white\",\r\n                                    padding: \"10px\",\r\n                                    borderRadius: \"30px\",\r\n                                    backgroundColor: \"rgb(212, 111, 16)\",\r\n                                    marginLeft: \"3px\",\r\n                                  }}>\r\n                                  <FaPencilAlt\r\n                                    className=\"\"\r\n                                    size=\"20px\"\r\n                                    color=\"white\"\r\n                                    onClick={() =>\r\n                                      history.push({\r\n                                        pathname: `/app/freshlist/account/editRole/${params?.data?._id}`,\r\n                                        data: params,\r\n                                      })\r\n                                    }\r\n                                  />\r\n                                </span>\r\n                              )}\r\n                            />\r\n                          )}\r\n                      </>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {this.state.MasterShow && this.state.MasterShow && (\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <span\r\n                            style={{\r\n                              border: \"1px solid white\",\r\n                              padding: \"10px\",\r\n                              borderRadius: \"30px\",\r\n                              backgroundColor: \"rgb(212, 111, 16)\",\r\n                              marginLeft: \"3px\",\r\n                            }}>\r\n                            <FaPencilAlt\r\n                              className=\"\"\r\n                              size=\"20px\"\r\n                              color=\"white\"\r\n                              onClick={() =>\r\n                                history.push({\r\n                                  pathname: `/app/freshlist/account/editRole/${params?.data?._id}`,\r\n                                  data: params,\r\n                                })\r\n                              }\r\n                            />\r\n                          </span>\r\n                        )}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {/* )} */}\r\n                {/* {this.state.Deletepermisson && (\r\n                <BsTrash\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"red\"\r\n                  onClick={() => {\r\n                    this.runthisfunction(params.data.id);\r\n                  }}\r\n                />\r\n              )} */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(i, e) {\r\n    let formValues = this.state.formValues;\r\n    formValues[i][e.target.name] = e.target.value;\r\n    this.setState({ formValues });\r\n  }\r\n\r\n  addFormFields() {\r\n    this.setState({\r\n      formValues: [\r\n        ...this.state.formValues,\r\n        { DepartmentName: \"\", Description: \"\" },\r\n      ],\r\n    });\r\n  }\r\n\r\n  removeFormFields = (data, i) => {\r\n    console.log(data, i);\r\n\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          _Delete(Delete_Department, data?.Id)\r\n            .then((res) => {\r\n              console.log(res);\r\n              let formValues = this.state.formValues;\r\n              formValues.splice(i, 1);\r\n              this.setState({ formValues });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    this.setState({ Loading: true });\r\n    e.preventDefault();\r\n    let userinfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let alldata = [];\r\n    if (this.state.DepartmentPresent) {\r\n      alldata = this.state.formValues?.map((ele, i) => {\r\n        return {\r\n          departmentName: ele?.DepartmentName,\r\n          departmentDesc: ele?.Description,\r\n          database: userinfo?.database,\r\n          departmentId: ele?.Id ? ele?.Id : null,\r\n          created_by: userinfo?._id,\r\n        };\r\n      });\r\n    } else {\r\n      alldata = this.state.formValues?.map((ele, i) => {\r\n        return {\r\n          departmentName: ele?.DepartmentName,\r\n          departmentDesc: ele?.Description,\r\n          database: userinfo?.database,\r\n          departmentId: ele?.Id ? ele?.Id : null,\r\n          created_by: userinfo?._id,\r\n        };\r\n      });\r\n    }\r\n\r\n    let payload = {\r\n      Departments: alldata,\r\n    };\r\n\r\n    let URL = Create_Department;\r\n    await _PostSave(URL, payload)\r\n      .then((res) => {\r\n        this.setState({ Loading: false });\r\n\r\n        swal(\"Departments Created\");\r\n        localStorage.setItem(\"CompanyDepartments\", JSON.stringify(payload));\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ Loading: false });\r\n\r\n        console.log(err);\r\n      });\r\n  };\r\n  handleShowDepartment = () => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let URL = `${List_Department}/${userData?.database}`;\r\n    _GetList(URL)\r\n      .then((res) => {\r\n        let AllDeparts = res?.Department?.filter(\r\n          (ele) => ele?.status == \"Active\"\r\n        );\r\n        if (AllDeparts) {\r\n          let values = AllDeparts?.map((ele, i) => {\r\n            return {\r\n              DepartmentName: ele?.departmentName,\r\n              Description: ele?.departmentDesc,\r\n              Id: ele?._id,\r\n            };\r\n          });\r\n          if (values?.length) {\r\n            this.setState({ DepartmentPresent: true });\r\n          }\r\n          this.setState({\r\n            formValues: values,\r\n          });\r\n        }\r\n\r\n        //  setDepartMentList(res?.Department[0]?.department);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n  async Apicalling(id, db, value) {\r\n    this.setState({ Loading: true });\r\n    if (value) {\r\n      await _Get(Role_list_by_Master, id)\r\n        .then((res) => {\r\n          console.log(res?.Role);\r\n          this.setState({ Loading: false });\r\n          this.setState({ rowData: res?.Role });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ Loading: false });\r\n          this.setState({ rowData: [] });\r\n\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      await Get_RoleList(id, db)\r\n        .then((res) => {\r\n          this.setState({ Loading: false });\r\n\r\n          this.setState({ rowData: res?.Role });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ Loading: false });\r\n          this.setState({ rowData: [] });\r\n\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    this.handleShowDepartment();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    this.setState({ Position: pageparmission?.rolename.rank });\r\n    this.setState({ userData: pageparmission });\r\n\r\n    if (pageparmission?.rolename?.roleName === \"MASTER\") {\r\n      this.setState({ MasterShow: true });\r\n      this.setState({ MasterRoleList: true });\r\n    }\r\n\r\n    let value = pageparmission?.rolename?.roleName == \"MASTER\";\r\n    const InsidePermissions = CheckPermission(\"Create User\");\r\n\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n    await this.Apicalling(pageparmission?._id, pageparmission?.database, value);\r\n  }\r\n\r\n  runthisfunction(id) {\r\n    // console.log(id);\r\n    let selectedData = this.gridApi.getSelectedRows();\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          const formData = new FormData();\r\n          formData.append(\"user_id\", id);\r\n          this.gridApi.updateRowData({ remove: selectedData });\r\n          axiosConfig.post(`/userdelete`, formData).then((response) => {});\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files[0] });\r\n  //     this.setState({ selectedName: event.target.files[0].name });\r\n  //     console.log(event.target.files[0]);\r\n  //   };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files });\r\n  //     this.setState({ selectedName: event.target.files.name });\r\n  //     console.log(event.target.files);\r\n  //   };\r\n  //   changeHandler1 = (e) => {\r\n  //     this.setState({ status: e.target.value });\r\n  //   };\r\n  //   changeHandler = (e) => {\r\n  //     this.setState({ [e.target.name]: e.target.value });\r\n  //   };\r\n  //   submitHandler = (e) => {\r\n  //     e.preventDefault();\r\n  //     const data = new FormData();\r\n  //     data.append(\"banner_title\", this.state.banner_title);\r\n  //     data.append(\"bannertype\", this.state.bannertype);\r\n  //     data.append(\"status\", this.state.status);\r\n  //     for (const file of this.state.selectedFile) {\r\n  //       if (this.state.selectedFile !== null) {\r\n  //         data.append(\"banner_img\", file, file.name);\r\n  //       }\r\n  //     }\r\n\r\n  //     axiosConfig\r\n  //       .post(\"/addbanner\", data)\r\n  //       .then((response) => {\r\n  //         console.log(response);\r\n  //         swal(\"Successful!\", \"You clicked the button!\", \"success\");\r\n  //         this.props.history.push(\"/app/freshlist/banner/bannerList\");\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   };\r\n  handleParentSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ MasterRoleList: false });\r\n    let SuperAdmin = JSON.parse(localStorage.getItem(\"SuperadminIdByMaster\"));\r\n    let id = SuperAdmin.split(\" \")[0];\r\n    let db = SuperAdmin.split(\" \")[1];\r\n    this.Apicalling(id, db, false);\r\n  };\r\n  handleDropdownChange = (selectedValue) => {\r\n    localStorage.setItem(\"SuperadminIdByMaster\", JSON.stringify(selectedValue));\r\n  };\r\n  render() {\r\n    if (this.state.Loading) {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20rem\",\r\n          }}>\r\n          <Spinner\r\n            style={{\r\n              height: \"4rem\",\r\n              width: \"4rem\",\r\n            }}\r\n            color=\"primary\">\r\n            Loading...\r\n          </Spinner>\r\n        </div>\r\n      );\r\n    }\r\n    // console.log(this.state.InsiderPermissions);\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"mt-2 mx-2 mr-2\">\r\n              <Col lg=\"1\" md=\"1\" sm=\"6\" xs=\"12\">\r\n                <h3 className=\"float-left\" style={{ fontWeight: \"600\" }}>\r\n                  Role List\r\n                </h3>\r\n              </Col>\r\n              {this.state.MasterShow && (\r\n                <Col>\r\n                  <SuperAdminUI\r\n                    onDropdownChange={this.handleDropdownChange}\r\n                    onSubmit={this.handleParentSubmit}\r\n                  />\r\n                </Col>\r\n              )}\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" md=\"2\" sm=\"2\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() =>\r\n                              history.push(\"/app/freshlist/account/addRoleNew\")\r\n                            }>\r\n                            <FaPlus size={15} /> Role\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              {/* {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() =>\r\n                              history.push(\r\n                                \"/app/Ajgroup/account/AssignToSuperAdmin\"\r\n                              )\r\n                            }>\r\n                            Assign To SuperAdmin\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )} */}\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" sm=\"2\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() => {\r\n                              history.push(\r\n                                \"/app/Ajgroup/account/DepartmentRoleAssign\"\r\n                              );\r\n                            }}>\r\n                            Role Assignment\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" sm=\"2\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() => {\r\n                              // history.push(\"/app/freshlist/account/addRoleNew\")\r\n                              this.toggleModal();\r\n                            }}>\r\n                            Department\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.View && (\r\n                  <>\r\n                    {/* {this.state.Position == 1 && ( */}\r\n                    <Col lg=\"2\" sm=\"2\" md=\"2\" ms=\"12\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() =>\r\n                              history.push(\r\n                                \"/app/freshlist/account/CreateHeirarchy\"\r\n                              )\r\n                            }>\r\n                            View Hierarchy\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </Col>\r\n                    {/* )} */}\r\n                  </>\r\n                )}\r\n            </Row>\r\n            {this.state.InsiderPermissions &&\r\n              this.state.InsiderPermissions?.View && (\r\n                <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-1 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}>\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}>\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}>\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}>\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"Search here...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          {this.state.InsiderPermissions &&\r\n                            this.state.InsiderPermissions?.Download && (\r\n                              <div className=\"export-btn\">\r\n                                <Button.Ripple\r\n                                  color=\"primary\"\r\n                                  onClick={() =>\r\n                                    this.gridApi.exportDataAsCsv()\r\n                                  }>\r\n                                  Export as CSV\r\n                                </Button.Ripple>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              )}\r\n          </Card>\r\n        </Col>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggleModal}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}>\r\n          <ModalHeader toggle={this.toggleModal}>Add Department</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <div className=\"d-flex justify-content-center mb-2\">\r\n              <b>\r\n                <h3>Create Your Departments</h3>\r\n              </b>\r\n            </div>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              {this.state.formValues?.map((element, index) => (\r\n                <Row key={index}>\r\n                  <Col lg=\"4\" sm=\"6\" md=\"4\" className=\"mb-2\">\r\n                    <Label className=\"mb-1\">Create Department</Label>\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Department Name\"\r\n                      name=\"DepartmentName\"\r\n                      value={element.DepartmentName || \"\"}\r\n                      onChange={(e) => this.handleChange(index, e)}\r\n                      type=\"text\"\r\n                    />\r\n                  </Col>\r\n                  <Col lg=\"4\" sm=\"6\" md=\"4\" className=\"mb-2\">\r\n                    <Label className=\"mb-1\"> Description</Label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      rows={2}\r\n                      required\r\n                      placeholder=\"Department Description\"\r\n                      name=\"Description\"\r\n                      value={element.Description || \"\"}\r\n                      onChange={(e) => this.handleChange(index, e)}\r\n                      type=\"text\"\r\n                    />\r\n                  </Col>\r\n                  <Col lg=\"4\" sm=\"6\" md=\"4\" className=\"\">\r\n                    <div className=\"mt-4\">\r\n                      {index ? (\r\n                        <Button\r\n                          color=\"danger\"\r\n                          type=\"button\"\r\n                          className=\"button remove\"\r\n                          onClick={() => this.removeFormFields(element, index)}>\r\n                          Remove\r\n                        </Button>\r\n                      ) : null}\r\n\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"button add ml-1\"\r\n                        type=\"button\"\r\n                        onClick={() => this.addFormFields()}>\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n\r\n              <div className=\"d-flex justify-content-center mt-1\">\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default RoleList;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n    Download: newparmisson?.permission.includes(\"Download\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n"],"sourceRoot":""}