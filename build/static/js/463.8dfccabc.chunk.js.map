{"version":3,"sources":["views/apps/freshlist/parts/Addorderbycashbook.js"],"names":["GrandTotal","SelectedITems","SelectedSize","Addorderbycashbook","args","useState","setIndex","error","ProductList","setProductList","PartyList","setPartyList","PartyId","setPartyId","UnitList","setUnitList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","productId","availableQty","qty","price","totalprice","Size","unitQty","product","setProduct","handleRequredQty","e","index","avalaibleSize","console","log","target","name","value","list","Number","amt","length","map","val","reduce","a","b","subtotal","acc","useEffect","userId","JSON","parse","localStorage","getItem","_id","ProductListView","then","res","Product","catch","err","CreatePartyList","Party","UnitListView","Unit","userInfo","addMoreProduct","unitType","removeMoreProduct","i","newFormValues","splice","onRemove1","selectedList","removedItem","className","render","history","color","size","onClick","push","onSubmit","preventDefault","fullname","firstName","lastName","payload","fullName","address","currentAddress","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","swal","Ordercashbook","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","handleSelectionParty","onRemove","displayValue","type","onChange","key","prevProductList","updatedProductList","updatedProduct","Product_MRP","handleSelection","disabled","placeholder","min","autocomplete","updatedUnitList","primaryUnit","ele","indextotal","handleSelectionUnit","Ripple"],"mappings":"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","file":"static/js/463.8dfccabc.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n  BaseUnitListView,\r\n  Ordercashbook\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst Addorderbycashbook = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      totalprice: \"\", //no\r\n      Size: \"\",\r\n      unitQty: \"\",\r\n      // partyId: \"\", //no\r\n      // DateofDelivery: \"\", //no\r\n    },\r\n  ]);\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    setIndex(index);\r\n    console.log(product);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = Number(value);\r\n    // console.log(GrandTotal);\r\n\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map(val => {\r\n        console.log(val.qty * val.price);\r\n        GrandTotal[index] = val.Size * val.qty * val.price;\r\n\r\n        list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n        return val.Size * val.qty * val.price;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n    }\r\n    console.log(list);\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem._id);\r\n  };\r\n\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  const handleSelectionUnit = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      // debugger;\r\n      const updatedUnitList = [...prevProductList];\r\n      const updatedProduct = { ...updatedUnitList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem.unitQty;\r\n      updatedProduct.unitQty = selectedItem.primaryUnit;\r\n      updatedUnitList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        // console.log(ele?.qty * ele.price * SelectedSize[i]?.unitQty);\r\n        updatedUnitList[index][\"totalprice\"] =\r\n          ele?.qty * ele.price * SelectedSize[i]?.unitQty;\r\n        let indextotal = ele?.price * ele.qty * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      console.log(amt);\r\n      // setPriceTotal(amt);\r\n      setGrandTotalAmt(amt);\r\n      return updatedUnitList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  let subtotal = product?.reduce((acc, product) => acc + product.totalprice, 0);\r\n  console.log(subtotal);\r\n  // let UnitPrice = product?.reduce((acc, product) => acc + product.unitQty, 0);\r\n  // let totalPrice = UnitPrice * subtotal;\r\n  let taxRate = 0.1; // 10%\r\n  let tax = subtotal * taxRate;\r\n  let discountRate = 0.2;\r\n  let discountAmount = subtotal * discountRate;\r\n  let Grandtotals = subtotal + tax;\r\n\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    ProductListView(userId)\r\n      .then(res => {\r\n        console.log(res?.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreatePartyList(userId)\r\n      .then(res => {\r\n        setPartyList(res.Party);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    UnitListView(userId)\r\n      .then(res => {\r\n        console.log(res.Unit);\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        unitQty: \"\",\r\n        unitType: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const fullname = UserInfo?.firstName + \" \" + UserInfo?.lastName;\r\n    const payload = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.currentAddress,\r\n      // grandTotal: Grandtotals,\r\n      grandTotal: grandTotalAmt,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n    };\r\n    console.log(payload);\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      Ordercashbook(payload)\r\n        .then(res => {\r\n          swal(\"Order Created Successfully\");\r\n          //  history.push(\"/app/softnumen/order/orderList\")\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Add Order By Cashbook</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/SoftNumen/parts/Cashbook\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1}\r\n                      displayValue=\"firstName\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={e => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    {console.log(product)}\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"availableQty\"\r\n                          placeholder=\"AvailableSize\"\r\n                          value={product?.availableQty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          min={0}\r\n                          // max={product?.availableQty}\r\n                          placeholder=\"Req_Qty\"\r\n                          required\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Choose Unit</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionUnit(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"primaryUnit\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          disabled\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          disabled\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.Size * product.price * product.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      {/* <li>\r\n                        <Label className=\"\">\r\n                          SubTotal:\r\n                          <strong>{priceTotal}</strong>\r\n                        </Label>\r\n                      </li> */}\r\n                      {/* <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost : <strong>RS {subtotal}</strong>\r\n                        </Label>\r\n                      </li> */}\r\n                      {/* <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS {tax}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Discount : <strong>RS {discountAmount}</strong>\r\n                        </Label>\r\n                      </li> */}\r\n                      <li>\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total:\r\n                          <span className=\"p-2\">\r\n                            {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                              ? 0\r\n                              : grandTotalAmt}\r\n                          </span>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Addorderbycashbook;\r\n"],"sourceRoot":""}