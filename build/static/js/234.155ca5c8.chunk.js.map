<<<<<<<< HEAD:build/static/js/234.155ca5c8.chunk.js.map
{"version":3,"sources":["views/apps/freshlist/house/AddProduct.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AddProduct","useState","CreatAccountView","setCreatAccountView","categoryList","setcategoryList","subcatlist","setsubcatlist","Countries","setCountry","States","setState","Cities","setCities","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","Context","useContext","UserContext","handleInputChange","e","type","i","target","name","value","checked","test","files","length","useEffect","console","log","CreateProductXMLView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","createProduct","catch","err","AllCategoryList","Category","className","render","history","color","onClick","push","onSubmit","preventDefault","formdata","FormData","input","map","ele","_attributes","append","_text","MyDropDown","dropdown","swal","SaveProduct","status","key","lg","md","label","required","placeholder","onChange","selecteddata","filter","subcategories","handlechangeSubcat","cat","_id","option","moment","tz","format","phoneinput","sm","inputClass","country","onKeyDown","includes","countryCodeEditable","phone","style","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","dateFormat","UserInformatio","timeZone","number","onWheel","Array","from","handleFileChange","marginRight","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/234.155ca5c8.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  AllCategoryList,\r\n  CreateAccountSave,\r\n  CreateAccountView,\r\n  CreateProductXMLView,\r\n  SaveProduct,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nconst AddProduct = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [categoryList, setcategoryList] = useState([]);\r\n  const [subcatlist, setsubcatlist] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [States, setState] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else if (type == \"file\") {\r\n        // debugger;\r\n        if (e.target.files) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n          });\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const changeHandler1 = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [\"status\"]: e.target.value,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    CreateProductXMLView()\r\n      // CreateAccountView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData));\r\n\r\n        setCreatAccountView(JSON.parse(jsonData)?.createProduct);\r\n\r\n        setdropdownValue(JSON.parse(jsonData)?.createProduct);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    AllCategoryList()\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res?.Category) {\r\n          setcategoryList(res.Category);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const handleFileChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    let allimages = Array.from(e.target.files);\r\n    setindex(i);\r\n    setFormData({\r\n      ...formData,\r\n      [name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    console.log(formData);\r\n    console.log(CreatAccountView);\r\n    CreatAccountView?.input?.map((ele, i) => {\r\n      if (ele?.type?._attributes?.type == \"text\") {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      } else if (ele?.type?._attributes?.type == \"file\") {\r\n        formdata.append(\"file\", formData[ele?.name?._text]);\r\n      } else {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      }\r\n    });\r\n    CreatAccountView?.MyDropDown?.map((ele, i) => {\r\n      formdata.append(\r\n        `${ele?.dropdown?.name?._text}`,\r\n        formData[ele?.dropdown?.name?._text]\r\n      );\r\n    });\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveProduct(formdata)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setFormData({});\r\n          if (res.status) {\r\n            // window.location.reload();\r\n            swal(\"Product Created Successfully\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const handlechangeSubcat = (e) => {\r\n    console.log(e.target.value);\r\n    if (e.target.value != \"NA\") {\r\n      let selecteddata = categoryList?.filter(\r\n        (ele, i) => ele?.name == e.target.value\r\n      );\r\n      console.log(selecteddata[0]?.subcategories);\r\n      setsubcatlist(selecteddata[0]?.subcategories);\r\n    } else {\r\n      swal(\"Select Category\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Add Product</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\"btn  float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/freshlist/house/houseProductList\")\r\n                      }\r\n                    >\r\n                      Go back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* <hr /> */}\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {dropdownValue &&\r\n                  dropdownValue?.MyDropDown?.map((ele, i) => {\r\n                    console.log(ele?.dropdown?.name?._text);\r\n                    if (ele?.dropdown?.name?._text == \"category\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={(e) => {\r\n                                handleInputChange(e);\r\n                                handlechangeSubcat(e);\r\n                              }}\r\n                            >\r\n                              <option value=\"NA\">--Select Category--</option>\r\n                              {categoryList?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text == \"SubCategory\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}\r\n                            >\r\n                              <option value=\"NA\">--Select SubCategory--</option>\r\n                              {subcatlist?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text == \"Unit\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}\r\n                            >\r\n                              <option value=\"NA\">--Select Unit--</option>\r\n                              {subcatlist?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <Col lg=\"4\" md=\"4\">\r\n                          <FormGroup>\r\n                            <Label>{ele?.dropdown?.label?._text}</Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}\r\n                            >\r\n                              <option value=\"\">--Select Role--</option>\r\n                              {ele?.dropdown?.option?.map((option, index) => (\r\n                                <option\r\n                                  key={index}\r\n                                  value={option?._attributes?.value}\r\n                                >\r\n                                  {option?._attributes?.value}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    }\r\n                  })}\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                            ?.name?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n                      {dropdownValue?.CreateAccount?.MyDropdown?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col> */}\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.input?.map((ele, i) => {\r\n                    {\r\n                      /* console.log(Context?.UserInformatio?.dateFormat); */\r\n                    }\r\n                    // console.log(Countries);\r\n                    // console.log(States);\r\n                    const convertedTime = moment(\"2022-08-05T12:00:00\")\r\n                      .tz(\"America/New_York\")\r\n                      .format(\"D MMM, YYYY HH:mm\");\r\n\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"us\"}\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [ele?.name?._text]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        console.log(ele);\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Countries}\r\n                                onChange={(country) => {\r\n                                  setCountry(country);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Country\"]: country?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  Countries?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={States}\r\n                                onChange={(State) => {\r\n                                  setState(State);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  States?.countryCode,\r\n                                  States?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Cities}\r\n                                onChange={(City) => {\r\n                                  setCities(City);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            {ele?.type?._attributes?.type == \"date\" ? (\r\n                              <>\r\n                                <Col\r\n                                  className=\"mt-1\"\r\n                                  key={i}\r\n                                  lg=\"4\"\r\n                                  md=\"4\"\r\n                                  sm=\"12\"\r\n                                >\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      dateFormat={\r\n                                        Context?.UserInformatio?.dateFormat\r\n                                      }\r\n                                      value={\r\n                                        moment(formData[ele?.name?._text])\r\n                                          .tz(Context?.UserInformatio?.timeZone)\r\n                                          .format(\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          )\r\n                                        // formData[ele?.name?._text]\r\n                                      }\r\n                                      // value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Col\r\n                                  className=\"mt-1\"\r\n                                  key={i}\r\n                                  lg=\"4\"\r\n                                  md=\"4\"\r\n                                  sm=\"12\"\r\n                                >\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {!!ele?.number ? (\r\n                            <>\r\n                              <Col\r\n                                className=\"mt-1\"\r\n                                key={i}\r\n                                lg=\"4\"\r\n                                md=\"4\"\r\n                                sm=\"12\"\r\n                              >\r\n                                <FormGroup key={i}>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n\r\n                                  <Input\r\n                                    onWheel={(e) => {\r\n                                      e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                    }}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <FormGroup key={i}>\r\n                                {ele?.type?._attributes?.type &&\r\n                                ele?.type?._attributes?.type == \"file\" ? (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      //   value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleFileChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n\r\n                                {/* <Label className=\"mb-1\">\r\n                                  {ele?.label?._text}\r\n                                </Label>\r\n\r\n                                <Input\r\n                                  className=\"form-control\"\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) => {\r\n                                    // const value = e.target.value;\r\n                                    // // Use regular expression to allow only numbers\r\n                                    // const numericValue = value.replace(\r\n                                    //   /\\D/g,\r\n                                    //   \"\"\r\n                                    // );\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )} */}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n\r\n              <hr />\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-0\">Status</Label>\r\n                  <div className=\"form-label-group\" onChange={changeHandler1}>\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      // value={formData[\"status\"]}\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddProduct;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Col,\r\n//   Form,\r\n//   Row,\r\n//   Input,\r\n//   Label,\r\n//   Button,\r\n//   FormGroup,\r\n//   CustomInput,\r\n// } from \"reactstrap\";\r\n// import { history } from \"../../../../history\";\r\n\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import Multiselect from \"multiselect-react-dropdown\";\r\n// import Select from \"react-select\";\r\n\r\n// import swal from \"sweetalert\";\r\n// import \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n// import { Route } from \"react-router-dom\";\r\n// import { CloudLightning } from \"react-feather\";\r\n// import { timers } from \"jquery\";\r\n// const selectItem1 = [];\r\n// const selectstate2 = [];\r\n\r\n// const AllunSelectedCity = [];\r\n// const Selectedarray = [];\r\n\r\n// const AddProduct = () => {\r\n//   // const [Address, setAddress] = useState(\"\");\r\n//   const [Viewpermisson, setViewpermisson] = useState(null);\r\n//   const [Editpermisson, setEditpermisson] = useState(null);\r\n//   const [Createpermisson, setCreatepermisson] = useState(null);\r\n//   const [Deletepermisson, setDeletepermisson] = useState(null);\r\n//   const [fullname, setfullname] = useState(\"\");\r\n//   const [GSTIN, setGSTIN] = useState(\"\");\r\n//   const [StateList, setStateList] = useState([]);\r\n//   const [CityList, setCityList] = useState([]);\r\n//   const [SelectedSCity, setSelectedSCity] = useState([]);\r\n//   const [SelectedState, setSelectedState] = useState([]);\r\n//   const [B_City, setB_City] = useState(\"\");\r\n//   const [checkbox, setcheckbox] = useState(\"\");\r\n//   const [S_City, setS_City] = useState(\"\");\r\n//   const [Mobile_no, setMobile_no] = useState(\"\");\r\n//   const [B_Country, setB_Country] = useState(\"\");\r\n//   const [S_Country, setS_Country] = useState(\"\");\r\n//   const [Phone_no, setPhone_no] = useState(\"\");\r\n//   const [Place_of_Supply, setPlace_of_Supply] = useState(\"\");\r\n//   const [B_State, setB_State] = useState(\"\");\r\n//   const [S_State, setS_State] = useState(\"\");\r\n//   const [B_Street, setB_Street] = useState(\"\");\r\n//   const [S_Street, setS_Street] = useState(\"\");\r\n//   const [B_PinCode, setB_PinCode] = useState(\"\");\r\n//   const [S_PinCode, setS_PinCode] = useState(\"\");\r\n//   const [setuserList, setsetuserList] = useState(false);\r\n//   const [multiSelect, setmultiSelect] = useState([]);\r\n//   const [selectedOptions, setselectedOptions] = useState([]);\r\n//   const [password, setpassword] = useState(\"\");\r\n//   const [email, setemail] = useState(\"\");\r\n//   const [status, setstatus] = useState(\"\");\r\n//   const [AssignRole, setAssignRole] = useState(\"\");\r\n//   const [CompanyName, setCompanyName] = useState(\"\");\r\n//   const [Companytype, setCompanytype] = useState(\"\");\r\n//   const [Selectuser, setSelectuser] = useState(\"\");\r\n//   const [UserName, setUserName] = useState(\"\");\r\n//   const [productName, setproductName] = useState([]);\r\n//   const [City, setCity] = useState(\"\");\r\n//   const [formValues, setFormValues] = useState([\r\n//     { partname: \"\", partseriel: \"\", quantity: \"\" },\r\n//   ]);\r\n//   useEffect(() => {\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     let newparmisson = pageparmission?.role?.find(\r\n//       (value) => value?.pageName === \"Create Account\"\r\n//     );\r\n//     setViewpermisson(newparmisson?.permission.includes(\"View\"));\r\n//     setCreatepermisson(newparmisson?.permission.includes(\"Create\"));\r\n//     setEditpermisson(newparmisson?.permission.includes(\"Edit\"));\r\n\r\n//     setDeletepermisson(newparmisson?.permission.includes(\"Delete\"));\r\n\r\n//     const formdata = new FormData();\r\n//     formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     axiosConfig.post(\"/getrolelistdropdown\", formdata).then((response) => {\r\n//       // console.log(response);\r\n//       const propertyNames = Object.values(response.data?.data?.roles);\r\n\r\n//       // console.log(propertyNames);\r\n//       setproductName(propertyNames);\r\n//     });\r\n//     // state List\r\n//     axiosConfig\r\n//       .get(\"/getallstates\")\r\n//       .then((response) => {\r\n//         setStateList(response.data?.states);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error.response.data);\r\n//       });\r\n//   }, []);\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     let uniqueChars = [...new Set(selectItem1)];\r\n//     let selectedOption = [...new Set(selectedOptions)];\r\n\r\n//     const formdata = new FormData();\r\n\r\n//     formdata.append(\"created_by\", pageparmission?.Userinfo?.id);\r\n//     formdata.append(\"password\", password);\r\n//     formdata.append(\"full_name\", fullname);\r\n//     formdata.append(\"gstin_no\", GSTIN);\r\n//     formdata.append(\"username\", UserName);\r\n//     formdata.append(\"city\", B_City);\r\n//     formdata.append(\"mobile\", Mobile_no);\r\n//     formdata.append(\"email\", email);\r\n//     formdata.append(\"status\", status);\r\n//     formdata.append(\"role\", AssignRole);\r\n//     formdata.append(\"company_name\", CompanyName);\r\n//     formdata.append(\"company_type\", Companytype);\r\n//     formdata.append(\"place_supply\", Place_of_Supply);\r\n//     formdata.append(\"billing_street\", B_Street);\r\n//     formdata.append(\"billing_city\", B_City);\r\n//     formdata.append(\"billing_state\", B_State);\r\n//     formdata.append(\"billing_country\", B_Country);\r\n//     formdata.append(\"billing_pincode\", B_PinCode);\r\n//     formdata.append(\"shipping_street\", S_Street);\r\n//     formdata.append(\"shipping_city\", S_City);\r\n//     formdata.append(\"shipping_state\", S_State);\r\n//     formdata.append(\"shipping_country\", S_Country);\r\n//     formdata.append(\"shipping_pincode\", S_PinCode);\r\n//     formdata.append(\"phone_no\", Phone_no);\r\n//     if (selectedOption.length > 0) {\r\n//       formdata.append(\"state_id\", multiSelect.toString());\r\n//     } else {\r\n//       formdata.append(\"state_id\", SelectedState);\r\n//     }\r\n\r\n//     formdata.append(\"city_id\", uniqueChars);\r\n\r\n//     axiosConfig\r\n//       .post(\"/createuser\", formdata)\r\n//       .then((response) => {\r\n//         if (response.data?.success) {\r\n//           swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n//           setAssignRole(\"\");\r\n//           setstatus(\"\");\r\n//           setemail(\"\");\r\n//           setCity(\"\");\r\n//           setPhone_no(\"\");\r\n//           setUserName(\"\");\r\n//           setfullname(\"\");\r\n//           setpassword(\"\");\r\n//           setS_Country(\"\");\r\n//           setS_State(\"\");\r\n//           setS_City(\"\");\r\n//           setS_Street(\"\");\r\n//           setS_PinCode(\"\");\r\n//         }\r\n//         // this.props.history.push(\"/app/softNumen/order/placeorder\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n//   const handleMatchaddress = (e, value) => {\r\n//     setcheckbox(value);\r\n//     if (value) {\r\n//       setS_Country(B_Country);\r\n//       setS_State(B_State);\r\n//       setS_City(B_City);\r\n//       setS_Street(B_Street);\r\n//       setS_PinCode(B_PinCode);\r\n//     } else {\r\n//       setS_Country(\"\");\r\n//       setS_State(\"\");\r\n//       setS_City(\"\");\r\n//       setS_Street(\"\");\r\n//       setS_PinCode(\"\");\r\n//     }\r\n//   };\r\n//   const onSelect = (selectedList, selectedItem) => {\r\n//     console.log(selectedList);\r\n\r\n//     if (selectedList.length) {\r\n//       for (var i = 0; i < selectedList.length; i++) {\r\n//         selectItem1.push(selectedList[i].id);\r\n//       }\r\n//     }\r\n//   };\r\n//   const onSelect1 = (selectedList, selectedItem) => {\r\n//     if (selectedList.length) {\r\n//       for (var i = 0; i < selectedList.length; i++) {\r\n//         selectedOptions.push(selectedList[i].id);\r\n//       }\r\n//     }\r\n\r\n//     let arr = selectedList.map((ele) => ele.id);\r\n//     setmultiSelect(arr);\r\n//     // console.log(multiSelect);\r\n\r\n//     let uniqueChars = [...new Set(selectedOptions)];\r\n\r\n//     if (uniqueChars.length === 1) {\r\n//       let value = uniqueChars[0];\r\n//       const formdata = new FormData();\r\n//       formdata.append(\"state_id\", value);\r\n//       axiosConfig\r\n//         .post(`/getcity`, formdata)\r\n//         .then((res) => {\r\n//           setCityList(res?.data?.cities);\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//     } else {\r\n//       setCityList([]);\r\n//     }\r\n//   };\r\n//   const onRemove1 = (selectedList, removedItem) => {\r\n//     // debugger;\r\n//     // setselectedOptions(\"\");\r\n//     // console.log(selectedList);\r\n//     // setmultiSelect(selectedList);\r\n\r\n//     let arr = selectedList.map((ele) => ele.id);\r\n//     // console.log(arr);\r\n//     setmultiSelect(arr);\r\n//     // console.log(multiSelect);\r\n//     // if (selectedList.length) {\r\n//     //   for (var i = 0; i < selectedList.length; i++) {\r\n//     //     selectedOptions.push(selectedList[i].id);\r\n//     //   }\r\n//     // }\r\n//     // let uniqueChars = [...new Set(selectedOptions)];\r\n//     // console.log(uniqueChars);\r\n//   };\r\n\r\n//   const onRemove = (selectedList, removedItem) => {\r\n//     console.log(selectedList);\r\n//     console.log(removedItem);\r\n//   };\r\n\r\n//   let handleChange = (i, e) => {\r\n//     let newFormValues = [...formValues];\r\n//     newFormValues[i][e.target.name] = e.target.value;\r\n//     setFormValues(newFormValues);\r\n//   };\r\n\r\n//   let addFormFields = () => {\r\n//     setFormValues([...formValues, { name: \"\", partseriel: \"\", quantity: \"\" }]);\r\n//   };\r\n\r\n//   let removeFormFields = (i) => {\r\n//     let newFormValues = [...formValues];\r\n//     newFormValues.splice(i, 1);\r\n//     setFormValues(newFormValues);\r\n//   };\r\n\r\n//   let handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     alert(JSON.stringify(formValues));\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Card>\r\n//           <Row className=\"m-2\">\r\n//             <Col>\r\n//               <h1 className=\"float-left\">Add here</h1>\r\n//             </Col>\r\n//             <Col>\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Button\r\n//                     className=\"btn  float-right\"\r\n//                     color=\"primary\"\r\n//                     onClick={() =>\r\n//                       history.push(\"/app/freshlist/house/houseProductList\")\r\n//                     }\r\n//                   >\r\n//                     Go back\r\n//                   </Button>\r\n//                 )}\r\n//               />\r\n//             </Col>\r\n//           </Row>\r\n//           <div className=\"container \">\r\n//             <form onSubmit={handleSubmit}>\r\n//               {formValues.map((element, index) => (\r\n//                 <div className=\"form-inline my-2\" key={index}>\r\n//                   <FormGroup>\r\n//                     <Label>Part Name</Label>\r\n//                     <Input\r\n//                       type=\"text\"\r\n//                       name=\"name\"\r\n//                       placeholder=\"Part Name\"\r\n//                       value={element.name || \"\"}\r\n//                       onChange={(e) => handleChange(index, e)}\r\n//                     />\r\n//                   </FormGroup>\r\n\r\n//                   <Label>Part Serial No.</Label>\r\n//                   <Input\r\n//                     type=\"text\"\r\n//                     name=\"partseriel\"\r\n//                     placeholder=\"Part Seriel\"\r\n//                     value={element.partseriel || \"\"}\r\n//                     onChange={(e) => handleChange(index, e)}\r\n//                   />\r\n//                   <Label>Quantity </Label>\r\n//                   <Input\r\n//                     type=\"text\"\r\n//                     name=\"quantity\"\r\n//                     placeholder=\"Quantity\"\r\n//                     value={element.quantity || \"\"}\r\n//                     onChange={(e) => handleChange(index, e)}\r\n//                   />\r\n//                   {index ? (\r\n//                     <Button\r\n//                       className=\"button remove ml-1\"\r\n//                       color=\"primary\"\r\n//                       onClick={() => removeFormFields(index)}\r\n//                     >\r\n//                       Remove\r\n//                     </Button>\r\n//                   ) : null}\r\n//                 </div>\r\n//               ))}\r\n//               <div className=\"button-section\">\r\n//                 <Button\r\n//                   onClick={() => addFormFields()}\r\n//                   color=\"primary\"\r\n//                   className=\"mr-1 mt-2 mx-2\"\r\n//                 >\r\n//                   Add\r\n//                 </Button>\r\n//                 <Button\r\n//                   color=\"primary\"\r\n//                   className=\"mr-1 mt-2 mx-2 button submit\"\r\n//                   // className=\"button submit\"\r\n//                   type=\"submit\"\r\n//                 >\r\n//                   Submit\r\n//                 </Button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n\r\n//           <CardBody>\r\n//             <Form className=\"m-1\" onSubmit={submitHandler}>\r\n//               <Row className=\"mb-2\">\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Row></Row>\r\n//                     <Label for=\"cars\"> Product Seriel No. *</Label>\r\n//                     {/* {AssignRole === \"supplier\" ? ( */}\r\n//                     <>\r\n//                       <Multiselect\r\n//                         required\r\n//                         showCheckbox=\"true\"\r\n//                         isObject=\"false\"\r\n//                         options={StateList} // Options to display in the dropdown\r\n//                         // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n//                         onSelect={onSelect1} // Function will trigger on select event\r\n//                         onRemove={onRemove1} // Function will trigger on remove event\r\n//                         displayValue=\"state_title\" // Property name to display in the dropdown options\r\n//                       />\r\n//                     </>\r\n//                     {/* ) : (\r\n//                       <>\r\n//                         <select\r\n//                           required\r\n//                           name=\"SelectedState\"\r\n//                           value={SelectedState}\r\n//                           onChange={e => {\r\n//                             const formdata = new FormData();\r\n//                             setSelectedState(e.target.value);\r\n//                             formdata.append(\"state_id\", e.target.value);\r\n//                             axiosConfig\r\n//                               .post(`/getcity`, formdata)\r\n//                               .then(res => {\r\n//                                 setCityList(res?.data?.cities);\r\n//                               })\r\n//                               .catch(err => {\r\n//                                 console.log(err);\r\n//                               });\r\n//                           }}\r\n//                           className=\"form-control\"\r\n//                         >\r\n//                           <option value=\"volvo\">--Select State--</option>\r\n//                           {StateList &&\r\n//                             StateList?.map((ele, i) => (\r\n//                               <option key={i} value={ele?.id}>\r\n//                                 {ele?.state_title}\r\n//                               </option>\r\n//                             ))}\r\n//                         </select>\r\n//                       </>\r\n//                     )} */}\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Select Role*</Label>\r\n//                     <CustomInput\r\n//                       required\r\n//                       id=\"AssignRole\"\r\n//                       type=\"select\"\r\n//                       name=\"AssignRole\"\r\n//                       value={AssignRole}\r\n//                       // onChange={changeHandler}\r\n//                       onChange={(e) => setAssignRole(e.target.value)}\r\n//                     >\r\n//                       <option value=\"\">--Select Role--</option>\r\n\r\n//                       {productName &&\r\n//                         productName?.map((value, index) => (\r\n//                           <option key={index} value={value}>\r\n//                             {value}\r\n//                           </option>\r\n//                         ))}\r\n//                     </CustomInput>\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n//                   <FormGroup>\r\n//                     <Label>Name *</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter Your Name\"\r\n//                       name=\"fullname\"\r\n//                       value={fullname}\r\n//                       onChange={(e) => setfullname(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Display Code *</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter Your Name\"\r\n//                       name=\"UserName\"\r\n//                       value={UserName}\r\n//                       onChange={(e) => setUserName(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Mobile Number *</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"number\"\r\n//                       maxLength={12}\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       size={10}\r\n//                       min={0}\r\n//                       placeholder=\"0123456789\"\r\n//                       name=\"Mobile_no\"\r\n//                       value={Mobile_no}\r\n//                       onChange={(e) => setMobile_no(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Email *</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"email\"\r\n//                       placeholder=\"abcd@gmail.com...\"\r\n//                       name=\"email\"\r\n//                       value={email}\r\n//                       onChange={(e) => setemail(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Password</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"password\"\r\n//                       placeholder=\"Enter password\"\r\n//                       name=\"password\"\r\n//                       value={password}\r\n//                       onChange={(e) => setpassword(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Company Name</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter CompanyName\"\r\n//                       name=\"CompanyName\"\r\n//                       value={CompanyName}\r\n//                       onChange={(e) => setCompanyName(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Phone Number </Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"number\"\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       maxLength={12}\r\n//                       size={10}\r\n//                       placeholder=\"0123456789\"\r\n//                       name=\"Phone_no\"\r\n//                       value={Phone_no}\r\n//                       onChange={(e) => setPhone_no(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Company Type</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter Companytype\"\r\n//                       name=\"Companytype\"\r\n//                       value={Companytype}\r\n//                       onChange={(e) => setCompanytype(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>GSTIN</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter GSTIN No.\"\r\n//                       name=\"GSTIN\"\r\n//                       value={GSTIN}\r\n//                       onChange={(e) => setGSTIN(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Row></Row>\r\n//                     <Label for=\"cars\"> State *</Label>\r\n//                     {AssignRole === \"supplier\" ? (\r\n//                       <>\r\n//                         <Multiselect\r\n//                           required\r\n//                           showCheckbox=\"true\"\r\n//                           isObject=\"false\"\r\n//                           options={StateList} // Options to display in the dropdown\r\n//                           // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n//                           onSelect={onSelect1} // Function will trigger on select event\r\n//                           onRemove={onRemove1} // Function will trigger on remove event\r\n//                           displayValue=\"state_title\" // Property name to display in the dropdown options\r\n//                         />\r\n//                       </>\r\n//                     ) : (\r\n//                       <>\r\n//                         <select\r\n//                           required\r\n//                           name=\"SelectedState\"\r\n//                           value={SelectedState}\r\n//                           onChange={(e) => {\r\n//                             const formdata = new FormData();\r\n//                             setSelectedState(e.target.value);\r\n//                             // this.setState({ SelectedState: e.target.value });\r\n//                             formdata.append(\"state_id\", e.target.value);\r\n//                             axiosConfig\r\n//                               .post(`/getcity`, formdata)\r\n//                               .then((res) => {\r\n//                                 setCityList(res?.data?.cities);\r\n//                                 // this.setState({ CityList: res?.data?.cities });\r\n//                               })\r\n//                               .catch((err) => {\r\n//                                 console.log(err);\r\n//                               });\r\n//                           }}\r\n//                           // onChange={this.changeHandler}\r\n//                           className=\"form-control\"\r\n//                         >\r\n//                           <option value=\"volvo\">--Select State--</option>\r\n//                           {StateList &&\r\n//                             StateList?.map((ele, i) => (\r\n//                               <option key={i} value={ele?.id}>\r\n//                                 {ele?.state_title}\r\n//                               </option>\r\n//                             ))}\r\n//                         </select>\r\n//                       </>\r\n//                     )}\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <Label for=\"cars\">City * </Label>\r\n//                   <Multiselect\r\n//                     required\r\n//                     options={CityList} // Options to display in the dropdown\r\n//                     // selectedValues={selectedValue} // Preselected value to persist in dropdown\r\n//                     onSelect={onSelect} // Function will trigger on select event\r\n//                     onRemove={onRemove} // Function will trigger on remove event\r\n//                     displayValue=\"name\" // Property name to display in the dropdown options\r\n//                   />\r\n//                 </Col>\r\n\r\n//                 {AssignRole === \"supplier\" ? (\r\n//                   <>\r\n//                     <Col lg=\"6\" md=\"6\">\r\n//                       <FormGroup>\r\n//                         <Label>Place of Supply</Label>\r\n//                         <Input\r\n//                           required\r\n//                           type=\"text\"\r\n//                           placeholder=\"Enter Place_of_Supply\"\r\n//                           name=\"Place_of_Supply\"\r\n//                           value={Place_of_Supply}\r\n//                           onChange={(e) => setPlace_of_Supply(e.target.value)}\r\n//                         />\r\n//                       </FormGroup>\r\n//                     </Col>\r\n//                   </>\r\n//                 ) : null}\r\n//               </Row>\r\n//               <hr />\r\n//               <Row>\r\n//                 <Col className=\"mt-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n//                   <h4 className=\"mt-5 pb-2\">Billing Address :</h4>\r\n\r\n//                   <Col className=\"\" lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label for=\"cars\">Choose Country</Label>\r\n//                       <select\r\n//                         placeholder=\"Enter City\"\r\n//                         name=\"B_Country\"\r\n//                         value={B_Country}\r\n//                         onChange={(e) => setB_Country(e.target.value)}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select Country--</option>\r\n//                         <option value=\"India\">India</option>\r\n//                       </select>\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label for=\"cars\">Choose State</Label>\r\n//                       <select\r\n//                         name=\"B_State\"\r\n//                         value={B_State}\r\n//                         onChange={(e) => {\r\n//                           console.log(e.target.value);\r\n//                           setB_State(e.target.value);\r\n//                           // this.setState({ B_State: e.target.value });\r\n//                           const formdata = new FormData();\r\n//                           formdata.append(\"state_id\", e.target.value);\r\n//                           axiosConfig\r\n//                             .post(`/getcity`, formdata)\r\n//                             .then((res) => {\r\n//                               setCityList(res?.data?.cities);\r\n//                               // this.setState({ CityList: res?.data?.cities });\r\n//                             })\r\n//                             .catch((err) => {\r\n//                               console.log(err);\r\n//                             });\r\n//                         }}\r\n//                         // onChange={this.changeHandler}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select State--</option>\r\n//                         {StateList &&\r\n//                           StateList?.map((ele, i) => (\r\n//                             <option key={i} value={ele?.id}>\r\n//                               {ele?.state_title}\r\n//                             </option>\r\n//                           ))}\r\n//                       </select>\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <FormGroup>\r\n//                         <Label for=\"cars\">Choose City</Label>\r\n//                         <select\r\n//                           placeholder=\"Enter City\"\r\n//                           name=\"B_City\"\r\n//                           value={B_City}\r\n//                           onChange={(e) => setB_City(e.target.value)}\r\n//                           className=\"form-control\"\r\n//                         >\r\n//                           <option value=\"volvo\">--Select City--</option>\r\n//                           {CityList &&\r\n//                             CityList?.map((value, index) => (\r\n//                               <option key={index} value={value?.id}>\r\n//                                 {value?.name}\r\n//                               </option>\r\n//                             ))}\r\n//                         </select>\r\n//                       </FormGroup>\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label>Street</Label>\r\n//                       <Input\r\n//                         required\r\n//                         type=\"text\"\r\n//                         placeholder=\"Enter Street\"\r\n//                         name=\"B_Street\"\r\n//                         value={B_Street}\r\n//                         onChange={(e) => setB_Street(e.target.value)}\r\n//                       />\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label>PinCode</Label>\r\n//                       <Input\r\n//                         required\r\n//                         type=\"number\"\r\n//                         onKeyDown={(e) =>\r\n//                           [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                           e.preventDefault()\r\n//                         }\r\n//                         min={0}\r\n//                         placeholder=\"Enter PinCode\"\r\n//                         name=\"B_PinCode\"\r\n//                         value={B_PinCode}\r\n//                         onChange={(e) => setB_PinCode(e.target.value)}\r\n//                       />\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n//                   <hr />\r\n//                   <Row>\r\n//                     <Col className=\"ml-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n//                       <Input\r\n//                         name=\"check\"\r\n//                         onChange={(e) => {\r\n//                           handleMatchaddress(e, e.target.checked);\r\n//                         }}\r\n//                         style={{\r\n//                           height: \"15px\",\r\n//                           width: \"20px\",\r\n//                         }}\r\n//                         type=\"checkbox\"\r\n//                       />\r\n//                     </Col>\r\n//                     <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"ml-3\">\r\n//                       <h5> Same as Billing Address </h5>\r\n//                     </Col>\r\n//                   </Row>\r\n//                   <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label for=\"cars\">Choose Country</Label>\r\n//                       <select\r\n//                         placeholder=\"Enter City\"\r\n//                         name=\"S_Country\"\r\n//                         disabled={checkbox ? true : false}\r\n//                         value={S_Country}\r\n//                         onChange={(e) => setS_Country(e.target.value)}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select Country--</option>\r\n//                         <option value=\"India\">India</option>\r\n//                       </select>\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label for=\"cars\">Choose State</Label>\r\n//                       <select\r\n//                         name=\"S_State\"\r\n//                         value={S_State}\r\n//                         onChange={(e) => {\r\n//                           // console.log(e.target.value);\r\n//                           setS_State(e.target.value);\r\n//                           // this.setState({ S_State: e.target.value });\r\n//                           const formdata = new FormData();\r\n//                           formdata.append(\"state_id\", e.target.value);\r\n//                           axiosConfig\r\n//                             .post(`/getcity`, formdata)\r\n//                             .then((res) => {\r\n//                               console.log(res?.data?.cities);\r\n//                               setCityList(res?.data?.cities);\r\n//                               // this.setState({ CityList: res?.data?.cities });\r\n//                             })\r\n//                             .catch((err) => {\r\n//                               console.log(err);\r\n//                             });\r\n//                         }}\r\n//                         // onChange={this.changeHandler}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select State--</option>\r\n//                         {StateList &&\r\n//                           StateList?.map((ele, i) => (\r\n//                             <option key={i} value={ele?.id}>\r\n//                               {ele?.state_title}\r\n//                             </option>\r\n//                           ))}\r\n//                       </select>\r\n//                       {/* <select\r\n//                         name=\"S_State\"\r\n//                         disabled={this.state.checkbox ? true : false}\r\n//                         value={this.state.S_State}\r\n//                         onChange={this.changeHandler}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select State--</option>\r\n//                         <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n//                         <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n//                         <option value=\"Maharastra\">Maharastra</option>\r\n//                       </select> */}\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <Label for=\"cars\">Choose City</Label>\r\n\r\n//                     <FormGroup>\r\n//                       <select\r\n//                         placeholder=\"Enter City\"\r\n//                         name=\"S_City\"\r\n//                         value={S_City}\r\n//                         onChange={(e) => setS_City(e.target.value)}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select City--</option>\r\n//                         {CityList &&\r\n//                           CityList?.map((value, index) => (\r\n//                             <option key={index} value={value?.id}>\r\n//                               {value?.name}\r\n//                             </option>\r\n//                           ))}\r\n//                       </select>\r\n//                       {/* <FormGroup>\r\n//                         <select\r\n//                           disabled={this.state.checkbox ? true : false}\r\n//                           placeholder=\"Enter City\"\r\n//                           name=\"S_City\"\r\n//                           value={this.state.S_City}\r\n//                           onChange={this.changeHandler}\r\n//                           className=\"form-control\"\r\n//                         >\r\n//                           <option value=\"volvo\">--Select City--</option>\r\n//                           <option value=\"Indore\">Indore</option>\r\n//                           <option value=\"Panvel\">Panvel</option>\r\n//                           <option value=\"khandwa\">khandwa</option>\r\n//                         </select>\r\n//                       </FormGroup> */}\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label>Street</Label>\r\n//                       <Input\r\n//                         required\r\n//                         disabled={checkbox ? true : false}\r\n//                         type=\"text\"\r\n//                         placeholder=\"Enter Street\"\r\n//                         name=\"S_Street\"\r\n//                         value={S_Street}\r\n//                         onChange={(e) => setS_Street(e.target.value)}\r\n//                       />\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label>PinCode</Label>\r\n//                       <Input\r\n//                         required\r\n//                         disabled={checkbox ? true : false}\r\n//                         type=\"number\"\r\n//                         placeholder=\"Enter PinCode\"\r\n//                         onKeyDown={(e) =>\r\n//                           [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                           e.preventDefault()\r\n//                         }\r\n//                         min={0}\r\n//                         name=\"S_PinCode\"\r\n//                         value={S_PinCode}\r\n//                         onChange={(e) => setS_PinCode(e.target.value)}\r\n//                       />\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                 </Col>\r\n//               </Row>\r\n\r\n//               {/* {this.state.setuserList && ( */}\r\n//               <Row className=\"mt-2\">\r\n//                 <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n//                   <Label className=\"\">\r\n//                     <h4>Status</h4>\r\n//                   </Label>\r\n//                   <div\r\n//                     className=\"form-label-group\"\r\n//                     onChange={(e) => setstatus(e.target.value)}\r\n//                   >\r\n//                     <input\r\n//                       style={{ marginRight: \"3px\" }}\r\n//                       type=\"radio\"\r\n//                       name=\"status\"\r\n//                       value=\"Active\"\r\n//                     />\r\n//                     <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n//                     <input\r\n//                       style={{ marginRight: \"3px\" }}\r\n//                       type=\"radio\"\r\n//                       name=\"status\"\r\n//                       value=\"Deactive\"\r\n//                     />\r\n//                     <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n//                   </div>\r\n//                 </Col>\r\n//                 {/* <Col lg=\"6\" md=\"6\">\r\n//                   <Label className=\"mt-2  mb-2\"> Select User</Label>\r\n\r\n//                   <CustomInput\r\n//                     type=\"select\"\r\n//                     placeholder=\"\"\r\n//                     name=\"Selectuser\"\r\n//                     value={this.state.Selectuser}\r\n//                     onChange={this.changeHandler}\r\n//                   >\r\n//                     <option value=\"user1\">user 1</option>\r\n//                     <option value=\"user2\">user2</option>\r\n//                     <option value=\"user2\">UPI</option>\r\n//                     <option value=\"user2\">Other</option>\r\n//                   </CustomInput>\r\n//                 </Col> */}\r\n//               </Row>\r\n//               {/* )} */}\r\n\r\n//               <Row>\r\n//                 <Button.Ripple\r\n//                   color=\"primary\"\r\n//                   type=\"submit\"\r\n//                   className=\"mr-1 mt-2 mx-2\"\r\n//                 >\r\n//                   Submit\r\n//                 </Button.Ripple>\r\n//               </Row>\r\n//             </Form>\r\n//           </CardBody>\r\n//         </Card>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default AddProduct;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}
========
{"version":3,"sources":["views/apps/freshlist/house/AddProduct.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AddProduct","useState","CreatAccountView","setCreatAccountView","categoryList","setcategoryList","subcatlist","setsubcatlist","Countries","setCountry","States","setState","Cities","setCities","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","Context","useContext","UserContext","handleInputChange","e","type","i","target","name","value","checked","test","files","length","useEffect","console","log","CreateProductXMLView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","createProduct","catch","err","AllCategoryList","Category","className","render","history","color","onClick","push","onSubmit","preventDefault","formdata","FormData","input","map","ele","_attributes","append","_text","MyDropDown","dropdown","swal","SaveProduct","status","key","lg","md","label","required","placeholder","onChange","selecteddata","filter","subcategories","handlechangeSubcat","cat","_id","option","moment","tz","format","phoneinput","sm","inputClass","country","onKeyDown","includes","countryCodeEditable","phone","style","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","dateFormat","UserInformatio","timeZone","number","onWheel","Array","from","handleFileChange","marginRight","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/234.2e58ea04.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  AllCategoryList,\r\n  CreateAccountSave,\r\n  CreateAccountView,\r\n  CreateProductXMLView,\r\n  SaveProduct,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nconst AddProduct = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [categoryList, setcategoryList] = useState([]);\r\n  const [subcatlist, setsubcatlist] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [States, setState] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else if (type == \"file\") {\r\n        // debugger;\r\n        if (e.target.files) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n          });\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const changeHandler1 = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [\"status\"]: e.target.value,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    CreateProductXMLView()\r\n      // CreateAccountView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData));\r\n\r\n        setCreatAccountView(JSON.parse(jsonData)?.createProduct);\r\n\r\n        setdropdownValue(JSON.parse(jsonData)?.createProduct);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    AllCategoryList()\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res?.Category) {\r\n          setcategoryList(res.Category);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const handleFileChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    let allimages = Array.from(e.target.files);\r\n    setindex(i);\r\n    setFormData({\r\n      ...formData,\r\n      [name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    console.log(formData);\r\n    console.log(CreatAccountView);\r\n    CreatAccountView?.input?.map((ele, i) => {\r\n      if (ele?.type?._attributes?.type == \"text\") {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      } else if (ele?.type?._attributes?.type == \"file\") {\r\n        formdata.append(\"file\", formData[ele?.name?._text]);\r\n      } else {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      }\r\n    });\r\n    CreatAccountView?.MyDropDown?.map((ele, i) => {\r\n      formdata.append(\r\n        `${ele?.dropdown?.name?._text}`,\r\n        formData[ele?.dropdown?.name?._text]\r\n      );\r\n    });\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveProduct(formdata)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setFormData({});\r\n          if (res.status) {\r\n            // window.location.reload();\r\n            swal(\"Product Created Successfully\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const handlechangeSubcat = (e) => {\r\n    console.log(e.target.value);\r\n    if (e.target.value != \"NA\") {\r\n      let selecteddata = categoryList?.filter(\r\n        (ele, i) => ele?.name == e.target.value\r\n      );\r\n      console.log(selecteddata[0]?.subcategories);\r\n      setsubcatlist(selecteddata[0]?.subcategories);\r\n    } else {\r\n      swal(\"Select Category\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Add Product</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\"btn  float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/freshlist/house/houseProductList\")\r\n                      }\r\n                    >\r\n                      Go back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* <hr /> */}\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {dropdownValue &&\r\n                  dropdownValue?.MyDropDown?.map((ele, i) => {\r\n                    console.log(ele?.dropdown?.name?._text);\r\n                    if (ele?.dropdown?.name?._text == \"category\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={(e) => {\r\n                                handleInputChange(e);\r\n                                handlechangeSubcat(e);\r\n                              }}\r\n                            >\r\n                              <option value=\"NA\">--Select Category--</option>\r\n                              {categoryList?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text == \"SubCategory\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}\r\n                            >\r\n                              <option value=\"NA\">--Select SubCategory--</option>\r\n                              {subcatlist?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text == \"Unit\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}\r\n                            >\r\n                              <option value=\"NA\">--Select Unit--</option>\r\n                              {subcatlist?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <Col lg=\"4\" md=\"4\">\r\n                          <FormGroup>\r\n                            <Label>{ele?.dropdown?.label?._text}</Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}\r\n                            >\r\n                              <option value=\"\">--Select Role--</option>\r\n                              {ele?.dropdown?.option?.map((option, index) => (\r\n                                <option\r\n                                  key={index}\r\n                                  value={option?._attributes?.value}\r\n                                >\r\n                                  {option?._attributes?.value}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    }\r\n                  })}\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                            ?.name?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n                      {dropdownValue?.CreateAccount?.MyDropdown?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col> */}\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.input?.map((ele, i) => {\r\n                    {\r\n                      /* console.log(Context?.UserInformatio?.dateFormat); */\r\n                    }\r\n                    // console.log(Countries);\r\n                    // console.log(States);\r\n                    const convertedTime = moment(\"2022-08-05T12:00:00\")\r\n                      .tz(\"America/New_York\")\r\n                      .format(\"D MMM, YYYY HH:mm\");\r\n\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"us\"}\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [ele?.name?._text]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        console.log(ele);\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Countries}\r\n                                onChange={(country) => {\r\n                                  setCountry(country);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Country\"]: country?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  Countries?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={States}\r\n                                onChange={(State) => {\r\n                                  setState(State);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  States?.countryCode,\r\n                                  States?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Cities}\r\n                                onChange={(City) => {\r\n                                  setCities(City);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            {ele?.type?._attributes?.type == \"date\" ? (\r\n                              <>\r\n                                <Col\r\n                                  className=\"mt-1\"\r\n                                  key={i}\r\n                                  lg=\"4\"\r\n                                  md=\"4\"\r\n                                  sm=\"12\"\r\n                                >\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      dateFormat={\r\n                                        Context?.UserInformatio?.dateFormat\r\n                                      }\r\n                                      value={\r\n                                        moment(formData[ele?.name?._text])\r\n                                          .tz(Context?.UserInformatio?.timeZone)\r\n                                          .format(\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          )\r\n                                        // formData[ele?.name?._text]\r\n                                      }\r\n                                      // value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Col\r\n                                  className=\"mt-1\"\r\n                                  key={i}\r\n                                  lg=\"4\"\r\n                                  md=\"4\"\r\n                                  sm=\"12\"\r\n                                >\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {!!ele?.number ? (\r\n                            <>\r\n                              <Col\r\n                                className=\"mt-1\"\r\n                                key={i}\r\n                                lg=\"4\"\r\n                                md=\"4\"\r\n                                sm=\"12\"\r\n                              >\r\n                                <FormGroup key={i}>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n\r\n                                  <Input\r\n                                    onWheel={(e) => {\r\n                                      e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                    }}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <FormGroup key={i}>\r\n                                {ele?.type?._attributes?.type &&\r\n                                ele?.type?._attributes?.type == \"file\" ? (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      //   value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleFileChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n\r\n                                {/* <Label className=\"mb-1\">\r\n                                  {ele?.label?._text}\r\n                                </Label>\r\n\r\n                                <Input\r\n                                  className=\"form-control\"\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) => {\r\n                                    // const value = e.target.value;\r\n                                    // // Use regular expression to allow only numbers\r\n                                    // const numericValue = value.replace(\r\n                                    //   /\\D/g,\r\n                                    //   \"\"\r\n                                    // );\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )} */}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n\r\n              <hr />\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-0\">Status</Label>\r\n                  <div className=\"form-label-group\" onChange={changeHandler1}>\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      // value={formData[\"status\"]}\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddProduct;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Col,\r\n//   Form,\r\n//   Row,\r\n//   Input,\r\n//   Label,\r\n//   Button,\r\n//   FormGroup,\r\n//   CustomInput,\r\n// } from \"reactstrap\";\r\n// import { history } from \"../../../../history\";\r\n\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import Multiselect from \"multiselect-react-dropdown\";\r\n// import Select from \"react-select\";\r\n\r\n// import swal from \"sweetalert\";\r\n// import \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n// import { Route } from \"react-router-dom\";\r\n// import { CloudLightning } from \"react-feather\";\r\n// import { timers } from \"jquery\";\r\n// const selectItem1 = [];\r\n// const selectstate2 = [];\r\n\r\n// const AllunSelectedCity = [];\r\n// const Selectedarray = [];\r\n\r\n// const AddProduct = () => {\r\n//   // const [Address, setAddress] = useState(\"\");\r\n//   const [Viewpermisson, setViewpermisson] = useState(null);\r\n//   const [Editpermisson, setEditpermisson] = useState(null);\r\n//   const [Createpermisson, setCreatepermisson] = useState(null);\r\n//   const [Deletepermisson, setDeletepermisson] = useState(null);\r\n//   const [fullname, setfullname] = useState(\"\");\r\n//   const [GSTIN, setGSTIN] = useState(\"\");\r\n//   const [StateList, setStateList] = useState([]);\r\n//   const [CityList, setCityList] = useState([]);\r\n//   const [SelectedSCity, setSelectedSCity] = useState([]);\r\n//   const [SelectedState, setSelectedState] = useState([]);\r\n//   const [B_City, setB_City] = useState(\"\");\r\n//   const [checkbox, setcheckbox] = useState(\"\");\r\n//   const [S_City, setS_City] = useState(\"\");\r\n//   const [Mobile_no, setMobile_no] = useState(\"\");\r\n//   const [B_Country, setB_Country] = useState(\"\");\r\n//   const [S_Country, setS_Country] = useState(\"\");\r\n//   const [Phone_no, setPhone_no] = useState(\"\");\r\n//   const [Place_of_Supply, setPlace_of_Supply] = useState(\"\");\r\n//   const [B_State, setB_State] = useState(\"\");\r\n//   const [S_State, setS_State] = useState(\"\");\r\n//   const [B_Street, setB_Street] = useState(\"\");\r\n//   const [S_Street, setS_Street] = useState(\"\");\r\n//   const [B_PinCode, setB_PinCode] = useState(\"\");\r\n//   const [S_PinCode, setS_PinCode] = useState(\"\");\r\n//   const [setuserList, setsetuserList] = useState(false);\r\n//   const [multiSelect, setmultiSelect] = useState([]);\r\n//   const [selectedOptions, setselectedOptions] = useState([]);\r\n//   const [password, setpassword] = useState(\"\");\r\n//   const [email, setemail] = useState(\"\");\r\n//   const [status, setstatus] = useState(\"\");\r\n//   const [AssignRole, setAssignRole] = useState(\"\");\r\n//   const [CompanyName, setCompanyName] = useState(\"\");\r\n//   const [Companytype, setCompanytype] = useState(\"\");\r\n//   const [Selectuser, setSelectuser] = useState(\"\");\r\n//   const [UserName, setUserName] = useState(\"\");\r\n//   const [productName, setproductName] = useState([]);\r\n//   const [City, setCity] = useState(\"\");\r\n//   const [formValues, setFormValues] = useState([\r\n//     { partname: \"\", partseriel: \"\", quantity: \"\" },\r\n//   ]);\r\n//   useEffect(() => {\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     let newparmisson = pageparmission?.role?.find(\r\n//       (value) => value?.pageName === \"Create Account\"\r\n//     );\r\n//     setViewpermisson(newparmisson?.permission.includes(\"View\"));\r\n//     setCreatepermisson(newparmisson?.permission.includes(\"Create\"));\r\n//     setEditpermisson(newparmisson?.permission.includes(\"Edit\"));\r\n\r\n//     setDeletepermisson(newparmisson?.permission.includes(\"Delete\"));\r\n\r\n//     const formdata = new FormData();\r\n//     formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     axiosConfig.post(\"/getrolelistdropdown\", formdata).then((response) => {\r\n//       // console.log(response);\r\n//       const propertyNames = Object.values(response.data?.data?.roles);\r\n\r\n//       // console.log(propertyNames);\r\n//       setproductName(propertyNames);\r\n//     });\r\n//     // state List\r\n//     axiosConfig\r\n//       .get(\"/getallstates\")\r\n//       .then((response) => {\r\n//         setStateList(response.data?.states);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error.response.data);\r\n//       });\r\n//   }, []);\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     let uniqueChars = [...new Set(selectItem1)];\r\n//     let selectedOption = [...new Set(selectedOptions)];\r\n\r\n//     const formdata = new FormData();\r\n\r\n//     formdata.append(\"created_by\", pageparmission?.Userinfo?.id);\r\n//     formdata.append(\"password\", password);\r\n//     formdata.append(\"full_name\", fullname);\r\n//     formdata.append(\"gstin_no\", GSTIN);\r\n//     formdata.append(\"username\", UserName);\r\n//     formdata.append(\"city\", B_City);\r\n//     formdata.append(\"mobile\", Mobile_no);\r\n//     formdata.append(\"email\", email);\r\n//     formdata.append(\"status\", status);\r\n//     formdata.append(\"role\", AssignRole);\r\n//     formdata.append(\"company_name\", CompanyName);\r\n//     formdata.append(\"company_type\", Companytype);\r\n//     formdata.append(\"place_supply\", Place_of_Supply);\r\n//     formdata.append(\"billing_street\", B_Street);\r\n//     formdata.append(\"billing_city\", B_City);\r\n//     formdata.append(\"billing_state\", B_State);\r\n//     formdata.append(\"billing_country\", B_Country);\r\n//     formdata.append(\"billing_pincode\", B_PinCode);\r\n//     formdata.append(\"shipping_street\", S_Street);\r\n//     formdata.append(\"shipping_city\", S_City);\r\n//     formdata.append(\"shipping_state\", S_State);\r\n//     formdata.append(\"shipping_country\", S_Country);\r\n//     formdata.append(\"shipping_pincode\", S_PinCode);\r\n//     formdata.append(\"phone_no\", Phone_no);\r\n//     if (selectedOption.length > 0) {\r\n//       formdata.append(\"state_id\", multiSelect.toString());\r\n//     } else {\r\n//       formdata.append(\"state_id\", SelectedState);\r\n//     }\r\n\r\n//     formdata.append(\"city_id\", uniqueChars);\r\n\r\n//     axiosConfig\r\n//       .post(\"/createuser\", formdata)\r\n//       .then((response) => {\r\n//         if (response.data?.success) {\r\n//           swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n//           setAssignRole(\"\");\r\n//           setstatus(\"\");\r\n//           setemail(\"\");\r\n//           setCity(\"\");\r\n//           setPhone_no(\"\");\r\n//           setUserName(\"\");\r\n//           setfullname(\"\");\r\n//           setpassword(\"\");\r\n//           setS_Country(\"\");\r\n//           setS_State(\"\");\r\n//           setS_City(\"\");\r\n//           setS_Street(\"\");\r\n//           setS_PinCode(\"\");\r\n//         }\r\n//         // this.props.history.push(\"/app/softNumen/order/placeorder\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n//   const handleMatchaddress = (e, value) => {\r\n//     setcheckbox(value);\r\n//     if (value) {\r\n//       setS_Country(B_Country);\r\n//       setS_State(B_State);\r\n//       setS_City(B_City);\r\n//       setS_Street(B_Street);\r\n//       setS_PinCode(B_PinCode);\r\n//     } else {\r\n//       setS_Country(\"\");\r\n//       setS_State(\"\");\r\n//       setS_City(\"\");\r\n//       setS_Street(\"\");\r\n//       setS_PinCode(\"\");\r\n//     }\r\n//   };\r\n//   const onSelect = (selectedList, selectedItem) => {\r\n//     console.log(selectedList);\r\n\r\n//     if (selectedList.length) {\r\n//       for (var i = 0; i < selectedList.length; i++) {\r\n//         selectItem1.push(selectedList[i].id);\r\n//       }\r\n//     }\r\n//   };\r\n//   const onSelect1 = (selectedList, selectedItem) => {\r\n//     if (selectedList.length) {\r\n//       for (var i = 0; i < selectedList.length; i++) {\r\n//         selectedOptions.push(selectedList[i].id);\r\n//       }\r\n//     }\r\n\r\n//     let arr = selectedList.map((ele) => ele.id);\r\n//     setmultiSelect(arr);\r\n//     // console.log(multiSelect);\r\n\r\n//     let uniqueChars = [...new Set(selectedOptions)];\r\n\r\n//     if (uniqueChars.length === 1) {\r\n//       let value = uniqueChars[0];\r\n//       const formdata = new FormData();\r\n//       formdata.append(\"state_id\", value);\r\n//       axiosConfig\r\n//         .post(`/getcity`, formdata)\r\n//         .then((res) => {\r\n//           setCityList(res?.data?.cities);\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//     } else {\r\n//       setCityList([]);\r\n//     }\r\n//   };\r\n//   const onRemove1 = (selectedList, removedItem) => {\r\n//     // debugger;\r\n//     // setselectedOptions(\"\");\r\n//     // console.log(selectedList);\r\n//     // setmultiSelect(selectedList);\r\n\r\n//     let arr = selectedList.map((ele) => ele.id);\r\n//     // console.log(arr);\r\n//     setmultiSelect(arr);\r\n//     // console.log(multiSelect);\r\n//     // if (selectedList.length) {\r\n//     //   for (var i = 0; i < selectedList.length; i++) {\r\n//     //     selectedOptions.push(selectedList[i].id);\r\n//     //   }\r\n//     // }\r\n//     // let uniqueChars = [...new Set(selectedOptions)];\r\n//     // console.log(uniqueChars);\r\n//   };\r\n\r\n//   const onRemove = (selectedList, removedItem) => {\r\n//     console.log(selectedList);\r\n//     console.log(removedItem);\r\n//   };\r\n\r\n//   let handleChange = (i, e) => {\r\n//     let newFormValues = [...formValues];\r\n//     newFormValues[i][e.target.name] = e.target.value;\r\n//     setFormValues(newFormValues);\r\n//   };\r\n\r\n//   let addFormFields = () => {\r\n//     setFormValues([...formValues, { name: \"\", partseriel: \"\", quantity: \"\" }]);\r\n//   };\r\n\r\n//   let removeFormFields = (i) => {\r\n//     let newFormValues = [...formValues];\r\n//     newFormValues.splice(i, 1);\r\n//     setFormValues(newFormValues);\r\n//   };\r\n\r\n//   let handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     alert(JSON.stringify(formValues));\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Card>\r\n//           <Row className=\"m-2\">\r\n//             <Col>\r\n//               <h1 className=\"float-left\">Add here</h1>\r\n//             </Col>\r\n//             <Col>\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Button\r\n//                     className=\"btn  float-right\"\r\n//                     color=\"primary\"\r\n//                     onClick={() =>\r\n//                       history.push(\"/app/freshlist/house/houseProductList\")\r\n//                     }\r\n//                   >\r\n//                     Go back\r\n//                   </Button>\r\n//                 )}\r\n//               />\r\n//             </Col>\r\n//           </Row>\r\n//           <div className=\"container \">\r\n//             <form onSubmit={handleSubmit}>\r\n//               {formValues.map((element, index) => (\r\n//                 <div className=\"form-inline my-2\" key={index}>\r\n//                   <FormGroup>\r\n//                     <Label>Part Name</Label>\r\n//                     <Input\r\n//                       type=\"text\"\r\n//                       name=\"name\"\r\n//                       placeholder=\"Part Name\"\r\n//                       value={element.name || \"\"}\r\n//                       onChange={(e) => handleChange(index, e)}\r\n//                     />\r\n//                   </FormGroup>\r\n\r\n//                   <Label>Part Serial No.</Label>\r\n//                   <Input\r\n//                     type=\"text\"\r\n//                     name=\"partseriel\"\r\n//                     placeholder=\"Part Seriel\"\r\n//                     value={element.partseriel || \"\"}\r\n//                     onChange={(e) => handleChange(index, e)}\r\n//                   />\r\n//                   <Label>Quantity </Label>\r\n//                   <Input\r\n//                     type=\"text\"\r\n//                     name=\"quantity\"\r\n//                     placeholder=\"Quantity\"\r\n//                     value={element.quantity || \"\"}\r\n//                     onChange={(e) => handleChange(index, e)}\r\n//                   />\r\n//                   {index ? (\r\n//                     <Button\r\n//                       className=\"button remove ml-1\"\r\n//                       color=\"primary\"\r\n//                       onClick={() => removeFormFields(index)}\r\n//                     >\r\n//                       Remove\r\n//                     </Button>\r\n//                   ) : null}\r\n//                 </div>\r\n//               ))}\r\n//               <div className=\"button-section\">\r\n//                 <Button\r\n//                   onClick={() => addFormFields()}\r\n//                   color=\"primary\"\r\n//                   className=\"mr-1 mt-2 mx-2\"\r\n//                 >\r\n//                   Add\r\n//                 </Button>\r\n//                 <Button\r\n//                   color=\"primary\"\r\n//                   className=\"mr-1 mt-2 mx-2 button submit\"\r\n//                   // className=\"button submit\"\r\n//                   type=\"submit\"\r\n//                 >\r\n//                   Submit\r\n//                 </Button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n\r\n//           <CardBody>\r\n//             <Form className=\"m-1\" onSubmit={submitHandler}>\r\n//               <Row className=\"mb-2\">\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Row></Row>\r\n//                     <Label for=\"cars\"> Product Seriel No. *</Label>\r\n//                     {/* {AssignRole === \"supplier\" ? ( */}\r\n//                     <>\r\n//                       <Multiselect\r\n//                         required\r\n//                         showCheckbox=\"true\"\r\n//                         isObject=\"false\"\r\n//                         options={StateList} // Options to display in the dropdown\r\n//                         // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n//                         onSelect={onSelect1} // Function will trigger on select event\r\n//                         onRemove={onRemove1} // Function will trigger on remove event\r\n//                         displayValue=\"state_title\" // Property name to display in the dropdown options\r\n//                       />\r\n//                     </>\r\n//                     {/* ) : (\r\n//                       <>\r\n//                         <select\r\n//                           required\r\n//                           name=\"SelectedState\"\r\n//                           value={SelectedState}\r\n//                           onChange={e => {\r\n//                             const formdata = new FormData();\r\n//                             setSelectedState(e.target.value);\r\n//                             formdata.append(\"state_id\", e.target.value);\r\n//                             axiosConfig\r\n//                               .post(`/getcity`, formdata)\r\n//                               .then(res => {\r\n//                                 setCityList(res?.data?.cities);\r\n//                               })\r\n//                               .catch(err => {\r\n//                                 console.log(err);\r\n//                               });\r\n//                           }}\r\n//                           className=\"form-control\"\r\n//                         >\r\n//                           <option value=\"volvo\">--Select State--</option>\r\n//                           {StateList &&\r\n//                             StateList?.map((ele, i) => (\r\n//                               <option key={i} value={ele?.id}>\r\n//                                 {ele?.state_title}\r\n//                               </option>\r\n//                             ))}\r\n//                         </select>\r\n//                       </>\r\n//                     )} */}\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Select Role*</Label>\r\n//                     <CustomInput\r\n//                       required\r\n//                       id=\"AssignRole\"\r\n//                       type=\"select\"\r\n//                       name=\"AssignRole\"\r\n//                       value={AssignRole}\r\n//                       // onChange={changeHandler}\r\n//                       onChange={(e) => setAssignRole(e.target.value)}\r\n//                     >\r\n//                       <option value=\"\">--Select Role--</option>\r\n\r\n//                       {productName &&\r\n//                         productName?.map((value, index) => (\r\n//                           <option key={index} value={value}>\r\n//                             {value}\r\n//                           </option>\r\n//                         ))}\r\n//                     </CustomInput>\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n//                   <FormGroup>\r\n//                     <Label>Name *</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter Your Name\"\r\n//                       name=\"fullname\"\r\n//                       value={fullname}\r\n//                       onChange={(e) => setfullname(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Display Code *</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter Your Name\"\r\n//                       name=\"UserName\"\r\n//                       value={UserName}\r\n//                       onChange={(e) => setUserName(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Mobile Number *</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"number\"\r\n//                       maxLength={12}\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       size={10}\r\n//                       min={0}\r\n//                       placeholder=\"0123456789\"\r\n//                       name=\"Mobile_no\"\r\n//                       value={Mobile_no}\r\n//                       onChange={(e) => setMobile_no(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Email *</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"email\"\r\n//                       placeholder=\"abcd@gmail.com...\"\r\n//                       name=\"email\"\r\n//                       value={email}\r\n//                       onChange={(e) => setemail(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Password</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"password\"\r\n//                       placeholder=\"Enter password\"\r\n//                       name=\"password\"\r\n//                       value={password}\r\n//                       onChange={(e) => setpassword(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Company Name</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter CompanyName\"\r\n//                       name=\"CompanyName\"\r\n//                       value={CompanyName}\r\n//                       onChange={(e) => setCompanyName(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Phone Number </Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"number\"\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       maxLength={12}\r\n//                       size={10}\r\n//                       placeholder=\"0123456789\"\r\n//                       name=\"Phone_no\"\r\n//                       value={Phone_no}\r\n//                       onChange={(e) => setPhone_no(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Company Type</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter Companytype\"\r\n//                       name=\"Companytype\"\r\n//                       value={Companytype}\r\n//                       onChange={(e) => setCompanytype(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>GSTIN</Label>\r\n//                     <Input\r\n//                       required\r\n//                       type=\"text\"\r\n//                       placeholder=\"Enter GSTIN No.\"\r\n//                       name=\"GSTIN\"\r\n//                       value={GSTIN}\r\n//                       onChange={(e) => setGSTIN(e.target.value)}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Row></Row>\r\n//                     <Label for=\"cars\"> State *</Label>\r\n//                     {AssignRole === \"supplier\" ? (\r\n//                       <>\r\n//                         <Multiselect\r\n//                           required\r\n//                           showCheckbox=\"true\"\r\n//                           isObject=\"false\"\r\n//                           options={StateList} // Options to display in the dropdown\r\n//                           // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n//                           onSelect={onSelect1} // Function will trigger on select event\r\n//                           onRemove={onRemove1} // Function will trigger on remove event\r\n//                           displayValue=\"state_title\" // Property name to display in the dropdown options\r\n//                         />\r\n//                       </>\r\n//                     ) : (\r\n//                       <>\r\n//                         <select\r\n//                           required\r\n//                           name=\"SelectedState\"\r\n//                           value={SelectedState}\r\n//                           onChange={(e) => {\r\n//                             const formdata = new FormData();\r\n//                             setSelectedState(e.target.value);\r\n//                             // this.setState({ SelectedState: e.target.value });\r\n//                             formdata.append(\"state_id\", e.target.value);\r\n//                             axiosConfig\r\n//                               .post(`/getcity`, formdata)\r\n//                               .then((res) => {\r\n//                                 setCityList(res?.data?.cities);\r\n//                                 // this.setState({ CityList: res?.data?.cities });\r\n//                               })\r\n//                               .catch((err) => {\r\n//                                 console.log(err);\r\n//                               });\r\n//                           }}\r\n//                           // onChange={this.changeHandler}\r\n//                           className=\"form-control\"\r\n//                         >\r\n//                           <option value=\"volvo\">--Select State--</option>\r\n//                           {StateList &&\r\n//                             StateList?.map((ele, i) => (\r\n//                               <option key={i} value={ele?.id}>\r\n//                                 {ele?.state_title}\r\n//                               </option>\r\n//                             ))}\r\n//                         </select>\r\n//                       </>\r\n//                     )}\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <Label for=\"cars\">City * </Label>\r\n//                   <Multiselect\r\n//                     required\r\n//                     options={CityList} // Options to display in the dropdown\r\n//                     // selectedValues={selectedValue} // Preselected value to persist in dropdown\r\n//                     onSelect={onSelect} // Function will trigger on select event\r\n//                     onRemove={onRemove} // Function will trigger on remove event\r\n//                     displayValue=\"name\" // Property name to display in the dropdown options\r\n//                   />\r\n//                 </Col>\r\n\r\n//                 {AssignRole === \"supplier\" ? (\r\n//                   <>\r\n//                     <Col lg=\"6\" md=\"6\">\r\n//                       <FormGroup>\r\n//                         <Label>Place of Supply</Label>\r\n//                         <Input\r\n//                           required\r\n//                           type=\"text\"\r\n//                           placeholder=\"Enter Place_of_Supply\"\r\n//                           name=\"Place_of_Supply\"\r\n//                           value={Place_of_Supply}\r\n//                           onChange={(e) => setPlace_of_Supply(e.target.value)}\r\n//                         />\r\n//                       </FormGroup>\r\n//                     </Col>\r\n//                   </>\r\n//                 ) : null}\r\n//               </Row>\r\n//               <hr />\r\n//               <Row>\r\n//                 <Col className=\"mt-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n//                   <h4 className=\"mt-5 pb-2\">Billing Address :</h4>\r\n\r\n//                   <Col className=\"\" lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label for=\"cars\">Choose Country</Label>\r\n//                       <select\r\n//                         placeholder=\"Enter City\"\r\n//                         name=\"B_Country\"\r\n//                         value={B_Country}\r\n//                         onChange={(e) => setB_Country(e.target.value)}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select Country--</option>\r\n//                         <option value=\"India\">India</option>\r\n//                       </select>\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label for=\"cars\">Choose State</Label>\r\n//                       <select\r\n//                         name=\"B_State\"\r\n//                         value={B_State}\r\n//                         onChange={(e) => {\r\n//                           console.log(e.target.value);\r\n//                           setB_State(e.target.value);\r\n//                           // this.setState({ B_State: e.target.value });\r\n//                           const formdata = new FormData();\r\n//                           formdata.append(\"state_id\", e.target.value);\r\n//                           axiosConfig\r\n//                             .post(`/getcity`, formdata)\r\n//                             .then((res) => {\r\n//                               setCityList(res?.data?.cities);\r\n//                               // this.setState({ CityList: res?.data?.cities });\r\n//                             })\r\n//                             .catch((err) => {\r\n//                               console.log(err);\r\n//                             });\r\n//                         }}\r\n//                         // onChange={this.changeHandler}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select State--</option>\r\n//                         {StateList &&\r\n//                           StateList?.map((ele, i) => (\r\n//                             <option key={i} value={ele?.id}>\r\n//                               {ele?.state_title}\r\n//                             </option>\r\n//                           ))}\r\n//                       </select>\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <FormGroup>\r\n//                         <Label for=\"cars\">Choose City</Label>\r\n//                         <select\r\n//                           placeholder=\"Enter City\"\r\n//                           name=\"B_City\"\r\n//                           value={B_City}\r\n//                           onChange={(e) => setB_City(e.target.value)}\r\n//                           className=\"form-control\"\r\n//                         >\r\n//                           <option value=\"volvo\">--Select City--</option>\r\n//                           {CityList &&\r\n//                             CityList?.map((value, index) => (\r\n//                               <option key={index} value={value?.id}>\r\n//                                 {value?.name}\r\n//                               </option>\r\n//                             ))}\r\n//                         </select>\r\n//                       </FormGroup>\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label>Street</Label>\r\n//                       <Input\r\n//                         required\r\n//                         type=\"text\"\r\n//                         placeholder=\"Enter Street\"\r\n//                         name=\"B_Street\"\r\n//                         value={B_Street}\r\n//                         onChange={(e) => setB_Street(e.target.value)}\r\n//                       />\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label>PinCode</Label>\r\n//                       <Input\r\n//                         required\r\n//                         type=\"number\"\r\n//                         onKeyDown={(e) =>\r\n//                           [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                           e.preventDefault()\r\n//                         }\r\n//                         min={0}\r\n//                         placeholder=\"Enter PinCode\"\r\n//                         name=\"B_PinCode\"\r\n//                         value={B_PinCode}\r\n//                         onChange={(e) => setB_PinCode(e.target.value)}\r\n//                       />\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n//                   <hr />\r\n//                   <Row>\r\n//                     <Col className=\"ml-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n//                       <Input\r\n//                         name=\"check\"\r\n//                         onChange={(e) => {\r\n//                           handleMatchaddress(e, e.target.checked);\r\n//                         }}\r\n//                         style={{\r\n//                           height: \"15px\",\r\n//                           width: \"20px\",\r\n//                         }}\r\n//                         type=\"checkbox\"\r\n//                       />\r\n//                     </Col>\r\n//                     <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"ml-3\">\r\n//                       <h5> Same as Billing Address </h5>\r\n//                     </Col>\r\n//                   </Row>\r\n//                   <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label for=\"cars\">Choose Country</Label>\r\n//                       <select\r\n//                         placeholder=\"Enter City\"\r\n//                         name=\"S_Country\"\r\n//                         disabled={checkbox ? true : false}\r\n//                         value={S_Country}\r\n//                         onChange={(e) => setS_Country(e.target.value)}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select Country--</option>\r\n//                         <option value=\"India\">India</option>\r\n//                       </select>\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label for=\"cars\">Choose State</Label>\r\n//                       <select\r\n//                         name=\"S_State\"\r\n//                         value={S_State}\r\n//                         onChange={(e) => {\r\n//                           // console.log(e.target.value);\r\n//                           setS_State(e.target.value);\r\n//                           // this.setState({ S_State: e.target.value });\r\n//                           const formdata = new FormData();\r\n//                           formdata.append(\"state_id\", e.target.value);\r\n//                           axiosConfig\r\n//                             .post(`/getcity`, formdata)\r\n//                             .then((res) => {\r\n//                               console.log(res?.data?.cities);\r\n//                               setCityList(res?.data?.cities);\r\n//                               // this.setState({ CityList: res?.data?.cities });\r\n//                             })\r\n//                             .catch((err) => {\r\n//                               console.log(err);\r\n//                             });\r\n//                         }}\r\n//                         // onChange={this.changeHandler}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select State--</option>\r\n//                         {StateList &&\r\n//                           StateList?.map((ele, i) => (\r\n//                             <option key={i} value={ele?.id}>\r\n//                               {ele?.state_title}\r\n//                             </option>\r\n//                           ))}\r\n//                       </select>\r\n//                       {/* <select\r\n//                         name=\"S_State\"\r\n//                         disabled={this.state.checkbox ? true : false}\r\n//                         value={this.state.S_State}\r\n//                         onChange={this.changeHandler}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select State--</option>\r\n//                         <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n//                         <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n//                         <option value=\"Maharastra\">Maharastra</option>\r\n//                       </select> */}\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <Label for=\"cars\">Choose City</Label>\r\n\r\n//                     <FormGroup>\r\n//                       <select\r\n//                         placeholder=\"Enter City\"\r\n//                         name=\"S_City\"\r\n//                         value={S_City}\r\n//                         onChange={(e) => setS_City(e.target.value)}\r\n//                         className=\"form-control\"\r\n//                       >\r\n//                         <option value=\"volvo\">--Select City--</option>\r\n//                         {CityList &&\r\n//                           CityList?.map((value, index) => (\r\n//                             <option key={index} value={value?.id}>\r\n//                               {value?.name}\r\n//                             </option>\r\n//                           ))}\r\n//                       </select>\r\n//                       {/* <FormGroup>\r\n//                         <select\r\n//                           disabled={this.state.checkbox ? true : false}\r\n//                           placeholder=\"Enter City\"\r\n//                           name=\"S_City\"\r\n//                           value={this.state.S_City}\r\n//                           onChange={this.changeHandler}\r\n//                           className=\"form-control\"\r\n//                         >\r\n//                           <option value=\"volvo\">--Select City--</option>\r\n//                           <option value=\"Indore\">Indore</option>\r\n//                           <option value=\"Panvel\">Panvel</option>\r\n//                           <option value=\"khandwa\">khandwa</option>\r\n//                         </select>\r\n//                       </FormGroup> */}\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label>Street</Label>\r\n//                       <Input\r\n//                         required\r\n//                         disabled={checkbox ? true : false}\r\n//                         type=\"text\"\r\n//                         placeholder=\"Enter Street\"\r\n//                         name=\"S_Street\"\r\n//                         value={S_Street}\r\n//                         onChange={(e) => setS_Street(e.target.value)}\r\n//                       />\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                   <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n//                     <FormGroup>\r\n//                       <Label>PinCode</Label>\r\n//                       <Input\r\n//                         required\r\n//                         disabled={checkbox ? true : false}\r\n//                         type=\"number\"\r\n//                         placeholder=\"Enter PinCode\"\r\n//                         onKeyDown={(e) =>\r\n//                           [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                           e.preventDefault()\r\n//                         }\r\n//                         min={0}\r\n//                         name=\"S_PinCode\"\r\n//                         value={S_PinCode}\r\n//                         onChange={(e) => setS_PinCode(e.target.value)}\r\n//                       />\r\n//                     </FormGroup>\r\n//                   </Col>\r\n//                 </Col>\r\n//               </Row>\r\n\r\n//               {/* {this.state.setuserList && ( */}\r\n//               <Row className=\"mt-2\">\r\n//                 <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n//                   <Label className=\"\">\r\n//                     <h4>Status</h4>\r\n//                   </Label>\r\n//                   <div\r\n//                     className=\"form-label-group\"\r\n//                     onChange={(e) => setstatus(e.target.value)}\r\n//                   >\r\n//                     <input\r\n//                       style={{ marginRight: \"3px\" }}\r\n//                       type=\"radio\"\r\n//                       name=\"status\"\r\n//                       value=\"Active\"\r\n//                     />\r\n//                     <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n//                     <input\r\n//                       style={{ marginRight: \"3px\" }}\r\n//                       type=\"radio\"\r\n//                       name=\"status\"\r\n//                       value=\"Deactive\"\r\n//                     />\r\n//                     <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n//                   </div>\r\n//                 </Col>\r\n//                 {/* <Col lg=\"6\" md=\"6\">\r\n//                   <Label className=\"mt-2  mb-2\"> Select User</Label>\r\n\r\n//                   <CustomInput\r\n//                     type=\"select\"\r\n//                     placeholder=\"\"\r\n//                     name=\"Selectuser\"\r\n//                     value={this.state.Selectuser}\r\n//                     onChange={this.changeHandler}\r\n//                   >\r\n//                     <option value=\"user1\">user 1</option>\r\n//                     <option value=\"user2\">user2</option>\r\n//                     <option value=\"user2\">UPI</option>\r\n//                     <option value=\"user2\">Other</option>\r\n//                   </CustomInput>\r\n//                 </Col> */}\r\n//               </Row>\r\n//               {/* )} */}\r\n\r\n//               <Row>\r\n//                 <Button.Ripple\r\n//                   color=\"primary\"\r\n//                   type=\"submit\"\r\n//                   className=\"mr-1 mt-2 mx-2\"\r\n//                 >\r\n//                   Submit\r\n//                 </Button.Ripple>\r\n//               </Row>\r\n//             </Form>\r\n//           </CardBody>\r\n//         </Card>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default AddProduct;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}
>>>>>>>> dba8e899a573457d3be831ce207d17e2017b79b1:build/static/js/234.2e58ea04.chunk.js.map
