{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/Container.js","../node_modules/reactstrap/es/InputGroupAddon.js","assets/img/svg/google.svg","views/pages/authentication/login/LoginFirebase.js","views/pages/authentication/login/LoginJWT.js","../../../src/index.tsx","views/pages/authentication/login/Login.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","InputGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","InputGroupText","fluid","oneOfType","bool","Container","containerClass","addonType","oneOf","isRequired","children","node","InputGroupAddon","module","exports","LoginFirebase","state","email","password","remember","handleLogin","e","preventDefault","submitLoginWithFireBase","handleRemember","setState","target","Fragment","CardBody","Form","action","onSubmit","FormGroup","Input","placeholder","required","Label","to","Button","Ripple","loginWithFB","loginWithTwitter","stroke","loginWithGoogle","src","googleSvg","alt","height","width","loginWithGithub","connect","values","auth","login","LoginJWT","loginWithJWT","isStyleObject","obj","_a","_b","_c","numInputs","onPaste","renderInput","_d","shouldAutoFocus","_e","inputType","renderSeparator","containerStyle","inputStyle","_f","skipDefaultStyles","useState","activeInput","setActiveInput","inputRefs","useRef","getOTPValue","toString","split","isInputNum","useEffect","current","slice","focus","getPlaceholderValue","length","console","error","isInputValueValid","isNaN","Number","trim","handleChange","event","changeCodeAtFocus","focusInput","handleInputChange","nativeEvent","data","handleBlur","handleKeyDown","otp","code","key","includes","index","Math","max","min","select","handleOTPChange","otpValue","join","handlePaste","nextActiveInput","pastedData","clipboardData","getData","some","pos","shift","style","Object","assign","display","alignItems","undefined","Array","from","_","map","ref","element","onFocus","handleFocus","onBlur","onKeyDown","autoComplete","maxLength","textAlign","inputMode","onInput","i","Login","handlechange","name","loginOTPHandler","emailotp","Opt","username","UserOTPVerify","then","response","basicinfor","user","newinfor","user1","allinfor","log","token","status","context","setUserInformatio","localStorage","setItem","JSON","stringify","setTimeout","history","push","swal","buttons","ok","text","catch","err","handleUserLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","CurentTime","Date","timestamp","toLocaleString","Location","latitude","coords","longitude","Error","message","timeout","enableHighAccuracy","loginHandler","UserLogin","res","title","dangerMode","changepassword","formdata","FormData","append","axiosConfig","post","resetpassword","Otp","preventBackButton","getLocationAndUpdateState","window","pushState","location","href","popstateHandler","go","addEventListener","allowBackButton","removeEventListener","UserCredential","Row","Col","sm","xl","lg","md","Card","logo","CardHeader","CardTitle","OtpScreen","parse","gmail","whatsapp","whatsappotp","sms","smsotp","TabContent","activeTab","TabPane","tabId","border","cursor","outline","contextType","UserContext","row","check","inline"],"mappings":"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","file":"static/js/142.1a360b0c.chunk.js","sourcesContent":["import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"size\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","module.exports = __webpack_public_path__ + \"static/media/google.73cbaa09.svg\";","import React from \"react\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check, Facebook, Twitter, GitHub } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport googleSvg from \"../../../../assets/img/svg/google.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  submitLoginWithFireBase,\r\n  loginWithFB,\r\n  loginWithTwitter,\r\n  loginWithGoogle,\r\n  loginWithGithub,\r\n} from \"../../../../redux/actions/auth/loginActions\";\r\n\r\nclass LoginFirebase extends React.Component {\r\n  state = {\r\n    email: \"demo@demo.com\",\r\n    password: \"demodemo\",\r\n    remember: false,\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.submitLoginWithFireBase(\r\n      this.state.email,\r\n      this.state.password,\r\n      this.state.remember\r\n    );\r\n  };\r\n\r\n  handleRemember = (e) => {\r\n    this.setState({\r\n      remember: e.target.checked,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form action=\"/\" onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {/* <Button.Ripple\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => {\r\n                  history.push(\"/pages/register\");\r\n                }}\r\n              >\r\n                Register\r\n              </Button.Ripple> */}\r\n              <Button.Ripple color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button.Ripple>\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n        <div className=\"auth-footer\">\r\n          <div className=\"divider\">\r\n            <div className=\"divider-text\">OR</div>\r\n          </div>\r\n          <div className=\"footer-btn\">\r\n            <Button.Ripple\r\n              className=\"btn-facebook\"\r\n              color=\"\"\r\n              onClick={() => {\r\n                this.props.loginWithFB();\r\n              }}\r\n            >\r\n              <Facebook size={14} />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-twitter\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithTwitter}\r\n            >\r\n              <Twitter size={14} stroke=\"white\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-google\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithGoogle}\r\n            >\r\n              <img src={googleSvg} alt=\"google\" height=\"15\" width=\"15\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-github\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithGithub}\r\n            >\r\n              <GitHub size={14} stroke=\"white\" />\r\n            </Button.Ripple>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitLoginWithFireBase,\r\n  loginWithFB,\r\n  loginWithTwitter,\r\n  loginWithGoogle,\r\n  loginWithGithub,\r\n})(LoginFirebase);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"../../../../history\";\r\n\r\nclass LoginJWT extends React.Component {\r\n  state = {\r\n    email: \"admin@gmail.com\",\r\n    password: \"12345\",\r\n    remember: false,\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.loginWithJWT(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form action=\"/\" onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {/* <Button.Ripple\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => {\r\n                  history.push(\"/pages/register\");\r\n                }}\r\n              >\r\n                Register\r\n              </Button.Ripple> */}\r\n              <Button.Ripple color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button.Ripple>\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\n\r\n","import React from 'react';\n\ntype AllowedInputTypes = 'password' | 'text' | 'number' | 'tel';\n\ntype InputProps = Required<\n  Pick<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    | 'value'\n    | 'onChange'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onKeyDown'\n    | 'onPaste'\n    | 'aria-label'\n    | 'maxLength'\n    | 'autoComplete'\n    | 'style'\n    | 'inputMode'\n    | 'onInput'\n  > & {\n    ref: React.RefCallback<HTMLInputElement>;\n    placeholder: string | undefined;\n    className: string | undefined;\n    type: AllowedInputTypes;\n  }\n>;\n\ninterface OTPInputProps {\n  /** Value of the OTP input */\n  value?: string;\n  /** Number of OTP inputs to be rendered */\n  numInputs?: number;\n  /** Callback to be called when the OTP value changes */\n  onChange: (otp: string) => void;\n  /** Callback to be called when pasting content into the component */\n  onPaste?: (event: React.ClipboardEvent<HTMLDivElement>) => void;\n  /** Function to render the input */\n  renderInput: (inputProps: InputProps, index: number) => React.ReactNode;\n  /** Whether the first input should be auto focused */\n  shouldAutoFocus?: boolean;\n  /** Placeholder for the inputs */\n  placeholder?: string;\n  /** Function to render the separator */\n  renderSeparator?: ((index: number) => React.ReactNode) | React.ReactNode;\n  /** Style for the container */\n  containerStyle?: React.CSSProperties | string;\n  /** Style for the input */\n  inputStyle?: React.CSSProperties | string;\n  /** The type that will be passed to the input being rendered */\n  inputType?: AllowedInputTypes;\n  /** Do not apply the default styles to the inputs, will be removed in future versions */\n  skipDefaultStyles?: boolean; // TODO: Remove in next major release\n}\n\nconst isStyleObject = (obj: unknown) => typeof obj === 'object' && obj !== null;\n\nconst OTPInput = ({\n  value = '',\n  numInputs = 4,\n  onChange,\n  onPaste,\n  renderInput,\n  shouldAutoFocus = false,\n  inputType = 'text',\n  renderSeparator,\n  placeholder,\n  containerStyle,\n  inputStyle,\n  skipDefaultStyles = false,\n}: OTPInputProps) => {\n  const [activeInput, setActiveInput] = React.useState(0);\n  const inputRefs = React.useRef<Array<HTMLInputElement | null>>([]);\n\n  const getOTPValue = () => (value ? value.toString().split('') : []);\n\n  const isInputNum = inputType === 'number' || inputType === 'tel';\n\n  React.useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, numInputs);\n  }, [numInputs]);\n\n  React.useEffect(() => {\n    if (shouldAutoFocus) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [shouldAutoFocus]);\n\n  const getPlaceholderValue = () => {\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n    return undefined;\n  };\n\n  const isInputValueValid = (value: string) => {\n    const isTypeValid = isInputNum ? !isNaN(Number(value)) : typeof value === 'string';\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (isInputValueValid(value)) {\n      changeCodeAtFocus(value);\n      focusInput(activeInput + 1);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { nativeEvent } = event;\n    if (!isInputValueValid(event.target.value)) {\n      // @ts-expect-error - This was added previosly to handle and edge case\n      // for dealing with keyCode \"229 Unidentified\" on Android. Check if this is\n      // still needed.\n      if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n        event.preventDefault();\n        changeCodeAtFocus('');\n        focusInput(activeInput - 1);\n      }\n      // Clear the input if it's not valid value because firefox allows\n      // pasting non-numeric characters in a number type input\n      event.target.value = '';\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => (index: number) => {\n    setActiveInput(index);\n    event.target.select();\n  };\n\n  const handleBlur = () => {\n    setActiveInput(activeInput - 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const otp = getOTPValue();\n    if ([event.code, event.key].includes('Backspace')) {\n      event.preventDefault();\n      changeCodeAtFocus('');\n      focusInput(activeInput - 1);\n    } else if (event.code === 'Delete') {\n      event.preventDefault();\n      changeCodeAtFocus('');\n    } else if (event.code === 'ArrowLeft') {\n      event.preventDefault();\n      focusInput(activeInput - 1);\n    } else if (event.code === 'ArrowRight') {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    }\n    // React does not trigger onChange when the same value is entered\n    // again. So we need to focus the next input manually in this case.\n    else if (event.key === otp[activeInput]) {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    } else if (\n      event.code === 'Spacebar' ||\n      event.code === 'Space' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    }\n  };\n\n  const focusInput = (index: number) => {\n    const activeInput = Math.max(Math.min(numInputs - 1, index), 0);\n\n    if (inputRefs.current[activeInput]) {\n      inputRefs.current[activeInput]?.focus();\n      inputRefs.current[activeInput]?.select();\n      setActiveInput(activeInput);\n    }\n  };\n\n  const changeCodeAtFocus = (value: string) => {\n    const otp = getOTPValue();\n    otp[activeInput] = value[0];\n    handleOTPChange(otp);\n  };\n\n  const handleOTPChange = (otp: Array<string>) => {\n    const otpValue = otp.join('');\n    onChange(otpValue);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    const otp = getOTPValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = event.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Prevent pasting if the clipboard data contains non-numeric values for number inputs\n    if (isInputNum && pastedData.some((value) => isNaN(Number(value)))) {\n      return;\n    }\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift() ?? '';\n        nextActiveInput++;\n      }\n    }\n\n    focusInput(nextActiveInput);\n    handleOTPChange(otp);\n  };\n\n  return (\n    <div\n      style={Object.assign({ display: 'flex', alignItems: 'center' }, isStyleObject(containerStyle) && containerStyle)}\n      className={typeof containerStyle === 'string' ? containerStyle : undefined}\n      onPaste={onPaste}\n    >\n      {Array.from({ length: numInputs }, (_, index) => index).map((index) => (\n        <React.Fragment key={index}>\n          {renderInput(\n            {\n              value: getOTPValue()[index] ?? '',\n              placeholder: getPlaceholderValue()?.[index] ?? undefined,\n              ref: (element) => (inputRefs.current[index] = element),\n              onChange: handleChange,\n              onFocus: (event) => handleFocus(event)(index),\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              onPaste: handlePaste,\n              autoComplete: 'off',\n              maxLength: 1,\n              'aria-label': `Please enter OTP character ${index + 1}`,\n              style: Object.assign(\n                !skipDefaultStyles ? ({ width: '1em', textAlign: 'center' } as const) : {},\n                isStyleObject(inputStyle) ? inputStyle : {}\n              ),\n              className: typeof inputStyle === 'string' ? inputStyle : undefined,\n              type: inputType,\n              inputMode: isInputNum ? 'numeric' : 'text',\n              onInput: handleInputChange,\n            },\n            index\n          )}\n          {index < numInputs - 1 && (typeof renderSeparator === 'function' ? renderSeparator(index) : renderSeparator)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport type { OTPInputProps, InputProps, AllowedInputTypes };\nexport default OTPInput;\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  CardTitle,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardHeader,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  TabContent,\r\n  TabPane,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport { FaBeer } from \"react-icons/fa\";\r\nimport logo from \"../../../../assets/img/logo/mainLogo1.png\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\nimport { history } from \"../../../../history\";\r\nimport LoginAuth0 from \"./LoginAuth0\";\r\nimport LoginFirebase from \"./LoginFirebase\";\r\nimport LoginJWT from \"./LoginJWT\";\r\nimport { connect } from \"react-redux\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { UserLogin, UserOTPVerify } from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\n\r\nclass Login extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      Otp: \"\",\r\n      Location: { latitude: \"\", longitude: \"\", timestamp: \"\" },\r\n      Error: \"\",\r\n      Otp: \"\",\r\n      emailotp: \"\",\r\n      type: \"password\",\r\n      whatsappotp: \"\",\r\n      smsotp: \"\",\r\n      OtpScreen: false,\r\n      UserCredential: {},\r\n      password: \"\",\r\n      resetpassword: false,\r\n    };\r\n  }\r\n  // async componentDidMount() {\r\n  //   this.preventBackButton();\r\n  //   await this.handleUserLocation();\r\n  // }\r\n  async getLocationAndUpdateState() {\r\n    try {\r\n      await this.handleUserLocation();\r\n      // Additional logic after obtaining location, if needed\r\n    } catch (error) {\r\n      console.error(\"Error obtaining location:\", error);\r\n      // Handle the error or update state accordingly\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    this.preventBackButton();\r\n    await this.getLocationAndUpdateState();\r\n  }\r\n  preventBackButton() {\r\n    window.history.pushState(null, null, window.location.href);\r\n    this.popstateHandler = function () {\r\n      window.history.go(1);\r\n    };\r\n    window.addEventListener(\"popstate\", this.popstateHandler);\r\n  }\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  componentWillUnmount() {\r\n    this.allowBackButton();\r\n  }\r\n  allowBackButton() {\r\n    window.removeEventListener(\"popstate\", this.popstateHandler);\r\n  }\r\n  loginOTPHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.emailotp?.length == 6) {\r\n      let Opt = { otp: this.state.emailotp, username: this.state.email };\r\n\r\n      await UserOTPVerify(Opt)\r\n        .then((response) => {\r\n          let basicinfor = response?.user;\r\n          let newinfor = response?.user?.user1;\r\n          let allinfor = { ...basicinfor, ...newinfor };\r\n          console.log(response?.user?.token);\r\n          if (response?.status) {\r\n            this.context?.setUserInformatio(allinfor);\r\n            localStorage.setItem(\"userData\", JSON.stringify(allinfor));\r\n            localStorage.setItem(\r\n              \"userToken\",\r\n              JSON.stringify(response?.user?.token)\r\n            );\r\n\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/dashboard\");\r\n            }, 1500);\r\n            swal(\r\n              \"Sucessfully login\",\r\n              \"You are LoggedIn!\",\r\n\r\n              {\r\n                buttons: {\r\n                  ok: { text: \"Ok\", value: \"ok\" },\r\n                },\r\n              }\r\n            ).then((value) => {\r\n              switch (value) {\r\n                case \"ok\":\r\n                  break;\r\n                default:\r\n              }\r\n            });\r\n          } else {\r\n            swal(\"Something Went Wrong\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n          swal(\r\n            `Error`,\r\n            `${err.response?.data.error} Please Enter correct Details`\r\n          );\r\n        });\r\n    } else {\r\n      swal(\"Please Enter OTP\");\r\n      // swal({\r\n      //   title: \"Are you sure?\",\r\n      //   text: \"Are you sure that you want to leave this page?\",\r\n      //   icon: \"warning\",\r\n      //   dangerMode: true,\r\n      // }).then((willDelete) => {\r\n      //   if (willDelete) {\r\n      //     swal(\"Deleted!\", \"Your imaginary file has been deleted!\", \"success\");\r\n      //   }\r\n      // });\r\n    }\r\n  };\r\n  handleUserLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const date = new Date(position.timestamp);\r\n            const CurentTime = date.toLocaleString();\r\n\r\n            this.state.Location.latitude = position.coords.latitude;\r\n            this.state.Location.longitude = position.coords.longitude;\r\n            this.state.Location.timestamp = CurentTime;\r\n            // this.setState((prevState) => ({\r\n            //   Location: {\r\n            //     ...prevState.Location,\r\n            //     latitude: position.coords.latitude,\r\n            //     longitude: position.coords.longitude,\r\n            //     timestamp: currentTime,\r\n            //   },\r\n            //   Error: null, // Reset error if successful\r\n            // }));\r\n\r\n            resolve(); // Resolve the promise when location is obtained\r\n          },\r\n          (error) => {\r\n            this.setState({ Error: `Error: ${error.message}` });\r\n            reject(error); // Reject the promise if there's an error\r\n          },\r\n          { timeout: 10000, enableHighAccuracy: true }\r\n        );\r\n      } else {\r\n        this.setState({\r\n          Error: \"Geolocation is not supported by this browser.\",\r\n        });\r\n        reject(new Error(\"Geolocation is not supported by this browser.\"));\r\n      }\r\n    });\r\n  };\r\n  // handleUserLocation = () => {\r\n  //   if (navigator.geolocation) {\r\n  //     navigator.geolocation.getCurrentPosition(\r\n  //       (position) => {\r\n  //         const date = new Date(position.timestamp);\r\n  //         const CurentTime = date.toLocaleString();\r\n\r\n  //         this.state.Location.latitude = position.coords.latitude;\r\n  //         this.state.Location.longitude = position.coords.longitude;\r\n  //         this.state.Location.timestamp = CurentTime;\r\n  //       },\r\n  //       (error) => {\r\n  //         this.setState({ Error: `Error: ${error}` });\r\n  //       },\r\n  //       { timeout: 10000, enableHighAccuracy: true }\r\n  //     );\r\n  //   } else {\r\n  //     this.setState({\r\n  //       Error: \"Geolocation is not supported by this browser.\",\r\n  //     });\r\n  //   }\r\n  // };\r\n  loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    // await this.handleUserLocation();\r\n    // this.props.history.push(\"/dashboard\");\r\n    let data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      // latitude: this.state.Location.latitude,\r\n      // longitude: this.state.Location?.longitude,\r\n      // currentAddress: response.data.display_name,\r\n    };\r\n    await UserLogin(data)\r\n      .then((res) => {\r\n        let basicinfor = res?.user;\r\n        localStorage.setItem(\"userData\", JSON.stringify(basicinfor));\r\n        this.context?.setUserInformatio(basicinfor);\r\n\r\n        swal(\r\n          \"Success\",\r\n          \"You are LoggedIn!\",\r\n\r\n          {\r\n            buttons: {\r\n              ok: { text: \"Ok\", value: \"ok\" },\r\n            },\r\n          }\r\n        ).then((value) => {\r\n          switch (value) {\r\n            case \"ok\":\r\n              break;\r\n            default:\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/dashboard\");\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response?.data.message);\r\n\r\n        if (err.response?.data.message == \"Incorrect password\") {\r\n          swal({\r\n            title: \"Some Error Occurred\",\r\n            text: `Incorrect Password`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        } else if (err.response?.data.message == \"Incorrect Email\") {\r\n          // swal(\"Error\", \"Please Enter Correct Password\");\r\n          swal({\r\n            title: \"Some Error Occurred\",\r\n            text: `Incorrect Email`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        } else {\r\n          swal({\r\n            title: \"Please Enter Correct Username\",\r\n            text: `Incorrect username`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        }\r\n      });\r\n    // console.log(this.state.Location);\r\n    // if (this.state.Location.latitude && this.state.Location?.longitude) {\r\n    //   try {\r\n    //     const apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${this.state.Location.latitude}&lon=${this.state.Location?.longitude}`;\r\n    //     const response = await axios.get(apiUrl);\r\n    //     // console.log(response);\r\n    //     if (response.data.display_name) {\r\n    //       // setAddress(response.data.display_name);\r\n    //       let data = {\r\n    //         email: this.state.email,\r\n    //         password: this.state.password,\r\n    //         latitude: this.state.Location.latitude,\r\n    //         longitude: this.state.Location?.longitude,\r\n    //         currentAddress: response.data.display_name,\r\n    //       };\r\n    //       await UserLogin(data)\r\n    //         .then((res) => {\r\n    //           let basicinfor = res?.user;\r\n    //           localStorage.setItem(\"userData\", JSON.stringify(basicinfor));\r\n    //           this.context?.setUserInformatio(basicinfor);\r\n\r\n    //           swal(\r\n    //             \"Sucessfully login\",\r\n    //             \"You are LoggedIn!\",\r\n    //             \"Success\",\r\n\r\n    //             {\r\n    //               buttons: {\r\n    //                 ok: { text: \"Ok\", value: \"ok\" },\r\n    //               },\r\n    //             }\r\n    //           ).then((value) => {\r\n    //             switch (value) {\r\n    //               case \"ok\":\r\n    //                 break;\r\n    //               default:\r\n    //             }\r\n    //           });\r\n    //           setTimeout(() => {\r\n    //             this.props.history.push(\"/dashboard\");\r\n    //           }, 2000);\r\n    //         })\r\n    //         .catch((err) => {\r\n    //           console.log(err.response?.data.message);\r\n\r\n    //           if (err.response?.data.message == \"Incorrect password\") {\r\n    //             swal({\r\n    //               title: \"Some Error Occurred\",\r\n    //               text: `Incorrect Password`,\r\n    //               icon: \"warning\",\r\n    //               dangerMode: false,\r\n    //             });\r\n    //           } else if (err.response?.data.message == \"Incorrect Email\") {\r\n    //             // swal(\"Error\", \"Please Enter Correct Password\");\r\n    //             swal({\r\n    //               title: \"Some Error Occurred\",\r\n    //               text: `Incorrect Email`,\r\n    //               icon: \"warning\",\r\n    //               dangerMode: false,\r\n    //             });\r\n    //           } else {\r\n    //             swal({\r\n    //               title: \"Please Enter Correct Username\",\r\n    //               text: `Incorrect username`,\r\n    //               icon: \"warning\",\r\n    //               dangerMode: false,\r\n    //             });\r\n    //           }\r\n    //         });\r\n    //     } else {\r\n    //       // setAddress(\"No address found\");\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(\"Error fetching geo-Location data:\", error);\r\n    //   }\r\n    // } else {\r\n    //   swal(\"Please Give Persmission of your Current Location\");\r\n    // }\r\n\r\n    // const fromdata = new FormData();\r\n    // fromdata.append(\"username\", this.state.email);\r\n    // fromdata.append(\"password\", this.state.password);\r\n    // axiosConfig\r\n    //   .post(\"/usersign\", fromdata)\r\n    //   .then((response) => {\r\n    //     let msg = response.data?.success;\r\n    //     if (msg) {\r\n    //       localStorage.setItem(\"userData\", JSON.stringify(response.data?.data));\r\n    //       setTimeout(() => {\r\n    //         this.props.history.push(\"/dashboard\");\r\n    //       }, 2000);\r\n    //       swal(\r\n    //         \"Sucessfully login\",\r\n    //         \"You are LoggedIn!\",\r\n    //         \"Success\",\r\n\r\n    //         {\r\n    //           buttons: {\r\n    //             ok: { text: \"Ok\", value: \"ok\" },\r\n    //           },\r\n    //         }\r\n    //       ).then((value) => {\r\n    //         switch (value) {\r\n    //           case \"ok\":\r\n    //             break;\r\n    //           default:\r\n    //         }\r\n    //       });\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     let msg = error.response?.data.success;\r\n    //     if (!msg) {\r\n    //       swal(\"Error\", \"Invalid Username or Password\");\r\n    //     }\r\n    //   });\r\n  };\r\n  changepassword = (e) => {\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    formdata.append(\"email\", this.state.email);\r\n    formdata.append(\"base_url\", \"this.state.password\");\r\n    axiosConfig\r\n      .post(\"/forgetPasswordEmailVerify\", formdata)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({ resetpassword: false });\r\n        swal(\"Email has been sent to Your Mail id\", \"Please Check and verify\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  // handleChangeOTP = (otp) => {\r\n  //   // console.log(otp);\r\n  //   this.setState({ emailotp: otp });\r\n  // };\r\n\r\n  render() {\r\n    const { UserCredential } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row className=\"m-0 justify-content-center\">\r\n          <Col\r\n            sm=\"5\"\r\n            xl=\"5\"\r\n            lg=\"5\"\r\n            md=\"5\"\r\n            className=\"d-flex justify-content-center\">\r\n            <Card className=\"bg-authentication login-card rounded-0 mb-0 w-100\">\r\n              <Row className=\"m-0\">\r\n                <Col lg=\"12\" md=\"12\" className=\"p-1\">\r\n                  <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\r\n                    <div className=\"logo-box text-center p-2\">\r\n                      <img\r\n                        src={logo}\r\n                        alt=\"loginImg\"\r\n                        width=\"100%\"\r\n                        height=\"110px\"\r\n                      />\r\n                    </div>\r\n\r\n                    {this.state.resetpassword ? (\r\n                      <>\r\n                        <CardHeader className=\"pb-1\">\r\n                          <CardTitle>\r\n                            <h4 className=\"mb-0\">\r\n                              <strong>Email Verification</strong>\r\n                            </h4>\r\n                          </CardTitle>\r\n                        </CardHeader>\r\n                        <p className=\"px-2 auth-title mb-2\">\r\n                          Welcome , Please Enter details.\r\n                        </p>\r\n                        <Form onSubmit={this.changepassword}>\r\n                          <Label>Email</Label>\r\n                          <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"email\"\r\n                              placeholder=\"Username\"\r\n                              value={this.state.email}\r\n                              onChange={this.handlechange}\r\n                              // required\r\n                            />\r\n                          </FormGroup>\r\n                          <div className=\"d-flex justify-content-center\">\r\n                            <Button.Ripple color=\"primary\" type=\"submit\">\r\n                              Submit\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </Form>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <>\r\n                          {this.state.OtpScreen && this.state.OtpScreen ? (\r\n                            <>\r\n                              <CardHeader className=\"\">\r\n                                <CardTitle>\r\n                                  <h4 className=\"mb-0\">\r\n                                    <strong>Login</strong>\r\n                                  </h4>\r\n                                </CardTitle>\r\n                              </CardHeader>\r\n                              <p className=\"px-2 auth-title\">\r\n                                Welcome , Enter OTP to Login your Account.\r\n                              </p>\r\n                              <p className=\"px-2 auth-title\">\r\n                                {this.state.Error}{\" \"}\r\n                                {\r\n                                  (this.state.Location.latitude,\r\n                                  this.state.Location.longitude,\r\n                                  this.state.Location.timestamp)\r\n                                }\r\n                              </p>\r\n                              <Form onSubmit={this.loginOTPHandler}>\r\n                                <FormGroup className=\"otpscreeen d-flex justify-content-center\"></FormGroup>\r\n                                <div className=\"py-1 d-flex justify-content-center\">\r\n                                  {JSON.parse(UserCredential?.gmail) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">\r\n                                        Email OTP\r\n                                      </p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.emailotp}\r\n                                        name=\"emailotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ emailotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                  {JSON.parse(UserCredential?.whatsapp) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">\r\n                                        Whatsapp OTP\r\n                                      </p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.whatsappotp}\r\n                                        name=\"whatsappotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ whatsappotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                  {JSON.parse(UserCredential?.sms) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">SMS OTP</p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.smsotp}\r\n                                        name=\"smsotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ smsotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                  {/* <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      this.setState({ resetpassword: true });\r\n                                    }}\r\n                                    // onClick={() => {\r\n                                    //   history.push(\"/pages/reset-password\");\r\n                                    // }}\r\n                                  >\r\n                                    Forget Password\r\n                                  </Button.Ripple> */}\r\n                                  <Button.Ripple\r\n                                    width=\"80%\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\">\r\n                                    Login\r\n                                  </Button.Ripple>\r\n                                  <TabContent activeTab={this.state.activeTab}>\r\n                                    <TabPane tabId=\"1\">\r\n                                      <LoginJWT />\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"2\">\r\n                                      <LoginFirebase />\r\n                                    </TabPane>\r\n                                  </TabContent>\r\n                                </div>\r\n                              </Form>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <CardHeader className=\"pb-1\">\r\n                                <CardTitle>\r\n                                  <h4 className=\"mb-0\">\r\n                                    <strong>Login</strong>\r\n                                  </h4>\r\n                                </CardTitle>\r\n                              </CardHeader>\r\n                              <p className=\"px-2 auth-title mb-2\">\r\n                                Welcome back, Please login to your account.\r\n                              </p>\r\n                              <Form onSubmit={this.loginHandler}>\r\n                                {/* <Label>UserName</Label> */}\r\n                                <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                  <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      username\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"email\"\r\n                                      placeholder=\"User Name\"\r\n                                      value={this.state.email}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                  </InputGroup>\r\n                                </FormGroup>\r\n\r\n                                {/* <Label>Password</Label> */}\r\n                                <FormGroup className=\"passwordlogin form-label-group position-relative has-icon-left\">\r\n                                  <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      Password\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type={this.state.type}\r\n                                      name=\"password\"\r\n                                      placeholder=\"Password\"\r\n                                      value={this.state.password}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                    <button\r\n                                      style={{ width: \"34px\", border: \"none\" }}\r\n                                      className=\"viewbuttonheading\">\r\n                                      <span\r\n                                        className=\"eyeviewpassword\"\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          cursor: \"pointer\",\r\n                                        }}>\r\n                                        {this.state.type == \"text\" ? (\r\n                                          <>\r\n                                            <AiFillEyeInvisible\r\n                                              onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                this.setState({\r\n                                                  type: \"password\",\r\n                                                });\r\n                                              }}\r\n                                              size=\"25px\"\r\n                                              style={{\r\n                                                color: \"#00c0ef\",\r\n                                              }}\r\n                                            />\r\n                                          </>\r\n                                        ) : (\r\n                                          <>\r\n                                            <AiFillEye\r\n                                              onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                this.setState({ type: \"text\" });\r\n                                              }}\r\n                                              size=\"25px\"\r\n                                              style={{\r\n                                                color: \"#00c0ef\",\r\n                                              }}\r\n                                            />\r\n                                          </>\r\n                                        )}\r\n                                      </span>\r\n                                    </button>\r\n                                  </InputGroup>\r\n                                  {/* <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      Password\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type={this.state.type}\r\n                                      name=\"password\"\r\n                                      placeholder=\"Password\"\r\n                                      value={this.state.password}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                    <span\r\n                                      className=\"eyeviewpassword\"\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        cursor: \"pointer\",\r\n                                      }}\r\n                                    >\r\n                                      {this.state.type == \"text\" ? (\r\n                                        <>\r\n                                          {\" \"}\r\n                                          <AiFillEyeInvisible\r\n                                            onClick={() =>\r\n                                              this.setState({\r\n                                                type: \"password\",\r\n                                              })\r\n                                            }\r\n                                            size=\"25px\"\r\n                                            color=\"blue\"\r\n                                          />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <AiFillEye\r\n                                            onClick={() =>\r\n                                              this.setState({ type: \"text\" })\r\n                                            }\r\n                                            size=\"25px\"\r\n                                            color=\"blue\"\r\n                                          />\r\n                                        </>\r\n                                      )}\r\n                                    </span>\r\n                                  </InputGroup> */}\r\n                                </FormGroup>\r\n\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                  <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      this.setState({ resetpassword: true });\r\n                                    }}\r\n                                    // onClick={() => {\r\n                                    //   history.push(\"/pages/reset-password\");\r\n                                    // }}\r\n                                  >\r\n                                    Forget Password\r\n                                  </Button.Ripple>\r\n                                  <Button.Ripple color=\"primary\" type=\"submit\">\r\n                                    Login\r\n                                  </Button.Ripple>\r\n                                  <TabContent activeTab={this.state.activeTab}>\r\n                                    <TabPane tabId=\"1\">\r\n                                      <LoginJWT />\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"2\">\r\n                                      <LoginFirebase />\r\n                                    </TabPane>\r\n                                  </TabContent>\r\n                                </div>\r\n                              </Form>\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      </>\r\n                    )}\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}