{"version":3,"sources":["views/apps/freshlist/accounts/CreateHeirarchy.js"],"names":["TreeNode","node","useState","isExpanded","setIsExpanded","className","style","marginLeft","depth","fontSize","onClick","roles","departmentName","roleName","rolePosition","map","child","key","id","Tree","data","CreateHeriarchy","DepartmentWithRole","setDepartmentWithRole","useEffect","userData","JSON","parse","localStorage","getItem","_Get","Deptartment_with_Role","database","then","res","console","log","Department","catch","err","lg","render","history","cursor","color","goBack","ele","i"],"mappings":"oRAOMA,EAAW,SAAXA,EAAQ,GAAkB,IAAD,IAAXC,EAAI,EAAJA,KAClB,EAAoCC,oBAAS,GAAM,mBAA5CC,EAAU,KAAEC,EAAa,KAMhC,OACE,yBAAKC,UAAU,kCACb,yBAAKA,UAAU,SAASC,MAAO,CAAEC,WAAW,GAAD,OAAkB,GAAbN,EAAKO,MAAU,QAC7D,0BAAMF,MAAO,CAAEG,SAAU,QAAUC,QAPpB,WACnBN,GAAeD,KAORF,EAAKU,QAAUR,EAAa,MAAQ,QAEvC,wBAAIG,MAAO,CAAEG,SAAU,QAAUJ,UAAU,SACnC,OAAJJ,QAAI,IAAJA,GAAoB,QAAhB,EAAJA,EAAMW,sBAAc,WAAhB,EAAJ,EAAsBA,kBAClB,OAAJX,QAAI,IAAJA,GAAoB,QAAhB,EAAJA,EAAMW,sBAAc,WAAhB,EAAJ,EAAsBA,kBACjB,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,WACL,oCACO,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,SAAS,aAAe,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMa,aAAa,OAKvDX,GACCF,EAAKU,OACLV,EAAKU,MAAMI,KAAI,SAACC,GAAK,OAAK,kBAAChB,EAAQ,CAACiB,IAAKD,EAAME,GAAIjB,KAAMe,SAK3DG,EAAO,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACd,OAAO,kBAACpB,EAAQ,CAACC,KAAMmB,KA2JVC,UArEf,WACE,MAAoDnB,mBAAS,IAAG,mBAAzDoB,EAAkB,KAAEC,EAAqB,KAehD,OAbAC,qBAAU,WACR,IAAIC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aAE/CC,aAAKC,KAA+B,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUO,UACnCC,MAAK,SAACC,GACLC,QAAQC,IAAO,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,YACjBd,EAAyB,OAAHW,QAAG,IAAHA,OAAG,EAAHA,EAAKG,eAE5BC,OAAM,SAACC,GACNJ,QAAQC,IAAIG,QAEf,IAGD,kBAAC,IAAI,KACH,6BACE,kBAAC,IAAG,KACF,kBAAC,IAAG,MAWJ,kBAAC,IAAG,CAAClC,UAAU,MAAMmC,GAAG,KACtB,kBAAC,IAAK,CACJC,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLpC,MAAO,CAAEqC,OAAQ,WACjBtC,UAAU,mBACVuC,MAAM,UACNlC,QAAS,kBAAMgC,EAAQG,WACtB,IAAI,aAQf,kBAAC,IAAG,KACF,kBAAC,IAAG,KACF,yBAAKxC,UAAU,iCACb,4BAAI,kCAITiB,GAAsBA,EACH,OAAlBA,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBP,KAAI,SAAC+B,EAAKC,GAAC,OAAK,kBAAC5B,EAAI,CAACF,IAAK8B,EAAG3B,KAAM0B,OAExD,oCACE,yBAAKxC,MAAO,CAAEsC,MAAO,QACnB,4BAAI","file":"static/js/275.811718aa.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Tree.css\";\r\nimport { Button, Card, Col, Row } from \"reactstrap\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Deptartment_with_Role } from \"../../../../ApiEndPoint/Api\";\r\nimport { _Get } from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nconst TreeNode = ({ node }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-1 mb-2 mainheader\">\r\n      <div className=\"d-flex\" style={{ marginLeft: `${node.depth * 20}px` }}>\r\n        <span style={{ fontSize: \"20px\" }} onClick={handleToggle}>\r\n          {node.roles && (isExpanded ? \"[-]\" : \"[+]\")}\r\n        </span>\r\n        <h5 style={{ fontSize: \"20px\" }} className=\"mx-2\">\r\n          {(node?.departmentName?.departmentName &&\r\n            node?.departmentName?.departmentName) ||\r\n            (node?.roleName && (\r\n              <>\r\n                {node?.roleName}(Position-{node?.rolePosition})\r\n              </>\r\n            ))}\r\n        </h5>\r\n      </div>\r\n      {isExpanded &&\r\n        node.roles &&\r\n        node.roles.map((child) => <TreeNode key={child.id} node={child} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tree = ({ data }) => {\r\n  return <TreeNode node={data} />;\r\n};\r\n\r\nconst treeData = {\r\n  id: 1,\r\n  name: \"Root\",\r\n  depth: 0,\r\n  children: [\r\n    {\r\n      id: 2,\r\n      name: \"Node 1\",\r\n      depth: 1,\r\n      children: [\r\n        {\r\n          id: 3,\r\n          name: \"Node 1.1\",\r\n          depth: 2,\r\n          children: [\r\n            {\r\n              id: 4,\r\n              name: \"Node 1.1.1\",\r\n              depth: 3,\r\n              children: null,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Node 2\",\r\n      depth: 1,\r\n      children: [\r\n        {\r\n          id: 3,\r\n          name: \"Node 1.1\",\r\n          depth: 2,\r\n          children: [\r\n            {\r\n              id: 4,\r\n              name: \"Node 1.1.1\",\r\n              depth: 3,\r\n              children: null,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Node 3\",\r\n      depth: 1,\r\n      children: [\r\n        {\r\n          id: 3,\r\n          name: \"Node 1.1\",\r\n          depth: 2,\r\n          children: [\r\n            {\r\n              id: 4,\r\n              name: \"Node 1.1.1\",\r\n              depth: 3,\r\n              children: [\r\n                {\r\n                  id: 8,\r\n                  name: \"Node 1.1\",\r\n                  depth: 2,\r\n                  children: [\r\n                    {\r\n                      id: 4,\r\n                      name: \"Node 1.1.1\",\r\n                      depth: 3,\r\n                      children: null,\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\nconst Trees = [treeData, treeData];\r\n\r\nfunction CreateHeriarchy() {\r\n  const [DepartmentWithRole, setDepartmentWithRole] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    _Get(Deptartment_with_Role, userData?.database)\r\n      .then((res) => {\r\n        console.log(res?.Department);\r\n        setDepartmentWithRole(res?.Department);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Card>\r\n      <div>\r\n        <Row>\r\n          <Col></Col>\r\n          {/* <Col className=\"m-2\" lg=\"3\" sm=\"6\" md=\"3\">\r\n            <Button\r\n              style={{ cursor: \"pointer\" }}\r\n              className=\"float-right mr-1\"\r\n              color=\"primary\"\r\n             \r\n            >\r\n              Connect with SuperAdmin\r\n            </Button>\r\n          </Col> */}\r\n          <Col className=\"m-2\" lg=\"2\">\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"float-right mr-1\"\r\n                  color=\"primary\"\r\n                  onClick={() => history.goBack()}>\r\n                  {\" \"}\r\n                  Back\r\n                  {/* <FaPlus size={15} /> Create User */}\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <h1>Your Organization Structure</h1>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {DepartmentWithRole && DepartmentWithRole ? (\r\n          DepartmentWithRole?.map((ele, i) => <Tree key={i} data={ele} />)\r\n        ) : (\r\n          <>\r\n            <div style={{ color: \"red\" }}>\r\n              <h3>No Organization Structure found</h3>\r\n            </div>\r\n          </>\r\n        )}\r\n        {/* {Trees && Trees?.map((ele, i) => <Tree key={i} data={ele} />)} */}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CreateHeriarchy;\r\n"],"sourceRoot":""}