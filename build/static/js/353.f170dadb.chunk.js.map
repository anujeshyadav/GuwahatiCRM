{"version":3,"sources":["views/apps/freshlist/order/EditOrder.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["GrandTotal","EditOrder","args","useState","setIndex","error","grandTotalAmt","setGrandTotalAmt","setEditdata","setUserInfo","userName","setUserName","location","useParams","useLocation","product","productId","availableQty","qty","price","grandTotal","setProduct","handleProductChangeProduct","e","index","target","name","value","orderitem","orderItems","list","amt","length","x","map","val","Size","reduce","a","b","useEffect","state","console","log","fullName","userInfo","JSON","parse","localStorage","getItem","className","render","history","style","cursor","color","size","onClick","goBack","onSubmit","preventDefault","editedproduct","ele","_id","Number","payload","swal","SalesEditOrder","then","res","catch","err","lg","md","sm","required","type","placeholder","onChange","key","readOnly","Product_Title","unitType","HSN_Code","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/353.f170dadb.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  Create_Sales_personList,\r\n  SalesEditOrder,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet GrandTotal = [];\r\n\r\nconst EditOrder = (args) => {\r\n  const [Index, setIndex] = useState(-1);\r\n  const [targetStartDate, settargetStartDate] = useState(\"\");\r\n  const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [Editdata, setEditdata] = useState({});\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [userName, setUserName] = useState(\"\");\r\n  const Params = useParams();\r\n  const location = useLocation();\r\n\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\", //\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1, //\r\n      price: \"\", //\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    setUserName(e.target.value);\r\n  };\r\n\r\n  const handleProductChangeProduct = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    let orderitem = product?.orderItems;\r\n    const list = [...orderitem];\r\n    list[index][name] = value;\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        GrandTotal[index] = val.Size * val.qty * val.price;\r\n        list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n        return val.Size * val.qty * val.price;\r\n      });\r\n      amt = x?.reduce((a, b) => a + b);\r\n    }\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProduct(location?.state);\r\n    console.log(location?.state);\r\n    setUserName(location?.state.fullName);\r\n    setEditdata(location?.state);\r\n    setGrandTotalAmt(location?.state?.grandTotal);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setProduct(location?.state);\r\n    setEditdata(location?.state);\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(product, product?.orderItems);\r\n    let editedproduct = product?.orderItems?.map((ele) => {\r\n      return {\r\n        productId: ele?.productId?._id,\r\n        qty: Number(ele?.qty),\r\n      };\r\n    });\r\n    let payload = {\r\n      fullName: userName,\r\n      orderItems: editedproduct,\r\n      grandTotal: grandTotalAmt,\r\n    };\r\n    // console.log(payload);\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SalesEditOrder(payload, product?._id)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"Order Edited Successfully\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Order Not Edited\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Edit Order</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={() => history.goBack()}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                <Label>FullName</Label>\r\n                <Input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"FullName\"\r\n                  placeholder=\"FullName\"\r\n                  value={userName}\r\n                  onChange={(e) => setUserName(e.target.value)}\r\n                />\r\n              </Col>\r\n\r\n              {product &&\r\n                product?.orderItems?.map((product, index) => {\r\n                  return (\r\n                    <Row className=\"\" key={index}>\r\n                      <Col className=\"mb-1\">\r\n                        <div className=\"\">\r\n                          <Label>Product Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"ProductName\"\r\n                            name=\"Product_Title\"\r\n                            readOnly\r\n                            value={product?.productId?.Product_Title}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProduct(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label>Price</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            readOnly\r\n                            placeholder=\"Price\"\r\n                            name=\"Price\"\r\n                            value={product?.price}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label>Qty</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            placeholder=\"Size\"\r\n                            name=\"qty\"\r\n                            value={product?.qty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProduct(e, index)\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label>unitType</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder={product?.unitType}\r\n                            name=\"qty\"\r\n                            value={product?.unitType}\r\n                            // onChange={(e) =>\r\n                            //   handleProductChangeProduct(e, index)\r\n                            // }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label>GST Rate</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            placeholder=\"GST Rate\"\r\n                            name=\"GSTRate\"\r\n                            value={product?.productId[\"GST Rate\"]}\r\n                            // onChange={e => handleProductChangeProduct(e, index)}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label>HST Code</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            placeholder=\"HSTCode\"\r\n                            name=\"HSTCode\"\r\n                            value={product?.productId?.HSN_Code}\r\n                            // onChange={e => handleProductChangeProduct(e, index)}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                })}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total : <stron>{grandTotalAmt}</stron>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EditOrder;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}