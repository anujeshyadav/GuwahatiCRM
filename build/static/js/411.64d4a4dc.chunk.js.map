{"version":3,"sources":["views/apps/freshlist/customer/ProductManagement/PurchaseInvoice.js"],"names":["i","ToWords","localeCode","converterOptions","currency","ignoreDecimal","ShowMyBill","ignoreZeroCurrency","doNotAddOnly","currencyOptions","name","plural","symbol","fractionalUnit","AddedBill","PurchaseInvoice","state","AllbillMerged","rowData","Applied_Charges","paginationPageSize","currenPageSize","Billtoposition","shipto","logoposition","ButtonText","Mergebilllength","modal","sgst","discount","ViewBill","wordsNumber","cgst","otherCharges","deliveryCharges","PrintData","Viewpermisson","Editpermisson","Createpermisson","Deletepermisson","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","type","onClick","e","handleMultipleBillsAdd","data","target","checked","order_status","order_id","user_full_name","supplier_name","render","history","size","color","push","total","order_date","check","setState","pageparmission","JSON","parse","localStorage","getItem","user_id","Userinfo","id","role","index","findIndex","ele","splice","length","MergeBillNow","preventDefault","toggleModal","handleSubmit","formdata","FormData","append","stringify","axiosConfig","post","then","res","applied_charges","items","words","convert","Number","grandtotal","catch","err","console","log","swal","handleBillDownload","sub_total","prevState","toggleModalclose","changeHandler","value","submitHandler","mychoice","imagePosition","billTo","setItem","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","userchoice","this","newparmisson","find","pageName","permission","includes","delete","response","error","sm","tag","right","placeholder","onChange","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","isOpen","toggle","props","style","maxWidth","onSubmit","lg","required","disabled","md","React","Component"],"mappings":"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","file":"static/js/411.64d4a4dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\nimport axiosConfig from \"../../../../../axiosConfig\";\r\nimport { ToWords } from \"to-words\";\r\nimport { ContextLayout } from \"../../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Trash2, ChevronDown, Edit, CloudLightning } from \"react-feather\";\r\nimport { history } from \"../../../../../history\";\r\nimport \"../../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\n// import \"../../../../assets/scss/pages/users.scss\";\r\nimport InvoicGenerator from \"../../subcategory/InvoiceGeneratorone\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst toWords = new ToWords({\r\n  localeCode: \"en-IN\",\r\n  converterOptions: {\r\n    currency: true,\r\n    ignoreDecimal: false,\r\n    ShowMyBill: false,\r\n    ignoreZeroCurrency: false,\r\n\r\n    doNotAddOnly: false,\r\n    currencyOptions: {\r\n      // can be used to override defaults for the selected locale\r\n      name: \"Rupee\",\r\n      plural: \"Rupees\",\r\n      symbol: \"₹\",\r\n      fractionalUnit: {\r\n        name: \"Paisa\",\r\n        plural: \"Paise\",\r\n        symbol: \"\",\r\n      },\r\n    },\r\n  },\r\n});\r\nconst AddedBill = [];\r\nconst AllProduct = [];\r\n\r\nclass PurchaseInvoice extends React.Component {\r\n  state = {\r\n    AllbillMerged: [],\r\n    rowData: [],\r\n    Applied_Charges: {},\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    Billtoposition: \"Left\",\r\n    shipto: \"right\",\r\n    logoposition: \"Left\",\r\n    ButtonText: \"Submit\",\r\n    Mergebilllength: \"\",\r\n    modal: false,\r\n    sgst: \"\",\r\n    discount: \"\",\r\n    ViewBill: true,\r\n    wordsNumber: \"\",\r\n    cgst: \"\",\r\n    otherCharges: \"\",\r\n    deliveryCharges: \"\",\r\n    PrintData: {},\r\n    Viewpermisson: null,\r\n    Editpermisson: null,\r\n    Createpermisson: null,\r\n    Deletepermisson: null,\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 80,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Add Bills\",\r\n        width: 160,\r\n        filter: true,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n              <div>\r\n                <span>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"customcheckbox\"\r\n                    onClick={(e) => {\r\n                      this.handleMultipleBillsAdd(\r\n                        params?.data,\r\n                        e.target.checked\r\n                      );\r\n                      // console.log(e.target.checked);\r\n                    }}\r\n                  />\r\n                  {/* <AiOutlineDownload\r\n                    onClick={() => this.handleBillDownload(params.data)}\r\n                    fill=\"green\"\r\n                    size=\"30px\"\r\n                  /> */}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"order_status\",\r\n        filter: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return params.data?.order_status === \"Completed\" ? (\r\n            <div className=\"badge badge-pill badge-success\">Completed</div>\r\n          ) : params.data?.order_status === \"Pending\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data?.order_status}\r\n            </div>\r\n          ) : params.data?.order_status === \"Inprogress\" ? (\r\n            <div className=\"badge badge-pill bg-primary\">Inprogress</div>\r\n          ) : params.data?.order_status === \"canceled\" ? (\r\n            <div className=\"badge badge-pill bg-danger\">\r\n              {params.data.order_status}\r\n            </div>\r\n          ) : params.data?.order_status === \"Completed\" ? (\r\n            <div className=\"badge badge-pill bg-success\">Completed</div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"order_id\",\r\n        field: \"order_id\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          // console.log(params.data?.order_id);\r\n\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                {/* <select\r\n                  // className=\"form-control\"\r\n                  defaultValue={params.data?.order_status}\r\n                  onChange={(e) => {\r\n                    // console.log(e.target.value);\r\n                    let data = new FormData();\r\n                    data.append(\"order_id\", params.data?.order_id);\r\n                    data.append(\"order_status\", e.target.value);\r\n                    axiosConfig\r\n                      .post(`/change_order_status`, data)\r\n                      .then((res) => {\r\n                        console.log(res?.data.message);\r\n                        if (res?.data.message) {\r\n                          this.componentDidMount();\r\n                          swal(\"status Updated Succesfully\");\r\n                        }\r\n                      })\r\n                      .catch((err) => {\r\n                        console.log(err);\r\n                      });\r\n                  }}\r\n                  name=\"changestatus\"\r\n                  id=\"changeStatus\"\r\n                >\r\n                  <option value={params.data?.order_status}>\r\n                    {params.data?.order_status}\r\n                  </option>\r\n                  <option value=\"Pending\">--UpdateStatus--</option>\r\n                  <option value=\"Pending\">Pending</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                  <option value=\"Rejected\">Rejected</option>\r\n                  <option value=\"Cancelled\">Cancelled</option>\r\n                </select> */}\r\n                <span>{params?.data?.order_id}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Invoice\",\r\n      //   field: \"invoice\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>\r\n      //             <AiOutlineDownload\r\n      //               onClick={() => this.handleBillDownload(params.data)}\r\n      //               fill=\"green\"\r\n      //               size=\"30px\"\r\n      //             />\r\n      //           </span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"username\",\r\n        field: \"user_full_name\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n              <div>\r\n                <span>\r\n                  {params?.data?.user_full_name}\r\n                  {/* <AiOutlineDownload\r\n                    onClick={() => this.handleBillDownload(params.data)}\r\n                    fill=\"green\"\r\n                    size=\"30px\"\r\n                  /> */}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"supplier_name\",\r\n        field: \"supplier_name\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 210,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data?.supplier_name}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Product Image\",\r\n      //   field: \"product_images\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 160,\r\n      //   cellRendererFramework: (params) => {\r\n      //     // console.log(params.data);\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           {params?.data?.product_images &&\r\n      //           params.data?.product_images?.length ? (\r\n      //             <>\r\n      //               <img\r\n      //                 style={{ borderRadius: \"12px\" }}\r\n      //                 src={params.data?.product_images[0]}\r\n      //                 alt=\"image\"\r\n      //                 width=\"60px\"\r\n      //               />\r\n      //             </>\r\n      //           ) : (\r\n      //             \"No image\"\r\n      //           )}\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {this.state.Viewpermisson && (\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Eye\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"green\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/app/freshlist/order/EditCompletedorders/${params.data?.order_id}`\r\n                        )\r\n                      }\r\n                    />\r\n                  )}\r\n                />\r\n              )}\r\n              {/* {this.state.Editpermisson && (\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Edit\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"blue\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/app/freshlist/order/editplaceorder/${params.data?.order_id}`\r\n                        )\r\n                      }\r\n                    />\r\n                  )}\r\n                />\r\n              )} */}\r\n\r\n              {/* {this.state.Deletepermisson && (\r\n                <Route\r\n                  render={() => (\r\n                    <Trash2\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"red\"\r\n                      onClick={() => {\r\n                        let selectedData = this.gridApi.getSelectedRows();\r\n                        this.runthisfunction(params.data.id);\r\n                        this.gridApi.updateRowData({ remove: selectedData });\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              )} */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"total\",\r\n        field: \"total\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <Badge color=\"success\">{params.data?.total}</Badge>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"brandname \",\r\n      //   field: \"brand_name\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.brand_name}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"city\",\r\n      //   field: \"city\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 160,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.city}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"order Creation date\",\r\n        field: \"order_date\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 230,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div>\r\n                <span>{params.data?.order_date}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"deliverydate\",\r\n      //   field: \"delivery_date\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 230,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.delivery_date}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"description\",\r\n      //   field: \"description\",\r\n      //   filter: \"true\",\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div className=\"\">\r\n      //           <span>{params.data?.description}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"discountprice\",\r\n      //   field: \"discountprice\",\r\n      //   filter: \"true\",\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div className=\"\">\r\n      //           <span>{params.data?.discountprice}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"email\",\r\n      //   field: \"email\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 190,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.email}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"full_name\",\r\n      //   field: \"full_name\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 170,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.full_name}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"mobile\",\r\n      //   field: \"mobile\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 190,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.mobile}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"price\",\r\n      //   field: \"price\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.price}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"producttype\",\r\n      //   field: \"product_type\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 190,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.product_type}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"shippingfee\",\r\n      //   field: \"shipping_fee\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 190,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.shipping_fee}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.status}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"stock\",\r\n      //   field: \"stock\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.stock}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"subtotal\",\r\n      //   field: \"subtotal\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.subtotal}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"tags\",\r\n      //   field: \"tags\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.tags}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"tax_rate\",\r\n      //   field: \"tax_rate\",\r\n      //   filter: true,\r\n      //   resizable: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <div>\r\n      //           <span>{params.data?.tax_rate}</span>\r\n      //         </div>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Permitions\",\r\n      //   field: \"permitions\",\r\n      //   filter: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <CustomInput\r\n      //         type=\"switch\"\r\n      //         className=\"mr-1\"\r\n      //         id=\"primary\"\r\n      //         name=\"primary\"\r\n      //         inline\r\n      //         onChange={this.handleSwitchChange}\r\n      //       ></CustomInput>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  handleMultipleBillsAdd = (data, check) => {\r\n    this.setState({ PrintData: data });\r\n\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (check) {\r\n      AddedBill.push({\r\n        order_id: data?.order_id,\r\n        user_id: pageparmission?.Userinfo?.id,\r\n        role: pageparmission?.Userinfo?.role,\r\n      });\r\n    } else {\r\n      let index = AddedBill.findIndex(\r\n        (ele) => ele?.order_id === data?.order_id\r\n      );\r\n      AddedBill.splice(index, 1);\r\n    }\r\n\r\n    this.setState({ Mergebilllength: AddedBill?.length });\r\n  };\r\n  MergeBillNow = (e) => {\r\n    e.preventDefault();\r\n     this.toggleModal();\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ ButtonText: \"InProcess\" });\r\n    // console.log(this.state.sgst);\r\n    // console.log(this.state.cgst);\r\n    // console.log(this.state.deliveryCharges);\r\n    if (this.state.sgst && this.state.cgst) {\r\n      let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n      let formdata = new FormData();\r\n\r\n      formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n      formdata.append(\"order_id\", JSON.stringify(AddedBill));\r\n      formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n      formdata.append(\"sgst\", this.state.sgst);\r\n      formdata.append(\"cgst\", this.state.cgst);\r\n      formdata.append(\"discount_value\", this.state.discount);\r\n      formdata.append(\"delivery_charges\", this.state.deliveryCharges);\r\n      formdata.append(\"other_charges\", this.state.otherCharges);\r\n\r\n      axiosConfig\r\n        .post(`/createmergebillapi`, formdata)\r\n        .then((res) => {\r\n          this.setState({ Applied_Charges: res.data?.data?.applied_charges });\r\n          this.setState({ AllbillMerged: res.data.data?.items });\r\n          this.setState({ ViewBill: true });\r\n\r\n          // this.setState({ PrintData: res.data });\r\n          const toWords = new ToWords();\r\n          let words = toWords.convert(\r\n            Number(res.data?.data?.applied_charges?.grandtotal),\r\n            {\r\n              currency: true,\r\n            }\r\n          );\r\n\r\n          this.setState({ wordsNumber: words });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          this.setState({ ButtonText: \"Submit\" });\r\n        });\r\n    } else {\r\n      this.setState({ ButtonText: \"Submit\" });\r\n\r\n      swal(\"Enter Values in field\");\r\n    }\r\n  };\r\n  handleBillDownload = (data) => {\r\n    this.setState({PrintData: data});\r\n    const toWords = new ToWords();\r\n    let words = toWords.convert(Number(data.sub_total), { currency: true });\r\n    this.setState({ wordsNumber: words });\r\n    this.toggleModal();\r\n  };\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n  toggleModalclose = () => {\r\n    // debugger;\r\n    this.setState({ modal: false });\r\n    this.setState({ ShowMyBill: false });\r\n    // window.location.reload();\r\n    // AddedBill = [];\r\n    // console.log(AddedBill);\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  async componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(pageparmission.role);\r\n    let userchoice = JSON.parse(localStorage.getItem(\"billUI\"));\r\n    if (userchoice) {\r\n      this.setState({ logoposition: userchoice?.imagePosition });\r\n      this.setState({ Billtoposition: userchoice?.billTo });\r\n      this.setState({ shipto: userchoice?.shipto });\r\n    }\r\n    let newparmisson = pageparmission?.role?.find(\r\n      (value) => value?.pageName === \"invoice Generator\"\r\n    );\r\n    // console.log(newparmisson);\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n    // console.log(newparmisson?.permission.includes(\"View\"));\r\n    // console.log(newparmisson?.permission.includes(\"Create\"));\r\n    // console.log(newparmisson?.permission.includes(\"Edit\"));\r\n    // console.log(newparmisson?.permission.includes(\"Delete\"));\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    await axiosConfig\r\n      .post(`/getallcompleteorders`, formdata)\r\n      .then((res) => {\r\n        // console.log(res.data.data);\r\n        let rowData = res.data.data;\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  async runthisfunction(id) {\r\n    // console.log(id);\r\n    await axiosConfig.delete(`/admin/del_subcategory/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let mychoice = {\r\n      imagePosition: this.state.logoposition,\r\n      billTo: this.state.Billtoposition,\r\n      shipto: this.state.shipto,\r\n    };\r\n\r\n    if (mychoice.billTo == mychoice.shipto) {\r\n      swal(\"Can not set Bill to and Ship to on one Same side\");\r\n    } else {\r\n      localStorage.setItem(\"billUI\", JSON.stringify(mychoice));\r\n      this.setState({ ShowMyBill: true });\r\n    }\r\n  };\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 sm=\"6\" className=\"float-left\">\r\n                Purchase Invoice\r\n                </h1>\r\n              </Col>\r\n\r\n          \r\n              <Col>\r\n                <Button\r\n                  className=\" btn float-right\"\r\n                  size=\"md\"\r\n                  // onClick={() =>\r\n                  // history.push(\"/app/freshlist/subcategory/SubCategoryList\")\r\n                  // }\r\n                  onClick={this.MergeBillNow}\r\n                  color=\"primary\"\r\n                >\r\n                  Create Invoice\r\n                </Button>\r\n              </Col>\r\n              {/* <Col>\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\"btn float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          \"/app/freshlist/subcategory/addSubCategory\"\r\n                        )\r\n                      }\r\n                    >\r\n                      Add New\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </Col> */}\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggleModal}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}\r\n        >\r\n          <ModalHeader toggle={this.toggleModalclose}>\r\n            Download Bill\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            {this.state.ShowMyBill && this.state.ShowMyBill ? (\r\n              <>\r\n                {this.state.ViewBill && this.state.ViewBill ? (\r\n                  <>\r\n                    <div style={{ width: \"100%\" }} className=\"\">\r\n                      <InvoicGenerator\r\n                        PrintData={this.state.PrintData}\r\n                        Applied_Charges={this.state.Applied_Charges}\r\n                        AllbillMerged={this.state.AllbillMerged}\r\n                        wordsNumber={this.state.wordsNumber}\r\n                        sgst={this.state.sgst}\r\n                        cgst={this.state.cgst}\r\n                        deliveryCharges={this.state.deliveryCharges}\r\n                        otherCharges={this.state.otherCharges}\r\n                        discount={this.state.discount}\r\n                        AddedBill={AddedBill}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div style={{ width: \"100%\" }} className=\"\">\r\n                      <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n                        <Row className=\"main div heading px-3 py-3\">\r\n                          <Col lg=\"6\" className=\"mb-2\">\r\n                            <Label>SGST</Label>\r\n                            <select\r\n                              required\r\n                              className=\"form-control\"\r\n                              value={this.state.sgst}\r\n                              onChange={this.changeHandler}\r\n                              name=\"sgst\"\r\n                            >\r\n                              <option value=\"not selected\">--Select--</option>\r\n                              <option value=\"5\">5%</option>\r\n                              <option value=\"9\">9%</option>\r\n                              <option value=\"12\">12%</option>\r\n                            </select>\r\n                          </Col>\r\n                          <Col lg=\"6\" className=\"mb-2\">\r\n                            <Label>CGST</Label>\r\n                            <select\r\n                              required\r\n                              className=\"form-control\"\r\n                              name=\"cgst\"\r\n                              placeholder=\"Enter CGST\"\r\n                              value={this.state.cgst}\r\n                              onChange={this.changeHandler}\r\n                            >\r\n                              <option value=\"not selected\">--Select--</option>\r\n                              <option value=\"5\">5%</option>\r\n                              <option value=\"9\">9%</option>\r\n                              <option value=\"12\">12%</option>\r\n                            </select>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <Label className=\"mt-2\">Other Charges</Label>\r\n                            <Input\r\n                              type=\"number\"\r\n                              name=\"otherCharges\"\r\n                              placeholder=\"Enter Other Charges\"\r\n                              value={this.state.otherCharges}\r\n                              onChange={this.changeHandler}\r\n                            ></Input>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <Label className=\"mt-2\">Delivery Charges</Label>\r\n                            <Input\r\n                              type=\"number\"\r\n                              name=\"deliveryCharges\"\r\n                              placeholder=\"Enter Delivery Charges\"\r\n                              value={this.state.deliveryCharges}\r\n                              onChange={this.changeHandler}\r\n                            ></Input>\r\n                          </Col>\r\n                          <Col lg=\"6\">\r\n                            <Label className=\"mt-2\">Discount </Label>\r\n                            <Input\r\n                              type=\"number\"\r\n                              name=\"discount\"\r\n                              placeholder=\"Enter discount value\"\r\n                              value={this.state.discount}\r\n                              onChange={this.changeHandler}\r\n                            ></Input>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col lg=\"12\" className=\"mt-2 mb-2\">\r\n                            <div className=\"d-flex justify-content-center\">\r\n                              <Button\r\n                                disabled={\r\n                                  this.state.ButtonText === \"InProcess\"\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                              >\r\n                                {this.state.ButtonText}\r\n                              </Button>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                  <Row className=\"mb-2\">\r\n                    <Col lg=\"4\" md=\"4\" className=\"mb-2\">\r\n                      <Label>Logo Position</Label>\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"Select Type\"\r\n                        name=\"logoposition\"\r\n                        value={this.state.logoposition}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option>---Select---</option>\r\n                        <option value=\"Left\">Left</option>\r\n                        <option value=\"right\">Right</option>\r\n                      </CustomInput>\r\n                    </Col>\r\n                    <Col lg=\"4\" md=\"4\" className=\"mb-2\">\r\n                      <Label>ship to position</Label>\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"Select Type\"\r\n                        name=\"shipto\"\r\n                        value={this.state.shipto}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option>---Select---</option>\r\n                        <option value=\"Left\">Left</option>\r\n                        <option value=\"right\">Right</option>\r\n                      </CustomInput>\r\n                      <span>\r\n                        {this.state.shipto == this.state.Billtoposition ? (\r\n                          <span style={{ color: \"red\" }}>\r\n                            Bill to and ship to cannot be same\r\n                          </span>\r\n                        ) : null}\r\n                      </span>\r\n                    </Col>\r\n\r\n                    <Col lg=\"4\" md=\"4\" className=\"mb-2\">\r\n                      <Label>Bill to position</Label>\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"Select Type\"\r\n                        name=\"Billtoposition\"\r\n                        value={this.state.Billtoposition}\r\n                        onChange={this.changeHandler}\r\n                      >\r\n                        <option>---Select---</option>\r\n                        <option value=\"Left\">Left</option>\r\n                        <option value=\"right\">Right</option>\r\n                      </CustomInput>\r\n                      <span>\r\n                        {this.state.shipto == this.state.Billtoposition ? (\r\n                          <span style={{ color: \"red\" }}>\r\n                            Bill to and ship to cannot be same\r\n                          </span>\r\n                        ) : null}\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-center\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"mr-1 mb-1\"\r\n                        >\r\n                          Submit\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n        </Modal>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default PurchaseInvoice;\r\n"],"sourceRoot":""}