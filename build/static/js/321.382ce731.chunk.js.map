{"version":3,"sources":["../node_modules/reactstrap/es/Container.js","views/apps/freshlist/customer/HRM/RecPLace/trainingForm.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["_excluded","propTypes","tag","tagPropType","fluid","PropTypes","oneOfType","bool","string","className","cssModule","object","Container","props","Tag","attributes","_objectWithoutPropertiesLoose","containerClass","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","TrainingForm","useState","branch","setBranch","trainer","setTrainer","trainingType","setTrainingType","trainingCost","setTrainingCost","employee","setEmployee","startDate","setStartDate","endDate","setEndDate","description","setDescription","md","onSubmit","e","preventDefault","console","log","for","type","name","id","value","onChange","target","form","color","children","node","row","check","inline","disabled","FormGroup"],"mappings":"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","file":"static/js/321.382ce731.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\n\r\nconst TrainingForm = () => {\r\n    const [branch, setBranch] = useState('');\r\n    const [trainer, setTrainer] = useState('');\r\n    const [trainingType, setTrainingType] = useState('');\r\n    const [trainingCost, setTrainingCost] = useState('');\r\n    const [employee, setEmployee] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Handle form submission here\r\n        console.log(\"Form submitted!\");\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Create Training</h2>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"branch\">Branch</Label>\r\n                            <Input type=\"select\" name=\"branch\" id=\"branch\" value={branch} onChange={(e) => setBranch(e.target.value)}>\r\n                                <option>Select Branch</option>\r\n                                <option>Branch 1</option>\r\n                                <option>Branch 2</option>\r\n                                <option>Branch 3</option>\r\n                                {/* Add more branches */}\r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <Row form>\r\n                            <Col md={6}>\r\n                                <FormGroup>\r\n                                    <Label for=\"trainer\">Trainer</Label>\r\n                                    <Input type=\"select\" name=\"trainer\" id=\"trainer\" value={trainer} onChange={(e) => setTrainer(e.target.value)}>\r\n                                        <option>Select Trainer</option>\r\n                                        <option>Internal</option>\r\n                                        <option>Teresa</option>\r\n                                        {/* Add more trainers */}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <FormGroup>\r\n                                    <Label for=\"trainingType\">Training Type</Label>\r\n                                    <Input type=\"text\" name=\"trainingType\" id=\"trainingType\" value={trainingType} onChange={(e) => setTrainingType(e.target.value)} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <FormGroup>\r\n                            <Label for=\"trainingCost\">Training Cost</Label>\r\n                            <Input type=\"text\" name=\"trainingCost\" id=\"trainingCost\" value={trainingCost} onChange={(e) => setTrainingCost(e.target.value)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"employee\">Employee</Label>\r\n                            <Input type=\"select\" name=\"employee\" id=\"employee\" value={employee} onChange={(e) => setEmployee(e.target.value)}>\r\n                                <option>Select Employee</option>\r\n                                <option>Employee 1</option>\r\n                                <option>Employee 2</option>\r\n                                <option>Employee 3</option>\r\n                                {/* Add more employees */}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <Row form>\r\n                            <Col md={6}>\r\n                                <FormGroup>\r\n                                    <Label for=\"startDate\">Start Date</Label>\r\n                                    <Input type=\"date\" name=\"startDate\" id=\"startDate\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <FormGroup>\r\n                                    <Label for=\"endDate\">End Date</Label>\r\n                                    <Input type=\"date\" name=\"endDate\" id=\"endDate\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Description</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TrainingForm;\r\n\r\n\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}