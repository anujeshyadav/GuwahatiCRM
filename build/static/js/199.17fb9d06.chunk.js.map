{"version":3,"sources":["xmlfiles/CreateSalesManager.js","views/apps/freshlist/accounts/CreateDispach.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CreateDispach","useState","CreatAccountView","setCreatAccountView","Countries","setCountry","States","setState","Cities","setCities","formData","setFormData","setdropdownValue","index","setindex","error","setError","Context","useContext","UserContext","handleInputChange","e","type","i","target","name","value","checked","test","files","length","useEffect","console","log","CreateSalesManagerXMlView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","Createsalesmanager","input","CreateCustomer","MyDropDown","dropdown","catch","err","swal","className","render","history","style","cursor","color","onClick","goBack","onSubmit","preventDefault","Create_Salesmanagersave","status","response","map","ele","moment","tz","format","phoneinput","key","lg","md","sm","label","_text","inputClass","country","onKeyDown","_attributes","includes","countryCodeEditable","onChange","phone","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","placeholder","dateFormat","UserInformatio","timeZone","number","onWheel","multiple","allimages","Array","from","handleFileChange","marginRight","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/199.17fb9d06.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SalesManagerxml = () => {\r\n  return `<Createsalesmanager>\r\n \r\n     <input>\r\n         <label>First Name</label>\r\n         <type type=\"text\"></type>\r\n         <name>firstName</name>\r\n         <placeholder>Enter First Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Last Name</label>\r\n         <type type=\"text\"></type>\r\n         <name>lastName</name>\r\n         <placeholder>Enter First Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>DOB</label>\r\n         <type type=\"date\"></type>\r\n         <name>DOB</name>\r\n         <placeholder>Enter DOB</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Mobile No.</label>\r\n         <type type=\"text\"></type>\r\n         <number>yes</number>\r\n         <phoneinput>yes</phoneinput>\r\n         <name>mobileNumber</name>\r\n         <placeholder>Enter Mobile Number</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Email id</label>\r\n         <type type=\"email\"></type>\r\n         <name>email</name>\r\n         <placeholder>Enter Email id</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Father Name</label>\r\n         <type type=\"text\"></type>\r\n         <name>Father_name</name>\r\n         <placeholder>Enter Father Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Father Mobile Number</label>\r\n         <type type=\"text\"></type>\r\n         <phoneinput>yes</phoneinput>\r\n         <name>Father_MobileNo</name>\r\n         <number>yes</number>\r\n         <placeholder>Enter Father Mobile Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Mother Mobile Number</label>\r\n         <type type=\"text\"></type>\r\n         <phoneinput>yes</phoneinput>\r\n         <name>MotherMobileNo</name>\r\n         <number>yes</number>\r\n         <placeholder>Enter Mother Mobile Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Thana</label>\r\n         <type type=\"text\"></type>\r\n         <name>Thananame</name>\r\n         <placeholder>Enter Thane Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Passport Number</label>\r\n         <type type=\"text\"></type>\r\n         <name>PassportNo</name>\r\n         <placeholder>Enter Passport Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Driving License Number</label>\r\n         <type type=\"text\"></type>\r\n         <name>DL_Num</name>\r\n         <placeholder>Enter Driving License Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>Addhar Number</label>\r\n         <type type=\"text\"></type>\r\n         <name>Aadhar_No</name>\r\n         <number>yes</number>\r\n         <placeholder>Enter Addhar Number</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>PAN Number</label>\r\n         <type type=\"text\"></type>\r\n         <name>Pan_No</name>\r\n         <placeholder>Enter Addhar Number</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>A/c Name</label>\r\n         <type type=\"text\"></type>\r\n         <name>Account_Name</name>\r\n         <placeholder>Enter Account Name</placeholder>\r\n     </input>\r\n \r\n     <input>\r\n         <label>A/c Number</label>\r\n         <type type=\"text\"></type>\r\n         <name>Account_No.</name>\r\n         <number>yes</number>\r\n         <placeholder>Enter Account No.</placeholder>\r\n     </input>\r\n <input>\r\n     <label>Country</label>\r\n     <name>Country</name>\r\n     <type type=\"text\"/>\r\n     <library>yes</library>\r\n </input>\r\n \r\n <input>\r\n     <label>State</label>\r\n     <library>yes</library>\r\n     <type type=\"text\"/>\r\n     <name>State</name>\r\n </input>\r\n \r\n <input>\r\n     <label>City</label>\r\n     <name>City</name>\r\n     <library>yes</library>\r\n     <type type=\"text\"/>\r\n </input>\r\n \r\n <input>\r\n     <label>IFSC Code</label>\r\n     <type type=\"text\"></type>\r\n     <name>Ifsc_code</name>\r\n     <placeholder>Enter IFSC Code</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Name 1st</label>\r\n     <type type=\"text\"></type>\r\n     <name>Ref_name_one</name>\r\n     <placeholder>Enter Reference Name of 1st</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Relation</label>\r\n     <type type=\"text\"></type>\r\n     <name>refer_Relation_one</name>\r\n     <placeholder>Enter Reference Relationship</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Mobile Number</label>\r\n     <type type=\"text\"></type>\r\n     <name>Ref_Mob_No_one</name>\r\n     <phoneinput>yes</phoneinput>\r\n     <number>yes</number>\r\n     <placeholder>Enter Reference Mobile No.</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Name 2nd</label>\r\n     <type type=\"text\"></type>\r\n     <name>Ref_name_sec</name>\r\n     <placeholder>Enter Reference Name of 2nd</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Relation</label>\r\n     <type type=\"text\"></type>\r\n     <name>refer_Relation_two</name>\r\n     <placeholder>Enter Reference Relationship</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Mobile Number</label>\r\n     <type type=\"text\"></type>\r\n     <phoneinput>yes</phoneinput>\r\n     <name>Ref_Mob_No_two</name>\r\n     <number>yes</number>\r\n     <placeholder>Enter Reference Mobile No.</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Name 3rd</label>\r\n     <type type=\"text\"></type>\r\n     <name>Ref_name_third</name>\r\n     <placeholder>Enter Reference Name of 3rd</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Relation</label>\r\n     <type type=\"text\"></type>\r\n     <name>refer_Relation_third</name>\r\n     <placeholder>Enter Reference Relationship</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Reference Mobile Number</label>\r\n     <type type=\"text\"></type>\r\n     <phoneinput>yes</phoneinput>\r\n     <number>yes</number>\r\n     <name>Ref_Mob_No_third</name>\r\n     <placeholder>Enter Reference Mobile No.</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>last Job firm Name</label>\r\n     <type type=\"text\"></type>\r\n     <name>last_job_firm_name</name>\r\n     <placeholder>Enter Last Job Firm Name</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Address</label>\r\n     <type type=\"text\"></type>\r\n     <name>last_job_address</name>\r\n     <placeholder>Enter Last Job Address</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Phone Number</label>\r\n     <type type=\"text\"></type>\r\n     <phoneinput>yes</phoneinput>\r\n     <name>last_job_PhNo.</name>\r\n     <number>yes</number>\r\n     <placeholder>Enter Last Job Phone Number</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Job Profile</label>\r\n     <type type=\"text\"></type>\r\n     <name>last_job_Profile</name>\r\n     <placeholder>Enter Last Job Profile</placeholder>\r\n </input>\r\n \r\n <input>\r\n     <label>Appointment Date</label>\r\n     <type type=\"date\"></type>\r\n     <name>last_job_AppoitmentDate</name>\r\n     <placeholder>Enter Last Job Appointment Date</placeholder>\r\n </input>\r\n \r\n \r\n <input>\r\n     <label>Designation</label>\r\n     <type type=\"text\"></type>\r\n     <name>last_job_Designation</name>\r\n     <placeholder>Enter Last Job Designation</placeholder>\r\n </input>\r\n \r\n \r\n <input>\r\n     <label>salary</label>\r\n     <type type=\"text\"></type>\r\n     <number>yes</number>\r\n     <name>last_job_Salary</name>\r\n     <placeholder>Enter Last Job salary</placeholder>\r\n </input>\r\n \r\n \r\n </Createsalesmanager>\r\n \r\n `;\r\n};\r\nexport default SalesManagerxml;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\nimport createSalesManager from \"../../../../xmlfiles/CreateSalesManager\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountView,\r\n  CreateCustomersave,\r\n  CreateCustomerxmlView,\r\n  CreateMySalesManager,\r\n  CreateSalesManagerXMlView,\r\n  Create_Salesmanagersave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nconst CreateDispach = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [States, setState] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleFileChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    let allimages = Array.from(e.target.files);\r\n    setindex(i);\r\n    setFormData({\r\n      ...formData,\r\n      [name]: allimages,\r\n    });\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        }\r\n        //  else {\r\n        //   setError(\r\n        //     \"Please enter a valid number with a maximum length of 10 digits\"\r\n        //   );\r\n        // }\r\n      } else if (type == \"file\") {\r\n        // debugger;\r\n        if (e.target.files) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n          });\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    CreateSalesManagerXMlView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData)?.Createsalesmanager);\r\n        setCreatAccountView(JSON.parse(jsonData)?.Createsalesmanager?.input);\r\n\r\n        setdropdownValue(\r\n          JSON.parse(jsonData)?.CreateCustomer?.MyDropDown?.dropdown\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(CreatAccountView);\r\n    // console.log(dropdownValue);\r\n    // let formdata = new FormData();\r\n    // CreatAccountView?.map((ele, i) => {\r\n    //   if (ele?.type?._attributes?.type == \"text\") {\r\n    //     formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n    //   } else if (ele?.type?._attributes?.type == \"file\") {\r\n    //     if (ele?.name?._text == \"Shopphoto\") {\r\n    //       formData[ele?.name?._text]?.map((val, index) => {\r\n    //         formdata.append(\"file\", formData[ele?.name?._text][index]);\r\n    //       });\r\n    //     }\r\n    //     if (ele?.name?._text == \"photo\") {\r\n    //       formData[ele?.name?._text]?.map((val, index) => {\r\n    //         formdata.append(\"files\", formData[ele?.name?._text][index]);\r\n    //       });\r\n    //     }\r\n    //   }\r\n    // });\r\n    // formdata.append(\r\n    //   `${dropdownValue?.name?._text}`,\r\n    //   formData[dropdownValue?.name?._text]\r\n    // );\r\n    // formdata.forEach((value, key) => {\r\n    //   console.log(key, value);\r\n    // });\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      Create_Salesmanagersave(formData)\r\n        .then((res) => {\r\n          console.log(res);\r\n          // setFormData({});\r\n          if (res.status) {\r\n            // window.location.reload();\r\n            swal(\"SalesManager Created Successfully\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Create Dispatch</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        () => history.goBack()\r\n                        // history.push(\"/app/SoftNumen/CreateSalesManager\")\r\n                      }\r\n                    >\r\n                      {\" \"}\r\n                      Back\r\n                      {/* <FaPlus size={15} /> Create User */}\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* <hr /> */}\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {/* {dropdownValue && (\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label className=\"mb-1\">\r\n                        {dropdownValue && dropdownValue?.label?._text}\r\n                      </Label>\r\n                      <CustomInput\r\n                        required\r\n                        type=\"select\"\r\n                        name={dropdownValue && dropdownValue?.name?._text}\r\n                        value={formData[dropdownValue?.name?._text]}\r\n                        onChange={handleInputChange}\r\n                      >\r\n                        <option value=\"\">--Select --</option>\r\n                        {dropdownValue?.option?.map((option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        ))}\r\n                      </CustomInput>\r\n                    </FormGroup>\r\n                  </Col>\r\n                )} */}\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.map((ele, i) => {\r\n                    {\r\n                      /* console.log(Context?.UserInformatio?.dateFormat); */\r\n                    }\r\n                    // console.log(Countries);\r\n                    // console.log(States);\r\n                    const convertedTime = moment(\"2022-08-05T12:00:00\")\r\n                      .tz(\"America/New_York\")\r\n                      .format(\"D MMM, YYYY HH:mm\");\r\n\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"in\"}\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [ele?.name?._text]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        console.log(ele);\r\n                        return (\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Countries}\r\n                                onChange={(country) => {\r\n                                  setCountry(country);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Country\"]: country?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  Countries?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={States}\r\n                                onChange={(State) => {\r\n                                  setState(State);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  States?.countryCode,\r\n                                  States?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Cities}\r\n                                onChange={(City) => {\r\n                                  setCities(City);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            {ele?.type?._attributes?.type == \"date\" ? (\r\n                              <>\r\n                                <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      dateFormat={\r\n                                        Context?.UserInformatio?.dateFormat\r\n                                      }\r\n                                      value={\r\n                                        moment(formData[ele?.name?._text])\r\n                                          .tz(Context?.UserInformatio?.timeZone)\r\n                                          .format(\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          )\r\n                                        // formData[ele?.name?._text]\r\n                                      }\r\n                                      // value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {!!ele?.number ? (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup key={i}>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text}\r\n                                  </Label>\r\n\r\n                                  <Input\r\n                                    onWheel={(e) => {\r\n                                      e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                    }}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <FormGroup key={i}>\r\n                                {ele?.type?._attributes?.type &&\r\n                                ele?.type?._attributes?.type == \"file\" ? (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      multiple\r\n                                      className=\"form-control\"\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      //   value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleFileChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n\r\n                                {/* <Label className=\"mb-1\">\r\n                                  {ele?.label?._text}\r\n                                </Label>\r\n\r\n                                <Input\r\n                                  className=\"form-control\"\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) => {\r\n                                    // const value = e.target.value;\r\n                                    // // Use regular expression to allow only numbers\r\n                                    // const numericValue = value.replace(\r\n                                    //   /\\D/g,\r\n                                    //   \"\"\r\n                                    // );\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )} */}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n\r\n              <hr />\r\n              {/* <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                <Label className=\"mb-0\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => {\r\n                    setFormData({\r\n                      ...formData,\r\n                      [\"status\"]: e.target.value,\r\n                    });\r\n                  }}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Deactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                </div>\r\n              </Col>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateDispach;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}