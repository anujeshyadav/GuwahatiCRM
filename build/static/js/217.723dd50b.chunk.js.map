{"version":3,"sources":["views/SuperAdminUi/SuperAdminUI.js","../node_modules/reactstrap/es/Spinner.js","views/apps/freshlist/accounts/DepartmentRoleAssign.js","views/apps/freshlist/accounts/RoleList.js","views/apps/freshlist/house/CheckPermission.js"],"names":["SuperAdminUI","onDropdownChange","onSubmit","useState","SuperAdminList","setSuperAdminList","selectedSuperAdmin","setSelectedSuperAdmin","setSelectedSuperAdminName","useEffect","List","JSON","parse","localStorage","getItem","length","_GetList","Super_Admin_List","then","res","console","log","SuperAdmin","setItem","stringify","catch","err","lg","sm","md","value","onChange","e","selectedName","target","options","selectedIndex","getAttribute","split","selectedValue","type","map","ele","i","data-name","_id","database","firstName","lastName","onClick","preventDefault","color","_excluded","propTypes","tag","tagPropType","PropTypes","string","size","className","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","DepartmentRoleAssign","selectedDepartment","setSelectedDepartment","selectedRoles","setSelectedRoles","DepartMentList","setDepartMentList","RoleList","setRoleList","Loader","setLoader","userData","URL","List_Department","Department","RoleLists","Get_RoleList","WithoutAssign","Role","filter","assign","rank","roleName","Position","rolename","position","handleAssignRoles","userinfo","MainData","roleId","rolePosition","createdPosition","payload","created_by","departmentName","roles","_PostSave","Save_Assigned_Role","swal","style","display","justifyContent","marginTop","height","width","render","history","cursor","goBack","id","event","department","key","required","marginRight","includes","splice","indexOf","push","handleRoleChange","fontSize","right","data","AllSelected","Number","handleAddRanking","placeholder","disabled","handleSubmit","setState","Loading","alldata","state","DepartmentPresent","formValues","DepartmentName","departmentDesc","Description","departmentId","Id","Departments","Create_Department","handleShowDepartment","AllDeparts","values","toggleModal","prevState","modal","onGridReady","params","gridApi","api","gridColumnApi","columnApi","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","handleParentSubmit","MasterRoleList","db","Apicalling","handleDropdownChange","rowData","isOpen","InsiderPermissions","paginationPageSize","MasterShow","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","cellRendererFramework","desc","Edit","border","padding","borderRadius","backgroundColor","marginLeft","pathname","bind","this","name","_Get","Role_list_by_Master","pageparmission","InsidePermissions","CheckPermission","selectedData","getSelectedRows","buttons","cancel","text","formData","FormData","append","updateRowData","remove","axiosConfig","post","response","xs","fontWeight","Create","View","ms","Download","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","toggle","maxWidth","element","index","handleChange","rows","removeFormFields","addFormFields","Component","contextType","UserContext","newparmisson","rolePermission","find","pagename","permission","Delete"],"mappings":"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","file":"static/js/217.723dd50b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, CustomInput, Row } from \"reactstrap\";\r\nimport { Super_Admin_List } from \"../../ApiEndPoint/Api\";\r\nimport { _Get, _GetList } from \"../../ApiEndPoint/ApiCalling\";\r\n\r\nconst SuperAdminUI = ({ onDropdownChange, onSubmit }) => {\r\n  const [SuperAdminList, setSuperAdminList] = useState([]);\r\n  const [selectedSuperAdmin, setSelectedSuperAdmin] = useState(\"\");\r\n  const [selectedSuperAdminName, setSelectedSuperAdminName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Super_Admin_List;\r\n    let List = JSON.parse(localStorage.getItem(\"AllSuper\"));\r\n    if (List?.length) {\r\n      setSuperAdminList(List);\r\n    } else {\r\n      _GetList(Super_Admin_List)\r\n        .then((res) => {\r\n          console.log(res?.SuperAdmin);\r\n          localStorage.setItem(\"AllSuper\", JSON.stringify(res?.SuperAdmin));\r\n          setSuperAdminList(res?.SuperAdmin);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Call the onSubmit function passed from the parent component\r\n    onSubmit(e);\r\n  };\r\n  const handleDropdownChange = (e) => {\r\n    const selectedName = e.target.options[e.target.selectedIndex]\r\n      .getAttribute(\"data-name\")\r\n      ?.split(\" \")[0];\r\n    const selectedValue =\r\n      e.target.options[e.target.selectedIndex].getAttribute(\"data-name\");\r\n    setSelectedSuperAdmin(selectedName);\r\n    setSelectedSuperAdminName(selectedName);\r\n    onDropdownChange(selectedValue);\r\n  };\r\n  console.log(selectedSuperAdmin);\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col lg=\"6\" sm=\"6\" md=\"6\">\r\n          <CustomInput\r\n            value={selectedSuperAdmin}\r\n            onChange={handleDropdownChange}\r\n            type=\"select\">\r\n            <option>--select SuperAdmin--</option>\r\n            {SuperAdminList &&\r\n              SuperAdminList?.map((ele, i) => (\r\n                <option\r\n                  data-name={`${ele?._id} ${ele?.database}`}\r\n                  value={ele?._id}>\r\n                  {ele?.firstName} {ele?.lastName}\r\n                </option>\r\n              ))}\r\n          </CustomInput>\r\n        </Col>\r\n        <Col>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperAdminUI;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Input, Label, Row, Spinner } from \"reactstrap\";\r\nimport {\r\n  Get_RoleList,\r\n  _Get,\r\n  _GetList,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  List_Department,\r\n  Save_Assigned_Role,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst DepartmentRoleAssign = () => {\r\n  const [selectedDepartment, setSelectedDepartment] = useState(\"\");\r\n  const [selectedRoles, setSelectedRoles] = useState([]);\r\n  const [DepartMentList, setDepartMentList] = useState([]);\r\n  const [RoleList, setRoleList] = useState([]);\r\n  const [Loader, setLoader] = useState(false);\r\n\r\n  //   const roleList = [\"Manager\", \"Developer\", \"Accountant\"]; // Replace with your actual role list\r\n\r\n  const handleDepartmentChange = (event) => {\r\n    const department = event.target.value;\r\n    setSelectedDepartment(department);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let URL = `${List_Department}/${userData?.database}`;\r\n    _GetList(URL)\r\n      .then((res) => {\r\n        console.log(res?.Department);\r\n        debugger;\r\n        setDepartMentList(res?.Department);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    RoleLists();\r\n  }, []);\r\n\r\n  const RoleLists = () => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    Get_RoleList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        let WithoutAssign = res?.Role?.filter(\r\n          (ele) =>\r\n            ele?.assign == 0 &&\r\n            ele?.rank == 0 &&\r\n            ele?.roleName != \"SuperAdmin\" &&\r\n            ele?.roleName != \"Admin\"\r\n        );\r\n        let Position = userData?.rolename?.position;\r\n        let ShowList = res?.Role?.filter((ele, i) => ele?.position > Position);\r\n\r\n        setRoleList(WithoutAssign);\r\n        // setRoleList(res?.Role);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleRoleChange = (role) => {\r\n    const roles = [...selectedRoles];\r\n\r\n    if (roles?.includes(role)) {\r\n      // Remove role if it's already selected\r\n      roles?.splice(roles.indexOf(role), 1);\r\n    } else {\r\n      // Add role if it's not selected\r\n      roles.push(role);\r\n    }\r\n\r\n    setSelectedRoles(roles);\r\n  };\r\n\r\n  const handleAssignRoles = async () => {\r\n    // Implement your logic to assign roles to the selected department\r\n    let userinfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setLoader(true);\r\n    let MainData = selectedRoles?.map((ele, i) => {\r\n      return {\r\n        roleName: ele?.roleName,\r\n        database: ele?.database,\r\n        roleId: ele?._id,\r\n        rolePosition: ele?.createdPosition,\r\n      };\r\n    });\r\n    let payload = {\r\n      created_by: userinfo?._id,\r\n      database: userinfo?.database,\r\n      departmentName: selectedDepartment,\r\n      roles: MainData,\r\n    };\r\n\r\n    await _PostSave(Save_Assigned_Role, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setSelectedRoles([]);\r\n        setLoader(false);\r\n\r\n        swal(\"Roles Assigned Successfully\");\r\n        RoleLists();\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n\r\n        console.log(err);\r\n        swal(\"Something went wrong\");\r\n      });\r\n    // You can send this data to your server or manage it in your state\r\n  };\r\n  if (Loader) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"20rem\",\r\n        }}>\r\n        <Spinner\r\n          style={{\r\n            height: \"4rem\",\r\n            width: \"4rem\",\r\n          }}\r\n          color=\"primary\">\r\n          Loading...\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n  const handleAddRanking = (e, data, i) => {\r\n    let AllSelected = [...selectedRoles];\r\n\r\n    let index = selectedRoles?.indexOf(data);\r\n    AllSelected[index][\"createdPosition\"] = Number(e.target.value);\r\n    setSelectedRoles(AllSelected);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"card p-3\">\r\n        <Row>\r\n          <Col></Col>\r\n          <Col lg=\"2\">\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"float-right mr-1\"\r\n                  color=\"primary\"\r\n                  onClick={() => history.goBack()}>\r\n                  {\" \"}\r\n                  Back\r\n                  {/* <FaPlus size={15} /> Create User */}\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3 className=\"mb-3\">\r\n            <strong>Assign Roles to Department</strong>\r\n          </h3>\r\n        </div>\r\n        <Row>\r\n          <Col lg=\"4\" sm=\"6\" md=\"4\">\r\n            <Label>Select Department:</Label>\r\n            <select\r\n              id=\"departments\"\r\n              className=\"form-control\"\r\n              onChange={handleDepartmentChange}\r\n              value={selectedDepartment}>\r\n              <option value=\"\">--Select Department--</option>\r\n              {DepartMentList &&\r\n                DepartMentList?.map((department, i) => (\r\n                  <option key={department?._id} value={department?._id}>\r\n                    {department?.departmentName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3 className=\"mb-3\">\r\n            <strong>Choose Roles</strong>\r\n          </h3>\r\n        </div>\r\n        <Row>\r\n          {RoleList.map((role, i) => (\r\n            <Col lg=\"6\" sm=\"12\" md=\"6\">\r\n              <div key={role?._id} className=\"form-label-group d-flex\">\r\n                <input\r\n                  className=\"mt-1\"\r\n                  required\r\n                  type=\"checkbox\"\r\n                  style={{ marginRight: \"3px\", height: \"22px\", width: \"22px\" }}\r\n                  id={role}\r\n                  value={role}\r\n                  //   checked={selectedRoles?.includes(role?._id)}\r\n                  onChange={() => handleRoleChange(role)}\r\n                />\r\n                <span\r\n                  className=\"mb-1 ml-1\"\r\n                  style={{ marginRight: \"20px\", fontSize: \"25px\" }}>\r\n                  {role?.roleName}\r\n                </span>\r\n                <span\r\n                  className=\"input\"\r\n                  style={{ position: \"absolute\", right: 200 }}>\r\n                  <Input\r\n                    onChange={(e) => handleAddRanking(e, role, i)}\r\n                    placeholder=\"Enter Position of Role\"\r\n                    type=\"number\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleAssignRoles}\r\n            disabled={!selectedDepartment || selectedRoles.length === 0}>\r\n            Assign Roles\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepartmentRoleAssign;\r\n","import React from \"react\";\r\nimport { FaPencilAlt } from \"react-icons/fa\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  Badge,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport xmlJs from \"xml-js\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown, Edit, Trash, Edit2 } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { BsEye, BsTrash } from \"react-icons/bs\";\r\nimport {\r\n  CreateAccountView,\r\n  Get_RoleList,\r\n  _Get,\r\n  _GetList,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { CheckPermission } from \"../house/CheckPermission\";\r\nimport SuperAdminUI from \"../../../SuperAdminUi/SuperAdminUI\";\r\nimport {\r\n  Create_Department,\r\n  List_Department,\r\n  Role_list_by_Master,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport DepartmentRoleAssign from \"./DepartmentRoleAssign\";\r\n\r\nclass RoleList extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rowData: [],\r\n      isOpen: false,\r\n      formValues: [{ DepartmentName: \"\", Description: \"\" }],\r\n      modal: false,\r\n      DepartmentName: \"\",\r\n      InsiderPermissions: {},\r\n      paginationPageSize: 20,\r\n      Position: 0,\r\n      MasterShow: false,\r\n      DepartmentPresent: false,\r\n      MasterRoleList: false,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: \"S.No\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          width: 150,\r\n          filter: true,\r\n        },\r\n        {\r\n          headerName: \"Role Name\",\r\n          field: \"roleName\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 160,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div className=\"\">\r\n                  <span>{params?.data?.roleName}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Role desc\",\r\n          field: \"desc\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 230,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div className=\"\">\r\n                  <span>{params?.data?.desc}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // {\r\n        //   headerName: \"Under Department\",\r\n        //   field: \"desc\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 230,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div className=\"\">\r\n        //           <span>{params?.data?.desc}</span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"sortorder\",\r\n          field: \"transactions\",\r\n          width: 200,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                {/* {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions.View && (\r\n                  <BsEye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/account/updateexistingrole/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )} */}\r\n\r\n                {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions.Edit && (\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <span\r\n                          style={{\r\n                            border: \"1px solid white\",\r\n                            padding: \"10px\",\r\n                            borderRadius: \"30px\",\r\n                            backgroundColor: \"rgb(212, 111, 16)\",\r\n                            marginLeft: \"3px\",\r\n                          }}>\r\n                          <FaPencilAlt\r\n                            className=\"\"\r\n                            size=\"20px\"\r\n                            color=\"white\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: `/app/freshlist/account/editRole/${params?.data?._id}`,\r\n                                data: params,\r\n                              })\r\n                            }\r\n                          />\r\n                        </span>\r\n                      )}\r\n                    />\r\n                  )}\r\n                {/* )} */}\r\n                {/* {this.state.Deletepermisson && (\r\n                <BsTrash\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"red\"\r\n                  onClick={() => {\r\n                    this.runthisfunction(params.data.id);\r\n                  }}\r\n                />\r\n              )} */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(i, e) {\r\n    let formValues = this.state.formValues;\r\n    formValues[i][e.target.name] = e.target.value;\r\n    this.setState({ formValues });\r\n  }\r\n\r\n  addFormFields() {\r\n    this.setState({\r\n      formValues: [\r\n        ...this.state.formValues,\r\n        { DepartmentName: \"\", Description: \"\" },\r\n      ],\r\n    });\r\n  }\r\n\r\n  removeFormFields(i) {\r\n    let formValues = this.state.formValues;\r\n    formValues.splice(i, 1);\r\n    this.setState({ formValues });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    this.setState({ Loading: true });\r\n    e.preventDefault();\r\n    let userinfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let alldata = [];\r\n    if (this.state.DepartmentPresent) {\r\n      alldata = this.state.formValues?.map((ele, i) => {\r\n        return {\r\n          departmentName: ele?.DepartmentName,\r\n          departmentDesc: ele?.Description,\r\n          database: userinfo?.database,\r\n          departmentId: ele?.Id ? ele?.Id : null,\r\n          created_by: userinfo?._id,\r\n        };\r\n      });\r\n    } else {\r\n      alldata = this.state.formValues?.map((ele, i) => {\r\n        return {\r\n          departmentName: ele?.DepartmentName,\r\n          departmentDesc: ele?.Description,\r\n          database: userinfo?.database,\r\n          created_by: userinfo?._id,\r\n        };\r\n      });\r\n    }\r\n    \r\n    let payload = {\r\n      Departments: alldata,\r\n    };\r\n\r\n    let URL = Create_Department;\r\n    await _PostSave(URL, payload)\r\n      .then((res) => {\r\n        this.setState({ Loading: false });\r\n\r\n        swal(\"Departments Created\");\r\n        localStorage.setItem(\"CompanyDepartments\", JSON.stringify(payload));\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ Loading: false });\r\n\r\n        console.log(err);\r\n      });\r\n  };\r\n  handleShowDepartment = () => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let URL = `${List_Department}/${userData?.database}`;\r\n    _GetList(URL)\r\n      .then((res) => {\r\n        let AllDeparts = res?.Department;\r\n        if (AllDeparts) {\r\n          let values = AllDeparts?.map((ele, i) => {\r\n            return {\r\n              DepartmentName: ele?.departmentName,\r\n              Description: ele?.departmentDesc,\r\n              Id: ele?._id,\r\n            };\r\n          });\r\n          if (values?.length) {\r\n            this.setState({ DepartmentPresent: true });\r\n          }\r\n          this.setState({\r\n            formValues: values,\r\n          });\r\n        }\r\n\r\n        //  setDepartMentList(res?.Department[0]?.department);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n  async Apicalling(id, db, value) {\r\n    this.setState({ Loading: true });\r\n    if (value) {\r\n      await _Get(Role_list_by_Master, id)\r\n        .then((res) => {\r\n          console.log(res?.Role);\r\n          this.setState({ Loading: false });\r\n          this.setState({ rowData: res?.Role });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ Loading: false });\r\n          this.setState({ rowData: [] });\r\n\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      await Get_RoleList(id, db)\r\n        .then((res) => {\r\n          this.setState({ Loading: false });\r\n\r\n          // console.log(res?.Role);\r\n          this.setState({ rowData: res?.Role });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ Loading: false });\r\n          this.setState({ rowData: [] });\r\n\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    this.handleShowDepartment();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    this.setState({ Position: pageparmission?.rolename.rank });\r\n    if (pageparmission?.rolename.rank === 0) {\r\n      this.setState({ MasterShow: true });\r\n      this.setState({ MasterRoleList: true });\r\n    }\r\n    let value = pageparmission?.rolename.rank === 0;\r\n    const InsidePermissions = CheckPermission(\"Create User\");\r\n    console.log(InsidePermissions);\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n    await this.Apicalling(pageparmission?._id, pageparmission?.database, value);\r\n  }\r\n\r\n  runthisfunction(id) {\r\n    // console.log(id);\r\n    let selectedData = this.gridApi.getSelectedRows();\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          const formData = new FormData();\r\n          formData.append(\"user_id\", id);\r\n          this.gridApi.updateRowData({ remove: selectedData });\r\n          axiosConfig.post(`/userdelete`, formData).then((response) => {});\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files[0] });\r\n  //     this.setState({ selectedName: event.target.files[0].name });\r\n  //     console.log(event.target.files[0]);\r\n  //   };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files });\r\n  //     this.setState({ selectedName: event.target.files.name });\r\n  //     console.log(event.target.files);\r\n  //   };\r\n  //   changeHandler1 = (e) => {\r\n  //     this.setState({ status: e.target.value });\r\n  //   };\r\n  //   changeHandler = (e) => {\r\n  //     this.setState({ [e.target.name]: e.target.value });\r\n  //   };\r\n  //   submitHandler = (e) => {\r\n  //     e.preventDefault();\r\n  //     const data = new FormData();\r\n  //     data.append(\"banner_title\", this.state.banner_title);\r\n  //     data.append(\"bannertype\", this.state.bannertype);\r\n  //     data.append(\"status\", this.state.status);\r\n  //     for (const file of this.state.selectedFile) {\r\n  //       if (this.state.selectedFile !== null) {\r\n  //         data.append(\"banner_img\", file, file.name);\r\n  //       }\r\n  //     }\r\n\r\n  //     axiosConfig\r\n  //       .post(\"/addbanner\", data)\r\n  //       .then((response) => {\r\n  //         console.log(response);\r\n  //         swal(\"Successful!\", \"You clicked the button!\", \"success\");\r\n  //         this.props.history.push(\"/app/freshlist/banner/bannerList\");\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   };\r\n  handleParentSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ MasterRoleList: false });\r\n    let SuperAdmin = JSON.parse(localStorage.getItem(\"SuperadminIdByMaster\"));\r\n    let id = SuperAdmin.split(\" \")[0];\r\n    let db = SuperAdmin.split(\" \")[1];\r\n    this.Apicalling(id, db, false);\r\n  };\r\n  handleDropdownChange = (selectedValue) => {\r\n    localStorage.setItem(\"SuperadminIdByMaster\", JSON.stringify(selectedValue));\r\n  };\r\n  render() {\r\n    if (this.state.Loading) {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20rem\",\r\n          }}>\r\n          <Spinner\r\n            style={{\r\n              height: \"4rem\",\r\n              width: \"4rem\",\r\n            }}\r\n            color=\"primary\">\r\n            Loading...\r\n          </Spinner>\r\n        </div>\r\n      );\r\n    }\r\n    // console.log(this.state.InsiderPermissions);\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"mt-2 mx-2 mr-2\">\r\n              <Col lg=\"1\" md=\"1\" sm=\"6\" xs=\"12\">\r\n                <h3 className=\"float-left\" style={{ fontWeight: \"600\" }}>\r\n                  Role List\r\n                </h3>\r\n              </Col>\r\n              {this.state.MasterShow && (\r\n                <Col>\r\n                  <SuperAdminUI\r\n                    onDropdownChange={this.handleDropdownChange}\r\n                    onSubmit={this.handleParentSubmit}\r\n                  />\r\n                </Col>\r\n              )}\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" md=\"2\" sm=\"2\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() =>\r\n                              history.push(\"/app/freshlist/account/addRoleNew\")\r\n                            }>\r\n                            <FaPlus size={15} /> Role\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              {/* {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() =>\r\n                              history.push(\r\n                                \"/app/Ajgroup/account/AssignToSuperAdmin\"\r\n                              )\r\n                            }>\r\n                            Assign To SuperAdmin\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )} */}\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" sm=\"2\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() => {\r\n                              history.push(\r\n                                \"/app/Ajgroup/account/DepartmentRoleAssign\"\r\n                              );\r\n                            }}>\r\n                            Role Assignment\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" sm=\"2\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() => {\r\n                              // history.push(\"/app/freshlist/account/addRoleNew\")\r\n                              this.toggleModal();\r\n                            }}>\r\n                            Department\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.View && (\r\n                  <>\r\n                    {/* {this.state.Position == 1 && ( */}\r\n                    <Col lg=\"2\" sm=\"2\" md=\"2\" ms=\"12\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() =>\r\n                              history.push(\r\n                                \"/app/freshlist/account/CreateHeirarchy\"\r\n                              )\r\n                            }>\r\n                            View Hierarchy\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </Col>\r\n                    {/* )} */}\r\n                  </>\r\n                )}\r\n            </Row>\r\n            {this.state.InsiderPermissions &&\r\n              this.state.InsiderPermissions?.View && (\r\n                <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-1 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}>\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}>\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}>\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}>\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"Search here...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          {this.state.InsiderPermissions &&\r\n                            this.state.InsiderPermissions?.Download && (\r\n                              <div className=\"export-btn\">\r\n                                <Button.Ripple\r\n                                  color=\"primary\"\r\n                                  onClick={() =>\r\n                                    this.gridApi.exportDataAsCsv()\r\n                                  }>\r\n                                  Export as CSV\r\n                                </Button.Ripple>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              )}\r\n          </Card>\r\n        </Col>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggleModal}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}>\r\n          <ModalHeader toggle={this.toggleModal}>Add Department</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <div className=\"d-flex justify-content-center mb-2\">\r\n              <b>\r\n                <h3>Create Your Departments</h3>\r\n              </b>\r\n            </div>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              {this.state.formValues?.map((element, index) => (\r\n                <Row key={index}>\r\n                  <Col lg=\"4\" sm=\"6\" md=\"4\" className=\"mb-2\">\r\n                    <Label className=\"mb-1\">Create Department</Label>\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Department Name\"\r\n                      name=\"DepartmentName\"\r\n                      value={element.DepartmentName || \"\"}\r\n                      onChange={(e) => this.handleChange(index, e)}\r\n                      type=\"text\"\r\n                    />\r\n                  </Col>\r\n                  <Col lg=\"4\" sm=\"6\" md=\"4\" className=\"mb-2\">\r\n                    <Label className=\"mb-1\"> Description</Label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      rows={2}\r\n                      required\r\n                      placeholder=\"Department Description\"\r\n                      name=\"Description\"\r\n                      value={element.Description || \"\"}\r\n                      onChange={(e) => this.handleChange(index, e)}\r\n                      type=\"text\"\r\n                    />\r\n                  </Col>\r\n                  <Col lg=\"4\" sm=\"6\" md=\"4\" className=\"\">\r\n                    <div className=\"mt-4\">\r\n                      {index ? (\r\n                        <Button\r\n                          color=\"danger\"\r\n                          type=\"button\"\r\n                          className=\"button remove\"\r\n                          onClick={() => this.removeFormFields(index)}>\r\n                          Remove\r\n                        </Button>\r\n                      ) : null}\r\n\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className=\"button add ml-1\"\r\n                        type=\"button\"\r\n                        onClick={() => this.addFormFields()}>\r\n                        Add\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n\r\n              <div className=\"d-flex justify-content-center mt-1\">\r\n                <Button type=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default RoleList;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n    Download: newparmisson?.permission.includes(\"Download\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n"],"sourceRoot":""}