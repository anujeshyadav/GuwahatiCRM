{"version":3,"sources":["views/apps/freshlist/accounts/GoodDispatchEdit.js","views/apps/freshlist/accounts/GoodDispatchView.js","views/apps/freshlist/accounts/GoodDispatchList.js","assets/img/profile/pages/logomain.png"],"names":["GoodDispatchEdit","EditOneData","useState","CreatAccountView","setCreatAccountView","formData","setFormData","dropdownValue","setdropdownValue","index","error","handleInputChange","useContext","UserContext","e","type","i","target","name","value","files","console","log","useEffect","_id","GoodDispatchxmlView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","GoodDispatch","input","catch","err","Card","Form","className","onSubmit","preventDefault","formdata","FormData","map","el","_text","append","EditGoodDispatch","swal","Row","Col","lg","md","sm","ele","_attributes","key","FormGroup","Label","label","Input","placeholder","onChange","style","color","MyDropdown","dropdown","CustomInput","required","option","checked","marginRight","Button","Ripple","GoodDispatchView","ViewOneData","setindex","setError","disabled","src","alt","width","height","test","length","AssignDeliveryBoy","SelectedColums","GoodDispatchList","props","LookupviewStart","setState","prevState","modal","handleChangeEdit","types","ViewOneUserView","EditOneUserView","toggleDropdown","isOpen","onGridReady","params","gridApi","api","gridColumnApi","columnApi","gridRef","current","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleChangeHeader","push","delindex","findIndex","headerName","splice","exportToPDF","csvData","getDataAsCsv","processCellCallback","processCell","parseCsv","parsedData","generatePDF","exportToExcel","CsvData","convertCsvToExcel","blob","downloadExcelFile","convertCSVtoExcel","Papa","complete","result","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","shiftElementUp","currentIndex","state","Arrindex","myArrayCopy","SelectedcolumnDefs","elementToMove","shiftElementDown","convertCsvToXml","rows","xmlString","forEach","row","cell","Blob","link","document","createElement","href","URL","createObjectURL","download","click","HandleSetVisibleField","setColumnDefs","columnDefs","rowData","localStorage","setItem","stringify","HeadingRightShift","updatedSelectedColumnDefs","Set","item","handleLeftShift","SelectedCols","slice","React","createRef","setMySelectedarr","paginationPageSize","AllcolumnDefs","defaultColDef","sortable","enablePivot","enableValue","resizable","suppressMenu","this","context","UserInformatio","userId","getItem","headerSet","indexB","indexOf","indexC","inputs","field","filter","myHeadings","Product","render","history","size","onClick","runthisfunction","cellRendererFramework","CNUpload","FetchSalesInvoice","createdAt","userHeading","GoodDispatchListView","id","buttons","cancel","text","DeleteAccount","selectedData","getSelectedRows","updateRowData","remove","Promise","resolve","reject","header","skipEmptyLines","Error","pdfsize","Object","keys","doc","jsPDF","setTextColor","tableData","values","addImage","Logo","date","Date","setCreationDate","autoTable","head","body","startY","save","dynamicTyping","worksheet","workbook","excelBuffer","bookType","url","window","a","appendChild","revokeObjectURL","cursor","title","position","zIndex","exportDataAsCsv","Badge","CardBody","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","Consumer","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","ref","domLayout","Modal","toggle","maxWidth","ModalHeader","ModalBody","xl","xs","class","backgroundColor","element","Component","contextType","module","exports"],"mappings":"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","file":"static/js/163.022a9948.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport {\r\n  GoodDispatchxmlView,\r\n  EditGoodDispatch,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst GoodDispatchEdit = ({ EditOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (type == \"text\") {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    } else if (type == \"file\") {\r\n      console.log(e.target.name);\r\n      setFormData({\r\n        ...formData,\r\n        [name]: files[0],\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    console.log(EditOneData?._id);\r\n    setFormData(EditOneData);\r\n  }, []);\r\n  useEffect(() => {\r\n    GoodDispatchxmlView()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setCreatAccountView(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setdropdownValue(JSON.parse(jsonData)?.GoodDispatch);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    console.log(EditOneData?._id);\r\n    const formdata = new FormData();\r\n    CreatAccountView.map(el => {\r\n      if (el?.name?._text == \"CNUpload\") {\r\n        formdata.append(`${el?.name?._text}`, formData[el?.name?._text]);\r\n      }\r\n      if (el?.name?._text == \"FetchSalesInvoice\") {\r\n        formdata.append(`${el?.name?._text}`, formData[el?.name?._text]);\r\n      }\r\n    });\r\n    EditGoodDispatch(formdata, EditOneData?._id)\r\n      .then(res => {\r\n        // setFormData({});\r\n        console.log(res);\r\n        //   if (res.status) {\r\n        // window.location.reload();\r\n        swal(\"Good Dispatch Updated Successfully\");\r\n        //   }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\" onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                <h2> Edit Dispatch</h2>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                {\" \"}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-2\">\r\n              {CreatAccountView &&\r\n                CreatAccountView?.map((ele, i) => {\r\n                  if (ele?.type?._attributes?.type == \"text\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                            onChange={e => {\r\n                              handleInputChange(\r\n                                e,\r\n                                ele?.type?._attributes?.type,\r\n                                i\r\n                              );\r\n                            }}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else if (ele?.type?._attributes?.type == \"file\") {\r\n                    console.log(\"file\", ele?.name?._text);\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label className=\"\">{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            name={ele?.name?._text}\r\n                            // value={formData[ele?.name?._text]}\r\n                            onChange={e => {\r\n                              handleInputChange(\r\n                                e,\r\n                                ele?.type?._attributes?.type,\r\n                                i\r\n                              );\r\n                            }}\r\n                          />\r\n\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                })}\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.label?._text}\r\n                  </Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name={dropdownValue?.MyDropdown?.dropdown?.name?._text}\r\n                    value={\r\n                      formData[dropdownValue?.MyDropdown?.dropdown?.name?._text]\r\n                    }\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <option value=\"\">--Assign Delivery Boy--</option>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.option.map(\r\n                      (option, index) => (\r\n                        <option key={index} value={option?._attributes?.value}>\r\n                          {option?._attributes?.value}\r\n                        </option>\r\n                      )\r\n                    )}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <Label className=\"mb-0\">Status</Label>\r\n              <div\r\n                className=\"form-label-group\"\r\n                onChange={e => {\r\n                  setFormData({\r\n                    ...formData,\r\n                    [\"status\"]: e.target.value,\r\n                  });\r\n                }}\r\n              >\r\n                <input\r\n                  checked={formData[\"status\"] == \"Active\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Active\"\r\n                />\r\n                <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                <input\r\n                  // checked={status == \"Inactive\"}\r\n                  checked={formData[\"status\"] == \"Deactive\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Deactive\"\r\n                />\r\n                <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n              </div>\r\n            </Col>\r\n            <Row>\r\n              <Button.Ripple\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"mr-1 mt-2 mx-2\"\r\n              >\r\n                Submit\r\n              </Button.Ripple>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoodDispatchEdit;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport {\r\n  GoodDispatchxmlView,\r\n  Get_RoleList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst GoodDispatchView = ({ ViewOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    console.log(ViewOneData);\r\n    setFormData(ViewOneData);\r\n  }, []);\r\n  useEffect(() => {\r\n    GoodDispatchxmlView()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        // console.log(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setCreatAccountView(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setdropdownValue(JSON.parse(jsonData)?.GoodDispatch);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\">\r\n            <Row className=\"mb-2\">\r\n              {CreatAccountView &&\r\n                CreatAccountView?.map((ele, i) => {\r\n                  if (ele?.type?._attributes?.type == \"text\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            disabled\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else if (ele?.type?._attributes?.type == \"file\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label className=\"m-2\">{ele?.label?._text}</Label>\r\n                          <img\r\n                            // className=\"form-control\"\r\n                            src={`http://64.227.162.41:5000/Images/${\r\n                              formData[ele?.name?._text]\r\n                            }`}\r\n                            alt=\"image\"\r\n                            width={50}\r\n                            height={50}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            disabled\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                })}\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.label?._text}\r\n                  </Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name={dropdownValue?.MyDropdown?.dropdown?.name?._text}\r\n                    value={\r\n                      formData[dropdownValue?.MyDropdown?.dropdown?.name?._text]\r\n                    }\r\n                    disabled\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <option value=\"\">{formData.AssignDeliveryBoy}</option>\r\n                    {/* <option value=\"\">--DeliveryAuthentication--</option> */}\r\n                    {/* {dropdownValue?.MyDropdown?.dropdown?.option.map(\r\n                      (option, index) => (\r\n                        <option key={index} value={option?._attributes?.value}>\r\n                          {option?._attributes?.value}\r\n                        </option>\r\n                      )\r\n                    )} */}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoodDispatchView;\r\n","import React, { useRef } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport GoodDispatchEdit from \"./GoodDispatchEdit\";\r\nimport GoodDispatchView from \"../accounts/GoodDispatchView\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport Logo from \"../../../../assets/img/profile/pages/logomain.png\";\r\nimport Papa from \"papaparse\";\r\nimport { Eye, Trash2, ChevronDown, Edit } from \"react-feather\";\r\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  FaArrowAltCircleLeft,\r\n  FaArrowAltCircleRight,\r\n  FaFilter,\r\n  FaPlus,\r\n} from \"react-icons/fa\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  GoodDispatchListView,\r\n  GoodDispatchxmlView,\r\n  DeleteAccount,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  BsCloudDownloadFill,\r\n  BsFillArrowDownSquareFill,\r\n  BsFillArrowUpSquareFill,\r\n} from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport UserContext from \"../../../../context/Context\";\r\nconst SelectedColums = [];\r\n\r\nclass GoodDispatchList extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridRef = React.createRef();\r\n    this.gridApi = null;\r\n    this.state = {\r\n      isOpen: false,\r\n      Arrindex: \"\",\r\n      rowData: [],\r\n      setMySelectedarr: [],\r\n      SelectedCols: [],\r\n      paginationPageSize: 5,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      columnDefs: [],\r\n      AllcolumnDefs: [],\r\n      SelectedcolumnDefs: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        enablePivot: true,\r\n        enableValue: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  LookupviewStart = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  handleChangeEdit = (data, types) => {\r\n    let type = types;\r\n    if (type == \"readonly\") {\r\n      this.setState({ ViewOneUserView: true });\r\n      this.setState({ ViewOneData: data });\r\n    } else {\r\n      this.setState({ EditOneUserView: true });\r\n      this.setState({ EditOneData: data });\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const UserInformation = this.context?.UserInformatio;\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    GoodDispatchxmlView()\r\n      .then(res => {\r\n        var mydropdownArray = [];\r\n        var adddropdown = [];\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        let headerSet = JSON.parse(jsonData)?.GoodDispatch?.input;\r\n        let indexB = headerSet?.indexOf(\"CNUpload\");\r\n        // Find the index of 'c' in the array\r\n        let indexC = headerSet?.indexOf(\"FetchSalesInvoice\");\r\n\r\n        // Check if 'b' and 'c' exist in the array before removing\r\n        if (indexB !== -1 && indexC !== -1) {\r\n          // Use splice to remove elements from the array\r\n          headerSet?.splice(indexB, 1); // Remove 'b'\r\n          headerSet?.splice(indexC - 1, 1); // Since 'b' is removed, remove 'c' from updated index\r\n        }\r\n\r\n        const inputs = headerSet?.map(ele => {\r\n          return {\r\n            headerName: ele?.label._text,\r\n            field: ele?.name._text,\r\n            filter: true,\r\n            sortable: true,\r\n          };\r\n        });\r\n\r\n        let myHeadings = [\r\n          // ...checkboxinput,\r\n          ...inputs,\r\n          // ...adddropdown,\r\n          // ...addRadio,\r\n          ...mydropdownArray,\r\n        ];\r\n        // console.log(myHeadings);\r\n        let Product = [\r\n          {\r\n            headerName: \"Actions\",\r\n            field: \"sortorder\",\r\n            field: \"transactions\",\r\n            width: 190,\r\n            cellRendererFramework: params => {\r\n              return (\r\n                <div className=\"actions cursor-pointer\">\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Eye\r\n                        className=\"mr-50\"\r\n                        size=\"25px\"\r\n                        color=\"green\"\r\n                        onClick={() => {\r\n                          this.handleChangeEdit(params.data, \"readonly\");\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Edit\r\n                        className=\"mr-50\"\r\n                        size=\"25px\"\r\n                        color=\"blue\"\r\n                        onClick={() => {\r\n                          this.handleChangeEdit(params.data, \"Editable\");\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n\r\n                  <Route\r\n                    render={() => (\r\n                      <Trash2\r\n                        className=\"mr-50\"\r\n                        size=\"25px\"\r\n                        color=\"red\"\r\n                        onClick={() => {\r\n                          this.runthisfunction(params?.data?._id);\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n              );\r\n            },\r\n          },\r\n\r\n          ...myHeadings,\r\n          //   {\r\n          //     headerName: \"Status\",\r\n          //     field: \"status\",\r\n          //     filter: true,\r\n          //     width: 100,\r\n          //     cellRendererFramework: (params) => {\r\n          //       return params.data.status === \"Active\" ? (\r\n          //         <div className=\"badge badge-pill badge-success\">\r\n          //           {params.data.status}\r\n          //         </div>\r\n          //       ) : params.data.status === \"Deactive\" ? (\r\n          //         <div className=\"badge badge-pill badge-warning\">\r\n          //           {params.data.status}\r\n          //         </div>\r\n          //       ) : null;\r\n          //     },\r\n          //   },\r\n          {\r\n            headerName: \"CNUpload\",\r\n            field: \"CnUpload\",\r\n            filter: true,\r\n            sortable: true,\r\n            cellRendererFramework: params => {\r\n              return (\r\n                <>\r\n                  <div className=\"actions cursor-pointer\">\r\n                    <img\r\n                      src={`http://64.227.162.41:5000/Images/${params?.data?.CNUpload}`}\r\n                      alt=\"CNUpload Not Find\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            headerName: \"FetchSalesInvoice\",\r\n            field: \"FetchSalesInvoice\",\r\n            filter: true,\r\n            sortable: true,\r\n            cellRendererFramework: params => {\r\n              return (\r\n                <>\r\n                  <div className=\"actions cursor-pointer\">\r\n                    <img\r\n                      src={`http://64.227.162.41:5000/Images/${params?.data?.FetchSalesInvoice}`}\r\n                      alt=\"FetchSalesInvoice Not Find\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            headerName: \"Updated date\",\r\n            field: \"updatedAt\",\r\n            filter: true,\r\n            sortable: true,\r\n            cellRendererFramework: params => {\r\n              return (\r\n                <>\r\n                  <div className=\"actions cursor-pointer\">\r\n                    <div className=\"actions cursor-pointer\">\r\n                      <span>{params?.data?.createdAt}</span>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        ];\r\n\r\n        this.setState({ AllcolumnDefs: Product });\r\n\r\n        let userHeading = JSON.parse(localStorage.getItem(\"PartyList\"));\r\n        if (userHeading?.length) {\r\n          this.setState({ columnDefs: userHeading });\r\n          this.gridApi.setColumnDefs(userHeading);\r\n          this.setState({ SelectedcolumnDefs: userHeading });\r\n        } else {\r\n          this.setState({ columnDefs: Product });\r\n          this.setState({ SelectedcolumnDefs: Product });\r\n        }\r\n        this.setState({ SelectedCols: Product });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    await GoodDispatchListView(userId)\r\n      .then(res => {\r\n        // console.log(res.GoodDispatch[0].CNUpload);\r\n\r\n        // Find the index of 'b' in the array\r\n        let indexB = res?.GoodDispatch?.indexOf(\"CNUpload\");\r\n        // Find the index of 'c' in the array\r\n        let indexC = res?.GoodDispatch?.indexOf(\"FetchSalesInvoice\");\r\n\r\n        // Check if 'b' and 'c' exist in the array before removing\r\n        if (indexB !== -1 && indexC !== -1) {\r\n          // Use splice to remove elements from the array\r\n          res?.GoodDispatch?.splice(indexB, 1); // Remove 'b'\r\n          res?.GoodDispatch?.splice(indexC - 1, 1); // Since 'b' is removed, remove 'c' from updated index\r\n        }\r\n        this.setState({ rowData: res.GoodDispatch });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  toggleDropdown = () => {\r\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then(value => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          DeleteAccount(id)\r\n            .then(res => {\r\n              let selectedData = this.gridApi.getSelectedRows();\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridRef.current = params.api;\r\n\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleChangeHeader = (e, value, index) => {\r\n    let check = e.target.checked;\r\n    if (check) {\r\n      SelectedColums?.push(value);\r\n    } else {\r\n      const delindex = SelectedColums?.findIndex(\r\n        ele => ele?.headerName === value?.headerName\r\n      );\r\n\r\n      SelectedColums?.splice(delindex, 1);\r\n    }\r\n  };\r\n  parseCsv(csvData) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: result => {\r\n          if (result.data && result.data.length > 0) {\r\n            resolve(result.data);\r\n          } else {\r\n            reject(new Error(\"No data found in the CSV\"));\r\n          }\r\n        },\r\n        error: error => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  generatePDF(parsedData) {\r\n    let pdfsize = [Object.keys(parsedData[0])][0].length;\r\n    let size = pdfsize > 15 ? \"a1\" : pdfsize < 14 > 10 ? \"a3\" : \"a4\";\r\n\r\n    const doc = new jsPDF(\"landscape\", \"mm\", size, false);\r\n    doc.setTextColor(5, 87, 97);\r\n    const tableData = parsedData.map(row => Object.values(row));\r\n    doc.addImage(Logo, \"JPEG\", 10, 10, 50, 30);\r\n    let date = new Date();\r\n    doc.setCreationDate(date);\r\n    doc.text(\"UserAccount\", 14, 51);\r\n    doc.autoTable({\r\n      head: [Object.keys(parsedData[0])],\r\n      body: tableData,\r\n      startY: 60,\r\n    });\r\n\r\n    doc.save(\"UserList.pdf\");\r\n  }\r\n\r\n  exportToPDF = async () => {\r\n    const csvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    try {\r\n      const parsedData = await this.parseCsv(csvData);\r\n      this.generatePDF(parsedData);\r\n    } catch (error) {\r\n      console.error(\"Error parsing CSV:\", error);\r\n    }\r\n  };\r\n  processCell = params => {\r\n    return params.value;\r\n  };\r\n\r\n  convertCsvToExcel(csvData) {\r\n    return new Promise(resolve => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        complete: function (result) {\r\n          const worksheet = XLSX.utils.json_to_sheet(result.data);\r\n          const workbook = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n          const excelBuffer = XLSX.write(workbook, {\r\n            bookType: \"xlsx\",\r\n            type: \"array\",\r\n          });\r\n          const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          resolve(blob);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  downloadExcelFile(blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"Userlist.xlsx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  exportToExcel = async e => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    const blob = await this.convertCsvToExcel(CsvData);\r\n    this.downloadExcelFile(blob);\r\n  };\r\n\r\n  convertCSVtoExcel = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: result => {\r\n        const ws = XLSX.utils.json_to_sheet(result.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelType = \"xls\";\r\n        XLSX.writeFile(wb, `UserList.${excelType}`);\r\n      },\r\n    });\r\n  };\r\n\r\n  shiftElementUp = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex > 0) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex - 1 });\r\n      myArrayCopy.splice(currentIndex - 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n\r\n  shiftElementDown = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex < this.state.SelectedcolumnDefs.length - 1) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex + 1 });\r\n      myArrayCopy.splice(currentIndex + 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n  convertCsvToXml = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: result => {\r\n        const rows = result.data;\r\n\r\n        // Create XML\r\n        let xmlString = \"<root>\\n\";\r\n\r\n        rows.forEach(row => {\r\n          xmlString += \"  <row>\\n\";\r\n          row.forEach((cell, index) => {\r\n            xmlString += `    <field${index + 1}>${cell}</field${index + 1}>\\n`;\r\n          });\r\n          xmlString += \"  </row>\\n\";\r\n        });\r\n\r\n        xmlString += \"</root>\";\r\n\r\n        // setXmlData(xmlString);\r\n\r\n        // Create a download link\r\n        const blob = new Blob([xmlString], { type: \"text/xml\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"output.xml\";\r\n        link.click();\r\n      },\r\n    });\r\n  };\r\n\r\n  HandleSetVisibleField = e => {\r\n    e.preventDefault();\r\n    this.gridApi.setColumnDefs(this.state.SelectedcolumnDefs);\r\n    this.setState({ columnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ SelectedcolumnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ rowData: this.state.rowData });\r\n    localStorage.setItem(\r\n      \"PartyList\",\r\n      JSON.stringify(this.state.SelectedcolumnDefs)\r\n    );\r\n    this.LookupviewStart();\r\n  };\r\n\r\n  HeadingRightShift = () => {\r\n    const updatedSelectedColumnDefs = [\r\n      ...new Set([\r\n        ...this.state.SelectedcolumnDefs.map(item => JSON.stringify(item)),\r\n        ...SelectedColums.map(item => JSON.stringify(item)),\r\n      ]),\r\n    ].map(item => JSON.parse(item));\r\n    this.setState({\r\n      SelectedcolumnDefs: [...new Set(updatedSelectedColumnDefs)], // Update the state with the combined array\r\n    });\r\n  };\r\n  handleLeftShift = () => {\r\n    let SelectedCols = this.state.SelectedcolumnDefs.slice();\r\n    let delindex = this.state.Arrindex; /* Your delete index here */\r\n\r\n    if (SelectedCols && delindex >= 0) {\r\n      const splicedElement = SelectedCols.splice(delindex, 1); // Remove the element\r\n\r\n      this.setState({\r\n        SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n      SelectedcolumnDefs,\r\n      isOpen,\r\n      SelectedCols,\r\n      AllcolumnDefs,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Col className=\"app-user-list\">\r\n          {this.state.EditOneUserView && this.state.EditOneUserView ? (\r\n            <Row className=\"card\">\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end p-1\">\r\n                  <Button\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState({ EditOneUserView: false });\r\n                    }}\r\n                    color=\"danger\"\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              <GoodDispatchEdit EditOneData={this.state.EditOneData} />\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {this.state.ViewOneUserView && this.state.ViewOneUserView ? (\r\n                <>\r\n                  <Row className=\"card\">\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-end p-1\">\r\n                        <Button\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.setState({ ViewOneUserView: false });\r\n                          }}\r\n                          color=\"danger\"\r\n                        >\r\n                          Back\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <GoodDispatchView ViewOneData={this.state.ViewOneData} />\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col sm=\"12\">\r\n                    <Card>\r\n                      <Row className=\"m-2\">\r\n                        <Col>\r\n                          <h1 className=\"float-left\">Good Dispatch List</h1>\r\n                        </Col>\r\n                        <Col>\r\n                          <span className=\"mx-1\">\r\n                            <FaFilter\r\n                              style={{ cursor: \"pointer\" }}\r\n                              title=\"filter coloumn\"\r\n                              size=\"25px\"\r\n                              onClick={this.LookupviewStart}\r\n                              color=\"#39cccc\"\r\n                              className=\"float-right\"\r\n                            />\r\n                          </span>\r\n                          <span className=\"mx-1\">\r\n                            <div className=\"dropdown-container float-right\">\r\n                              <BsCloudDownloadFill\r\n                                style={{ cursor: \"pointer\" }}\r\n                                title=\"download file\"\r\n                                size=\"25px\"\r\n                                className=\"dropdown-button \"\r\n                                color=\"#39cccc\"\r\n                                onClick={this.toggleDropdown}\r\n                              />\r\n                              {isOpen && (\r\n                                <div\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    zIndex: \"1\",\r\n                                  }}\r\n                                  className=\"dropdown-content dropdownmy\"\r\n                                >\r\n                                  <h5\r\n                                    onClick={() => this.exportToPDF()}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive mt-1\"\r\n                                  >\r\n                                    .PDF\r\n                                  </h5>\r\n                                  <h5\r\n                                    onClick={() =>\r\n                                      this.gridApi.exportDataAsCsv()\r\n                                    }\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive\"\r\n                                  >\r\n                                    .CSV\r\n                                  </h5>\r\n                                  <h5\r\n                                    onClick={this.convertCSVtoExcel}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive\"\r\n                                  >\r\n                                    .XLS\r\n                                  </h5>\r\n                                  <h5\r\n                                    onClick={this.exportToExcel}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive\"\r\n                                  >\r\n                                    .XLSX\r\n                                  </h5>\r\n                                  <h5\r\n                                    onClick={() => this.convertCsvToXml()}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive\"\r\n                                  >\r\n                                    .XML\r\n                                  </h5>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </span>\r\n                          <span>\r\n                            <Route\r\n                              render={({ history }) => (\r\n                                <Badge\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"float-right mr-1\"\r\n                                  color=\"primary\"\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      \"/app/AjGroup/dispatch/CreateDispach\"\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <FaPlus size={15} /> Create Dispatch\r\n                                </Badge>\r\n                              )}\r\n                            />\r\n                          </span>\r\n                        </Col>\r\n                      </Row>\r\n                      <CardBody>\r\n                        {this.state.rowData === null ? null : (\r\n                          <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                            <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                              <div className=\"mb-1\">\r\n                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                  <DropdownToggle tag=\"div\">\r\n                                    {this.gridApi\r\n                                      ? this.state.currenPageSize\r\n                                      : \"\" * this.state.getPageSize -\r\n                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {this.state.rowData.length -\r\n                                      this.state.currenPageSize *\r\n                                        this.state.getPageSize >\r\n                                    0\r\n                                      ? this.state.currenPageSize *\r\n                                        this.state.getPageSize\r\n                                      : this.state.rowData.length}{\" \"}\r\n                                    of {this.state.rowData.length}\r\n                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu right>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(5)}\r\n                                    >\r\n                                      5\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(20)}\r\n                                    >\r\n                                      20\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(50)}\r\n                                    >\r\n                                      50\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(100)}\r\n                                    >\r\n                                      100\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(134)}\r\n                                    >\r\n                                      134\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap justify-content-end mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                  <Input\r\n                                    placeholder=\"search Item here...\"\r\n                                    onChange={e =>\r\n                                      this.updateSearchQuery(e.target.value)\r\n                                    }\r\n                                    value={this.state.value}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ContextLayout.Consumer className=\"ag-theme-alpine\">\r\n                              {context => (\r\n                                <AgGridReact\r\n                                  id=\"myAgGrid\"\r\n                                  // gridOptions={{\r\n                                  //   domLayout: \"autoHeight\",\r\n                                  //   // or other layout options\r\n                                  // }}\r\n                                  gridOptions={this.gridOptions}\r\n                                  rowSelection=\"multiple\"\r\n                                  defaultColDef={defaultColDef}\r\n                                  columnDefs={columnDefs}\r\n                                  rowData={rowData}\r\n                                  // onGridReady={(params) => {\r\n                                  //   this.gridApi = params.api;\r\n                                  //   this.gridColumnApi = params.columnApi;\r\n                                  //   this.gridRef.current = params.api;\r\n\r\n                                  //   this.setState({\r\n                                  //     currenPageSize:\r\n                                  //       this.gridApi.paginationGetCurrentPage() +\r\n                                  //       1,\r\n                                  //     getPageSize:\r\n                                  //       this.gridApi.paginationGetPageSize(),\r\n                                  //     totalPages:\r\n                                  //       this.gridApi.paginationGetTotalPages(),\r\n                                  //   });\r\n                                  // }}\r\n                                  onGridReady={this.onGridReady}\r\n                                  colResizeDefault={\"shift\"}\r\n                                  animateRows={true}\r\n                                  floatingFilter={false}\r\n                                  pagination={true}\r\n                                  paginationPageSize={\r\n                                    this.state.paginationPageSize\r\n                                  }\r\n                                  pivotPanelShow=\"always\"\r\n                                  enableRtl={context.state.direction === \"rtl\"}\r\n                                  ref={this.gridRef} // Attach the ref to the grid\r\n                                  domLayout=\"autoHeight\" // Adjust layout as needed\r\n                                />\r\n                              )}\r\n                            </ContextLayout.Consumer>\r\n                          </div>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.LookupviewStart}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}\r\n        >\r\n          <ModalHeader toggle={this.LookupviewStart}>Change Fileds</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"12\" xl=\"4\" xs=\"12\">\r\n                <h4>Avilable Columns</h4>\r\n                <div className=\"mainshffling\">\r\n                  <div class=\"ex1\">\r\n                    {AllcolumnDefs &&\r\n                      AllcolumnDefs?.map((ele, i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              onClick={e => this.handleChangeHeader(e, ele, i)}\r\n                              key={i}\r\n                              className=\"mycustomtag mt-1\"\r\n                            >\r\n                              <span className=\"mt-1\">\r\n                                <h5\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"allfields\"\r\n                                >\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    // checked={check && check}\r\n                                    className=\"mx-1\"\r\n                                  />\r\n\r\n                                  {ele?.headerName}\r\n                                </h5>\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"12\" xl=\"2\" xs=\"12\" className=\"colarrowbtn\">\r\n                <div className=\"mainarrowbtn\">\r\n                  <div style={{ cursor: \"pointer\" }}>\r\n                    <FaArrowAltCircleRight\r\n                      onClick={this.HeadingRightShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ cursor: \"pointer\" }} className=\"my-2\">\r\n                    <FaArrowAltCircleLeft\r\n                      onClick={this.handleLeftShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\" xl=\"6\" xs=\"12\">\r\n                <Row>\r\n                  <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n                    <h4>Visible Columns</h4>\r\n                    <div className=\"mainshffling\">\r\n                      <div class=\"ex1\">\r\n                        {SelectedcolumnDefs &&\r\n                          SelectedcolumnDefs?.map((ele, i) => {\r\n                            return (\r\n                              <>\r\n                                <div key={i} className=\"mycustomtag mt-1\">\r\n                                  <span className=\"mt-1\">\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.setState({ Arrindex: i })\r\n                                      }\r\n                                      style={{\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor: `${\r\n                                          this.state.Arrindex === i\r\n                                            ? \"#1877f2\"\r\n                                            : \"\"\r\n                                        }`,\r\n                                      }}\r\n                                      className=\"allfields\"\r\n                                    >\r\n                                      <IoMdRemoveCircleOutline\r\n                                        onClick={() => {\r\n                                          const SelectedCols =\r\n                                            this.state.SelectedcolumnDefs.slice();\r\n                                          const delindex =\r\n                                            SelectedCols.findIndex(\r\n                                              element =>\r\n                                                element?.headerName ==\r\n                                                ele?.headerName\r\n                                            );\r\n\r\n                                          if (SelectedCols && delindex >= 0) {\r\n                                            const splicedElement =\r\n                                              SelectedCols.splice(delindex, 1); // Remove the element\r\n                                            // splicedElement contains the removed element, if needed\r\n\r\n                                            this.setState({\r\n                                              SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n                                            });\r\n                                          }\r\n                                          // const delindex =\r\n                                          //   SelectedCols.findIndex(\r\n                                          //     (element) =>\r\n                                          //       element?.headerName ==\r\n                                          //       ele?.headerName\r\n                                          //   );\r\n\r\n                                          // SelectedCols?.splice(delindex, 1);\r\n                                          // this.setState({\r\n                                          //   SelectedcolumnDefs: SelectedCols,\r\n                                          // });\r\n                                        }}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        size=\"25px\"\r\n                                        color=\"red\"\r\n                                        className=\"mr-1\"\r\n                                      />\r\n\r\n                                      {ele?.headerName}\r\n                                    </h5>\r\n                                  </span>\r\n                                </div>\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"updownbtn justify-content-center\">\r\n                      <div>\r\n                        <BsFillArrowUpSquareFill\r\n                          className=\"arrowassign mb-1\"\r\n                          size=\"30px\"\r\n                          onClick={this.shiftElementUp}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillArrowDownSquareFill\r\n                          onClick={this.shiftElementDown}\r\n                          className=\"arrowassign\"\r\n                          size=\"30px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button onClick={this.HandleSetVisibleField} color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default GoodDispatchList;\r\n","module.exports = __webpack_public_path__ + \"static/media/logomain.cee4d0c2.png\";"],"sourceRoot":""}