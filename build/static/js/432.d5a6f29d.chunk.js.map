{"version":3,"sources":["views/apps/freshlist/order/CreateReceipt.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","CreateReceipt","args","useState","error","PaymentType","setPaymentType","Mode","setMode","BulkImport","setBulkImport","PartyList","setPartyList","PartyId","setPartyId","UserInfo","setUserInfo","SelectedParty","setSelectedParty","AllData","setAllData","productId","availableQty","qty","price","Size","unitType","totalprice","History","useHistory","Params","useParams","useEffect","id","_Get","View_Receipt_By_Id","then","res","console","log","Product","data","partyId","_id","payload","Paymentmode","paymentMode","paymentType","Amount","amount","Date","createdAt","split","Note","note","Title","title","InstrumentNumber","instrumentNo","catch","err","userdata","JSON","parse","localStorage","getItem","CreateCustomerList","database","value","Customer","length","userInfo","submitHandler","e","preventDefault","undefined","formdata","FormData","append","_BulkUpload","Bulk_Upload_Receipt","swal","message","created_by","Number","type","_PostSave","Create_Receipt","goBack","_Put","Update_Receipt_By_Id","handleChange","target","name","className","render","history","color","size","onClick","onSubmit","lg","md","sm","required","onChange","selectedValues","selectionLimit","isObject","options","onSelect","selectedList","selectedItem","handleSelectionParty","onRemove","removedItem","index","displayValue","placeholder","files","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/432.d5a6f29d.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route, useHistory, useParams } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  SaveOrder,\r\n  CreateCustomerList,\r\n  _Get,\r\n  _Post,\r\n  _PostSave,\r\n  _Put,\r\n  _BulkUpload,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  Bulk_Upload_Receipt,\r\n  Bulk_Upload_User,\r\n  Create_Receipt,\r\n  Update_Receipt_By_Id,\r\n  View_Receipt_By_Id,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst CreateReceipt = (args) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [PaymentType, setPaymentType] = useState(\"\");\r\n  const [Mode, setMode] = useState(\"Create\");\r\n  const [BulkImport, setBulkImport] = useState(null);\r\n\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [SelectedParty, setSelectedParty] = useState({});\r\n  const [AllData, setAllData] = useState({});\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      totalprice: \"\",\r\n    },\r\n  ]);\r\n  let History = useHistory();\r\n  let Params = useParams();\r\n  const handleSelectionParty = (selectedList, selectedItem) => {\r\n    setPartyId(selectedItem?._id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let id = Params?.id;\r\n    if (id == 0) {\r\n      setMode(\"Create\");\r\n    } else {\r\n      setMode(\"Edit\");\r\n      _Get(View_Receipt_By_Id, id)\r\n        .then((res) => {\r\n          console.log(res?.Product);\r\n          let data = res?.Product;\r\n\r\n          setSelectedParty(data?.partyId);\r\n          setPartyId(data?.partyId?._id);\r\n          let payload = {\r\n            Paymentmode: data?.paymentMode,\r\n            PaymentType: data?.paymentType,\r\n            Amount: data?.amount,\r\n            Date: data?.createdAt?.split(\"T\")[0],\r\n            Note: data?.note,\r\n            Title: data?.title,\r\n            InstrumentNumber: data?.instrumentNo,\r\n          };\r\n          setPaymentType(data?.paymentType);\r\n          setAllData(payload);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    CreateCustomerList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let value = res?.Customer;\r\n        if (value?.length) {\r\n          setPartyList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (BulkImport !== null || BulkImport != undefined) {\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", BulkImport);\r\n      formdata.append(\"type\", \"Received\");\r\n\r\n      await _BulkUpload(Bulk_Upload_Receipt, formdata)\r\n        .then((res) => {\r\n          swal(`${res?.message}`);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Something Went Wrong\");\r\n        });\r\n    } else {\r\n      let id = Params?.id;\r\n      const payload = {\r\n        created_by: UserInfo?._id,\r\n        paymentType: AllData?.PaymentType,\r\n        paymentMode: AllData?.Paymentmode,\r\n        partyId: PartyId ? PartyId : null,\r\n        amount: AllData?.Amount ? Number(AllData?.Amount) : null,\r\n        instrumentNo: AllData?.InstrumentNumber\r\n          ? AllData?.InstrumentNumber\r\n          : null,\r\n        note: AllData?.Note ? AllData?.Note : null,\r\n        title: AllData?.Title ? AllData?.Title : null,\r\n        database: UserInfo?.database,\r\n        type: \"Received\",\r\n      };\r\n\r\n      if (id == 0) {\r\n        if (error) {\r\n          swal(\"Error occured while Entering Details\");\r\n        } else {\r\n          _PostSave(Create_Receipt, payload)\r\n            .then((res) => {\r\n              History.goBack();\r\n              swal(\"Added Successfully\");\r\n              console.log(res);\r\n            })\r\n            .catch((err) => {\r\n              swal(\"Somthing went Wrong\");\r\n              console.log(err);\r\n            });\r\n        }\r\n      } else {\r\n        _Put(Update_Receipt_By_Id, id, payload)\r\n          .then((res) => {\r\n            console.log(res);\r\n            swal(\"Updated Successfully\");\r\n            History.goBack();\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            swal(\"Something Went Wrong\");\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n  };\r\n  console.log(AllData);\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    setAllData({ ...AllData, [name]: value });\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">{Mode && Mode} Receipt</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <Label>Choose Paymen Mode</Label>\r\n                  <CustomInput\r\n                    required\r\n                    value={AllData?.Paymentmode}\r\n                    name=\"Paymentmode\"\r\n                    onChange={handleChange}\r\n                    type=\"select\">\r\n                    <option>--Select--</option>\r\n                    <option value=\"Cash\">Cash</option>\r\n                    <option value=\"Bank\">Bank</option>\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <Label>Choose Payment Type</Label>\r\n                  <CustomInput\r\n                    required\r\n                    value={AllData?.PaymentType}\r\n                    name=\"PaymentType\"\r\n                    onChange={(e) => {\r\n                      setPaymentType(e.target.value);\r\n                      handleChange(e);\r\n                    }}\r\n                    type=\"select\">\r\n                    <option>--Select--</option>\r\n                    <option value=\"partyPaymentReceived\">\r\n                      Party Payment Received\r\n                    </option>\r\n                    <option value=\"otherReceived\">Other</option>\r\n                  </CustomInput>\r\n                </Col>\r\n              </Row>\r\n              {PaymentType && PaymentType == \"partyPaymentReceived\" && (\r\n                <Row>\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Choose Party</Label>\r\n                      <Multiselect\r\n                        required\r\n                        selectedValues={[SelectedParty]}\r\n                        selectionLimit={1}\r\n                        isObject=\"false\"\r\n                        options={PartyList}\r\n                        onSelect={(selectedList, selectedItem) =>\r\n                          handleSelectionParty(selectedList, selectedItem)\r\n                        }\r\n                        onRemove={onRemove1}\r\n                        displayValue=\"OwnerName\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  {AllData?.Paymentmode && AllData?.Paymentmode == \"Bank\" && (\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Instrument/Trx Number *</Label>\r\n                      <Input\r\n                        required\r\n                        placeholder=\"Enter Instrument Number\"\r\n                        type=\"text\"\r\n                        value={AllData?.InstrumentNumber}\r\n                        name=\"InstrumentNumber\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                  )}\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label>Amount</Label>\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Enter Amount\"\r\n                      type=\"number\"\r\n                      value={AllData?.Amount}\r\n                      name=\"Amount\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label>Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      value={AllData?.Date}\r\n                      name=\"Date\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label>Note :</Label>\r\n                    <textarea\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Notes ...\"\r\n                      className=\"form-control\"\r\n                      value={AllData?.Note}\r\n                      name=\"Note\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n              {PaymentType && PaymentType == \"otherReceived\" && (\r\n                <>\r\n                  <Row>\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Title</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Title \"\r\n                        name=\"Title\"\r\n                        value={AllData?.Title}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                    {AllData?.Paymentmode && AllData?.Paymentmode == \"Bank\" && (\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <Label>Instrument/Trx Number *</Label>\r\n                        <Input\r\n                          required\r\n                          placeholder=\"Enter Instrument Number\"\r\n                          type=\"text\"\r\n                          value={AllData?.InstrumentNumber}\r\n                          name=\"InstrumentNumber\"\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                    )}\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Amount</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Amount\"\r\n                        value={AllData?.Amount}\r\n                        name=\"Amount\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        value={AllData?.Date}\r\n                        name=\"Date\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Note :</Label>\r\n                      <textarea\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Note...\"\r\n                        className=\"form-control\"\r\n                        value={AllData?.Note}\r\n                        name=\"Note\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n\r\n              <hr />\r\n              <Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <Label>OR</Label>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Bulk Import</Label>\r\n\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"file\"\r\n                      placeholder=\"\"\r\n                      name=\"BulkImport\"\r\n                      onChange={(e) => {\r\n                        setBulkImport(e.target.files[0]);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateReceipt;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}