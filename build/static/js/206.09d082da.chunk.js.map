{"version":3,"sources":["views/forms/form-elements/datepicker/Timepicker.js","views/forms/form-elements/datepicker/Datepickers.js","views/forms/form-elements/datepicker/Pickers.js","views/apps/freshlist/accounts/CreateStockTrx.js"],"names":["Timepickers","state","basic","Date","timeLimit","preloaded","this","className","md","sm","value","options","enableTime","noCalendar","dateFormat","onChange","date","setState","minTime","maxTime","defaultDate","React","Component","Datepickers","basicPicker","dateTimePicker","humanFriendly","minMax","disabledRange","multipleDates","rangePicker","weekNum","inlinePicker","Card","CardHeader","CardTitle","CardBody","Row","Col","minDate","altInput","altFormat","data-enable-time","maxDate","fp_incr","disable","from","to","mode","preloadRange","weekNumbers","inline","Pickers","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Timepicker","GrandTotal","SelectedITems","SelectedSize","CreateTarget","args","useState","setIndex","StockTrxdate","setStockTrxDate","error","ProductList","setProductList","ProductWTWList","setProductWTWList","WareHouseone","setWareHouseone","WareHousetwo","setWareHousetwo","TypeOfTrx","setTypeOfTrx","grandTotalAmt","setGrandTotalAmt","UnitList","setUnitList","setUserInfo","WareHouselist","setWarehouseList","product","productId","AvailaleQty","availableQty","transferQty","price","totalprice","Size","unitType","stockTrxDate","targetEndDate","discount","Shipping","tax","grandTotal","setProduct","handleProductChangeProduct","e","index","avalaibleSize","Number","target","console","log","name","list","includes","available","Askingfor","swal","amt","length","map","val","reduce","a","b","handleProductChangeProductone","handleRemoveSelected","selectedList","selectedItem","splice","ele","i","qty","Product_MRP","indextotal","handleRemoveSelectedone","unitQty","handleSelectionone","push","prevProductList","updatedProductList","updatedProduct","primaryUnit","useEffect","userData","JSON","parse","localStorage","getItem","CreateAccountList","_id","database","then","res","adminDetails","filter","rolename","roleName","catch","err","UnitListView","Unit","ProductListView","Product","AllProduct","addProductType","userInfo","addMoreProduct","removeMoreProduct","newFormValues","lg","required","style","marginRight","type","render","history","cursor","color","onClick","goBack","onSubmit","preventDefault","userdata","payload","productItems","totalPrice","currentStock","warehouseToId","warehouseFromId","stockTransferDate","transferStatus","created_by","WarehousetoWareHouseTrx","selectionLimit","isObject","onSelect","myproduct","Product_Title","MIN_stockalert","onRemove","removedItem","displayValue","placeholder","key","handleSelection","min","disabled","readOnly","Ripple","StocktrxFtoW","handleSelectionProduct"],"mappings":"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","file":"static/js/206.09d082da.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\"\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Timepickers extends React.Component{\r\n  state ={\r\n    basic : new Date(),\r\n    timeLimit : new Date(),\r\n    preloaded : new Date()\r\n  }\r\n\r\n  render(){\r\n    let { basic, timeLimit } = this.state\r\n    return(\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Timepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic 24hrs</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basic}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ basic : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Limit</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={timeLimit}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  minTime: \"16:00\",\r\n                  maxTime: \"22:30\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ timeLimit : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  defaultDate: \"13:45\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ preloaded : date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timepickers","import React from \"react\";\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\n\r\nclass Datepickers extends React.Component {\r\n  state = {\r\n    basicPicker: new Date(),\r\n    dateTimePicker: new Date(),\r\n    humanFriendly: new Date(),\r\n    minMax: new Date(),\r\n    disabledRange: new Date(),\r\n    multipleDates: new Date(),\r\n    rangePicker: new Date(),\r\n    weekNum: new Date(),\r\n    inlinePicker: new Date(),\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      basicPicker,\r\n      dateTimePicker,\r\n      humanFriendly,\r\n      minMax,\r\n      disabledRange,\r\n      multipleDates,\r\n      rangePicker,\r\n      weekNum,\r\n      inlinePicker,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Datepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basicPicker}\r\n                onChange={(date) => {\r\n                  this.setState({ basicPicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Date & Time</h5>\r\n              <Flatpickr\r\n                options={{\r\n                  minDate: \"today\",\r\n                  altInput: true,\r\n                  // altFormat: \"j-m-Y H:i:S\",\r\n                  altFormat: \"m-j-Y H:i:S\",\r\n                }}\r\n                className=\"form-control\"\r\n                data-enable-time\r\n                value={dateTimePicker}\r\n                onChange={(date) => {\r\n                  this.setState({ dateTimePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Human Friendly</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={humanFriendly}\r\n                options={{\r\n                  altInput: true,\r\n                  altFormat: \"F j, Y\",\r\n                  dateFormat: \"Y-m-d\",\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ humanFriendly: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Min & Max Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={minMax}\r\n                options={{ minDate: \"today\", maxDate: new Date().fp_incr(14) }}\r\n                onChange={(date) => {\r\n                  this.setState({ minMax: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Disabled Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={disabledRange}\r\n                options={{\r\n                  dateFormat: \"Y-m-d\",\r\n                  disable: [\r\n                    {\r\n                      from: \"2020-02-01\",\r\n                      to: \"2020-02-10\",\r\n                    },\r\n                    {\r\n                      from: \"2020-02-20\",\r\n                      to: \"2020-02-25\",\r\n                    },\r\n                  ],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ disabledRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Multiple Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={multipleDates}\r\n                options={{ mode: \"multiple\" }}\r\n                onChange={(date) => {\r\n                  this.setState({ multipleDates: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Range</h5>\r\n              <Flatpickr\r\n                value={rangePicker}\r\n                className=\"form-control\"\r\n                options={{ mode: \"range\" }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  mode: \"range\",\r\n                  defaultDate: [\"2020-02-01\", \"2020-02-15\"],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ preloadRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-md-0 mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Week Numbers</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={weekNum}\r\n                options={{ weekNumbers: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ weekNum: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Inline</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={inlinePicker}\r\n                options={{ inline: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ inlinePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datepickers;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Datepickers from \"./Datepickers\";\r\nimport Timepickers from \"./Timepicker\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\";\r\n\r\nclass Pickers extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Date & Time Picker\"\r\n          breadCrumbParent=\"Form Elements\"\r\n          breadCrumbActive=\"Date & Time Picker\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Datepickers />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Timepickers />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Pickers;\r\n// import { useState, useRef } from \"react\";\r\n// import Tesseract from \"tesseract.js\";\r\n\r\n// function anuj() {\r\n//   const [imagePath, setImagePath] = useState(\"\");\r\n//   const [text, setText] = useState(\"aa\");\r\n\r\n//   const handleChange = (event) => {\r\n//     setImage(URL.createObjectURL(event.target.files[0]));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <main className=\"App-main\">\r\n//         <h3>Actual image uploaded</h3>\r\n//         {/* <img src={imagePath} className=\"App-logo\" alt=\"logo\" /> */}\r\n\r\n//         <h3>Extracted text</h3>\r\n//         <div className=\"text-box\">\r\n//           <p> {text} </p>\r\n//         </div>\r\n//         <input type=\"file\" onChange={handleChange} />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default anuj;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { BsFillChatDotsFill, BsWhatsapp } from \"react-icons/bs\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { FiSend } from \"react-icons/fi\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  CreatePartyList,\r\n  Create_Sales_personList,\r\n  Create_Targetsave,\r\n  CreateWarehouseList,\r\n  UnitListView,\r\n  StocktrxFtoW,\r\n  WarehousetoWareHouseTrx,\r\n  Warehouse_Temporarlylist,\r\n  CreateAccountList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport Timepickers from \"../../../forms/form-elements/datepicker/Timepicker\";\r\nimport Pickers from \"../../../forms/form-elements/datepicker/Pickers\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst CreateTarget = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [StockTrxdate, setStockTrxDate] = useState(\"\");\r\n  const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [ProductWTWList, setProductWTWList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [WareHouseone, setWareHouseone] = useState([]);\r\n  const [WareHousetwo, setWareHousetwo] = useState([]);\r\n  const [TypeOfTrx, setTypeOfTrx] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [items, setItems] = useState(\"\");\r\n  const [audit, setAudit] = useState(false);\r\n  const [WareHouselist, setWarehouseList] = useState([]);\r\n  const toggle = (item) => {\r\n    setItems(item);\r\n    setModal(!modal);\r\n  };\r\n  const audittoggle = () => {\r\n    setAudit(!audit);\r\n    // setModal(!modal);\r\n  };\r\n  const handleopentoggle = (iteam) => {\r\n    toggle(iteam);\r\n  };\r\n  const handleHistory = () => {\r\n    audittoggle();\r\n  };\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      AvailaleQty: null,\r\n      availableQty: \"\",\r\n      transferQty: 1,\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      stockTrxDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index, avalaibleSize) => {\r\n    if (avalaibleSize >= Number(e.target.value)) {\r\n      setIndex(index);\r\n      console.log(product);\r\n\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      if (name.includes(\"transferQty\")) {\r\n        // list[index][\"Size\"] = Number(value);\r\n        let available = Number(list[index][\"AvailaleQty\"]);\r\n        let Askingfor = Number(value);\r\n        if (available >= Askingfor) {\r\n          list[index][name] = Askingfor;\r\n        } else {\r\n          swal(\"Can not Transfer More then Stock\");\r\n          list[index][name] = available - 1;\r\n        }\r\n      } else {\r\n        list[index][name] = value;\r\n      }\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map((val) => {\r\n          GrandTotal[index] = val.Size * val.price * val.transferQty;\r\n          list[index][\"totalprice\"] = val.Size * val.price * val.transferQty;\r\n          return val.Size * val.price * val.transferQty;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      // console.log(list)\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const handleProductChangeProductone = (e, index) => {\r\n    setIndex(index);\r\n    console.log(product);\r\n    debugger;\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    if (name.includes(\"transferQty\")) {\r\n      list[index][name] = Number(value);\r\n    } else {\r\n      list[index][name] = value;\r\n    }\r\n    console.log(GrandTotal);\r\n\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        GrandTotal[index] = val.Size * val.price * val.transferQty;\r\n        list[index][\"totalprice\"] = val.Size * val.price * val.transferQty;\r\n        return val.Size * val.price * val.transferQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n      console.log(\"GrandTotal\", amt);\r\n    }\r\n    // console.log(list)\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(selectedItem); // removed item\r\n    // console.log(product);\r\n    // console.log(index);\r\n    // console.log(SelectedITems);\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleRemoveSelectedone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.Size * ele?.price * SelectedSize[i]?.unitQty);\r\n      let indextotal = ele?.Size * SelectedSize[i]?.unitQty;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    // product[index][\"AvailaleQty\"] = myproduct?.Size;\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?.productId?._id;\r\n      updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionProduct = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem?.unitQty; // Update the price of the copied product\r\n      updatedProduct.unitType = selectedItem?.primaryUnit;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty);\r\n        let indextotal =\r\n          ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // handleInputChange;\r\n  // useEffect(() => {\r\n  //   console.log(window);\r\n  //   console.log(product);\r\n  //   console.log(GrandTotal);\r\n  //   console.log(Salesperson);\r\n  //   console.log(StockTrxdate);\r\n  //   console.log(targetEndDate);\r\n  // }, [product, targetEndDate]);\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    CreateAccountList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        let value = res?.adminDetails?.filter(\r\n          (ele) => ele?.rolename?.roleName == \"WareHouse Incharge\"\r\n        );\r\n        console.log(value);\r\n        if (value.length) {\r\n          setWarehouseList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // CreateWarehouseList(userData._id)\r\n    //   .then((res) => {\r\n    //     console.log(res?.Warehouse);\r\n    //     setWarehouseList(res?.Warehouse);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    UnitListView(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        console.log(res?.Unit);\r\n        setUnitList(res?.Unit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    ProductListView(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        console.log(res.Product);\r\n        let AllProduct = res?.Product?.filter(\r\n          (ele) => ele?.addProductType == \"Product\"\r\n        );\r\n        debugger;\r\n        setProductList(AllProduct);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n    // CreateOrder_ID()\r\n    //   .then((res) => {\r\n    //     const lastElement = res?.Order[res?.Order?.length - 1].id;\r\n    //     const prefix = lastElement?.substring(0, 5);\r\n    //     const number = parseInt(lastElement?.match(/\\d+$/)[0], 10) + 1;\r\n    //     const concatenatedString = prefix + number;\r\n    //     setOrderID(concatenatedString);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    // CreateOrder_ViewData()\r\n    //   .then((res) => {\r\n    //     const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n    //     setCreatAccountView(JSON.parse(jsonData));\r\n    //     setStatusDropDown(\r\n    //       JSON.parse(jsonData)?.createOrder.CurrentStatus?.MyDropDown?.dropdown\r\n    //     );\r\n    //     setdropdownValue(JSON.parse(jsonData));\r\n    //     setPartDetails(JSON.parse(jsonData)?.createOrder.PartDetails);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        AvailaleQty: null,\r\n        availableQty: \"\",\r\n        transferQty: 1, //\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Size: \"\",\r\n        unitType: \"\",\r\n        stockTrxDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n  // let handlePartChange = (i, e) => {\r\n  //   let newFormValues = [...part];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setPart(newFormValues);\r\n  // };\r\n\r\n  const WareHousetoWareHouse = (e) => {\r\n    e.preventDefault();\r\n    // body: warehouse, productId, Size, unitType, transferQty, price, totalPrice;\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        unitType: ele?.unitType,\r\n        price: ele?.price,\r\n        Size: ele?.Size,\r\n        transferQty: ele?.transferQty,\r\n        totalPrice: ele?.totalprice,\r\n        currentStock: ele?.transferQty * ele?.Size,\r\n      };\r\n    });\r\n    let payload = {\r\n      productItems: Allproduct,\r\n      warehouseToId: WareHousetwo[0]?._id,\r\n      warehouseFromId: WareHouseone[0]?._id,\r\n      stockTransferDate: StockTrxdate,\r\n      grandTotal: grandTotalAmt,\r\n      transferStatus: \"InProcess\",\r\n      created_by: userdata?._id,\r\n    };\r\n    console.log(payload);\r\n    WarehousetoWareHouseTrx(payload)\r\n      .then((res) => {\r\n        //   window.location.reload();\r\n        // history.goBack();\r\n        swal(\"Stock transerffered is Initiated\");\r\n\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        unitType: ele?.unitType,\r\n        price: ele?.price,\r\n        Size: ele?.Size,\r\n        transferQty: ele?.transferQty,\r\n        totalPrice: ele?.totalprice,\r\n        currentStock: ele?.transferQty * ele?.Size,\r\n      };\r\n    });\r\n    let payload = {\r\n      productItems: Allproduct,\r\n      warehouseToId: WareHouseone[0]?._id,\r\n      stockTransferDate: StockTrxdate,\r\n      grandTotal: grandTotalAmt,\r\n      transferStatus: \"InProcess\",\r\n      created_by: userdata?._id,\r\n    };\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      StocktrxFtoW(payload)\r\n        .then((res) => {\r\n          // if (res.status) {\r\n          //   setFormData({});\r\n          //   window.location.reload();\r\n          swal(\"Stock Assigned to WareHouse\");\r\n          // }\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n    setWareHouseone(selectedList);\r\n    // setProductList(selectedList[0].productItems);\r\n  };\r\n  const onSelectone = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n\r\n    setWareHouseone(selectedList);\r\n    debugger;\r\n    // const list = [...product];\r\n    let MySelectedwarehouseProduct = selectedList[0].productItems?.map(\r\n      (ele, i) => {\r\n        let myproduct = ele?.productId;\r\n        ele[\"Product_Title\"] = myproduct?.Product_Title;\r\n        ele[\"Product_id\"] = myproduct?._id;\r\n        ele[\"Product_MRP\"] = myproduct?.Product_MRP;\r\n        ele[\"discount\"] = myproduct?.discount;\r\n        ele[\"transferQty\"] = myproduct?.transferQty;\r\n        ele[\"MIN_stockalert\"] = myproduct?.MIN_stockalert;\r\n      }\r\n    );\r\n\r\n    console.log(selectedList[0]?.productItems);\r\n\r\n    setProductWTWList(selectedList[0]?.productItems);\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onRemoveone = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onSelect2 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n    setWareHousetwo(selectedList);\r\n  };\r\n  const onRemove2 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col lg=\"8\" md=\"8\" sm=\"8\" className=\"mb-2 mt-1\">\r\n            <div>\r\n              <h1 className=\"\">Create Stock Transfer</h1>\r\n              <div className=\"choose\">\r\n                <h4 className=\"mb-1\">Choose Type of Stock trx</h4>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => setTypeOfTrx(e.target.value)}\r\n                  // onChange={(e) => {\r\n                  //   setFormData({\r\n                  //     ...formData,\r\n                  //     [\"status\"]: e.target.value,\r\n                  //   });\r\n                  // }}\r\n                >\r\n                  <input\r\n                    required\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Warehousetowarehouse\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>\r\n                    Warehouse to Warehouse\r\n                  </span>\r\n\r\n                  <input\r\n                    required\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Factorytowarehourse\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>\r\n                    Factory to Warehourse\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"float-right\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"float-right mr-1\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.goBack()}>\r\n                    {\" \"}\r\n                    Back\r\n                    {/* <FaPlus size={15} /> Create User */}\r\n                  </Button>\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          {TypeOfTrx && TypeOfTrx == \"Warehousetowarehouse\" && (\r\n            <Form className=\"mx-1\" onSubmit={WareHousetoWareHouse}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Warehouse(from where) *</Label>\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={WareHouselist} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelectone} // Function will trigger on select event\r\n                      onRemove={onRemoveone} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Warehouse (to be Transfer) * </Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={WareHouselist} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelect2} // Function will trigger on select event\r\n                      onRemove={onRemove2} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Stock Transfer date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"targetEndDate\"\r\n                      placeholder=\"Date of Delivery\"\r\n                      value={StockTrxdate}\r\n                      onChange={(e) => setStockTrxDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Product Name</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          // showCheckbox=\"true\"\r\n                          isObject=\"true\"\r\n                          options={ProductWTWList}\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            handleRemoveSelected(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            );\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                        {/* <CustomInput\r\n                          name=\"productId\"\r\n                          onChange={(e) => handleProductChangeProduct(e, index)}\r\n                          type=\"select\">\r\n                          <option>--Select--</option>\r\n                          {ProductWTWList &&\r\n                            ProductWTWList?.map((ele, i) => {\r\n                              return (\r\n                                <option value={ele?.productId?._id}>\r\n                                  {ele?.productId.Product_Title}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                        </CustomInput> */}\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Size</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          // showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionone(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            handleRemoveSelectedone(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            );\r\n                          }}\r\n                          displayValue=\"primaryUnit\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Quantity To be Transfer</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          min={0}\r\n                          name=\"transferQty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          value={product?.transferQty}\r\n                          onChange={(e) =>\r\n                            handleProductChangeProduct(\r\n                              e,\r\n                              index,\r\n                              product?.AvailaleQty\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Available Qty</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          min={0}\r\n                          name=\"AvailaleQty\"\r\n                          placeholder=\"Available Qty\"\r\n                          value={product?.AvailaleQty}\r\n                          // onChange={(e) => handleProductChangeProduct(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={\r\n                            product.Size * product.price * product.transferQty\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Badge\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            onClick={() => removeMoreProduct(index)}>\r\n                            - Remove\r\n                          </Badge>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Badge\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addMoreProduct()}>\r\n                          + Add\r\n                        </Badge>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total :{\" \"}\r\n                      <strong>\r\n                        {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                          ? 0\r\n                          : grandTotalAmt}{\" \"}\r\n                      </strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          )}\r\n          {TypeOfTrx && TypeOfTrx == \"Factorytowarehourse\" && (\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Warehouse </Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={WareHouselist} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelect1} // Function will trigger on select event\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Stock Transfer date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"targetEndDate\"\r\n                      placeholder=\"Date of Delivery\"\r\n                      value={StockTrxdate}\r\n                      onChange={(e) => setStockTrxDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Product Name</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          // showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionProduct(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            handleRemoveSelected(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            );\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Size</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          // showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionone(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            handleRemoveSelectedone(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            );\r\n                          }}\r\n                          displayValue=\"primaryUnit\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Quantity To be Transfer</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          min={0}\r\n                          name=\"transferQty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          value={product?.transferQty}\r\n                          onChange={(e) =>\r\n                            handleProductChangeProductone(e, index)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={\r\n                            product.Size * product.price * product.transferQty\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            onClick={() => removeMoreProduct(index)}>\r\n                            - Remove\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addMoreProduct()}>\r\n                          + Add\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Discount</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"discount\"\r\n                          readOnly\r\n                          placeholder=\"Dissct\"\r\n                          value={product.discount}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n                {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Shipping Cost</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"Shipcst\"\r\n                          readOnly\r\n                          placeholder=\"Shipcst\"\r\n                          value={product.Shipping}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n                {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Tax</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"tax\"\r\n                          readOnly\r\n                          placeholder=\"Tax\"\r\n                          value={product.tax}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total :{\" \"}\r\n                      <stron>\r\n                        {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                          ? 0\r\n                          : grandTotalAmt}{\" \"}\r\n                      </stron>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateTarget;\r\n"],"sourceRoot":""}