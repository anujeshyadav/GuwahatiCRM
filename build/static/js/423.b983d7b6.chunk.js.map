{"version":3,"sources":["views/apps/freshlist/order/PlaceOrder.js"],"names":["GrandTotal","SelectedITems","PlaceOrder","args","useState","setIndex","index","error","ProductList","setProductList","UnitList","PartyList","setPartyList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","product","productId","availableQty","qty","price","totalprice","unitQty","setProduct","handleProductChangeProduct","e","availableSize","target","value","name","list","amt","length","map","val","console","log","reduce","a","b","handleUnit","unt","useEffect","userId","JSON","parse","localStorage","getItem","_id","ProductListView","then","res","Product","catch","err","CreatePartyList","Party","userInfo","addMoreProduct","removeMoreProduct","i","newFormValues","splice","onRemove1","selectedList","removedItem","className","onSubmit","preventDefault","fullname","firstName","lastName","ObjOrder","fullName","address","Address","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","swal","SavePlaceOrder","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","prevProductList","updatedProductList","updatedProduct","partyId","handleSelectionParty","onRemove","displayValue","type","onChange","key","push","Product_MRP","Size","myarr","ele","indextotal","handleSelection","placeholder","autocomplete","primaryUnit","readOnly","color","onClick","Ripple"],"mappings":"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","file":"static/js/423.b983d7b6.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SavePlaceOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst PlaceOrder = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      unitQty: \"\",\r\n      // partyId: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index, availableSize) => {\r\n    if (availableSize >= e.target.value) {\r\n      setIndex(index);\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      list[index][name] = value;\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map(val => {\r\n          console.log(val.qty * val.price);\r\n          list[index][\"totalprice\"] = val.qty * val.price;\r\n          return val.qty * val.price;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      console.log(list);\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n      console.log(GrandTotal);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] };\r\n      updatedProduct.partyId = selectedItem?._id;\r\n      updatedProductList[index] = updatedProduct;\r\n      return updatedProductList;\r\n    });\r\n  };\r\n  const handleUnit = (e, index) => {\r\n    let unt = [...product];\r\n    unt[index].unitQty = e.target.value;\r\n    console.log(unt);\r\n    setProduct(unt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      console.log(myarr);\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(product);\r\n    console.log(GrandTotal);\r\n  }, [product, GrandTotal]);\r\n\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    ProductListView(userId)\r\n      .then(res => {\r\n        console.log(res.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreatePartyList()\r\n      .then(res => {\r\n        console.log(res.Party);\r\n        setPartyList(res.Party);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\",\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        // DateofDelivery: \"\",\r\n        // partyId: \"\",\r\n        // discount: \"\",\r\n        // Shipping: \"\",\r\n        // tax: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(\"Final \", product);\r\n    let fullname = UserInfo.firstName + \" \" + UserInfo?.lastName;\r\n    const ObjOrder = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.Address,\r\n      grandTotal: grandTotalAmt,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n\r\n      orderItems: product,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SavePlaceOrder(ObjOrder)\r\n        .then(res => {\r\n          console.log(res);\r\n          // if (res.status) {\r\n          //   setFormData({});\r\n          //   window.location.reload();\r\n          swal(\"Order Place Successfully\");\r\n          // }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Place Order</h1>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={e => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          // showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          value={product?.availableQty}\r\n                          onChange={e => handleProductChangeProduct(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Required Qty</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleProductChangeProduct(\r\n                              e,\r\n                              index,\r\n                              product?.availableQty\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <Label>Choose Unit</Label>\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"Select Type\"\r\n                        name=\"type\"\r\n                        value={product.unitQty}\r\n                        onChange={e => handleUnit(e, index)}\r\n                      >\r\n                        <option value=\"None\">None</option>\r\n                        {UnitList?.map(val => {\r\n                          return (\r\n                            <option value={val.primaryUnit}>\r\n                              {val.primaryUnit}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </CustomInput>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.price * product?.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          SubTotal : <strong>{grandTotalAmt}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost : <strong>RS 50</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS 25</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Discount : <strong>RS 5</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        {\" \"}\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :{\" \"}\r\n                          <strong>{grandTotalAmt + 50 + 25 + 5}</strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PlaceOrder;\r\n"],"sourceRoot":""}