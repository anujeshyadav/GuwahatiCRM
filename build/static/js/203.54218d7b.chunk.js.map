{"version":3,"sources":["views/forms/form-elements/datepicker/Timepicker.js","views/forms/form-elements/datepicker/Datepickers.js","views/forms/form-elements/datepicker/Pickers.js","views/apps/freshlist/accounts/EditTarget.js"],"names":["Timepickers","state","basic","Date","timeLimit","preloaded","this","className","md","sm","value","options","enableTime","noCalendar","dateFormat","onChange","date","setState","minTime","maxTime","defaultDate","React","Component","Datepickers","basicPicker","dateTimePicker","humanFriendly","minMax","disabledRange","multipleDates","rangePicker","weekNum","inlinePicker","Card","CardHeader","CardTitle","CardBody","Row","Col","minDate","altInput","altFormat","data-enable-time","maxDate","fp_incr","disable","from","to","mode","preloadRange","weekNumbers","inline","Pickers","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Timepicker","GrandTotal","SelectedITems","EditTarget","args","useState","setIndex","targetStartDate","settargetStartDate","targetEndDate","settargetEndDate","error","ProductList","setProductList","SelectedPartyList","setSelectedPartyList","Salesperson","setSalesperson","grandTotalAmt","setGrandTotalAmt","setEditdata","setUserInfo","UserList","setUserList","AllProductList","setAllProductList","setSalesPersonList","location","useParams","useLocation","product","productId","availableQty","qty","price","totalprice","Salespersonname","targetstartDate","discount","Shipping","tax","grandTotal","setProduct","handleProductChangeProduct","e","index","target","name","list","console","log","amt","length","map","val","reduce","a","b","handleRemoveSelected","selectedList","selectedItem","splice","ele","i","Product_MRP","indextotal","handleSelection","push","prevProductList","updatedProductList","updatedProduct","_id","useEffect","localStorage","setItem","startDate","split","endDate","Selectedproduct","products","qtyAssign","totalPrice","mydata","getItem","userdata","JSON","parse","CreateCustomerList","database","then","res","data","partyId","selectedParty","Customer","filter","catch","err","Create_Sales_personList","SalesPerson","ProductListView","Product","userInfo","addMoreProduct","removeMoreProduct","newFormValues","render","history","style","cursor","color","onClick","goBack","onSubmit","preventDefault","Allproduct","payload","salesPersonId","swal","Create_Targetsave","lg","required","selectionLimit","isObject","selectedValues","onSelect","onRemove","removedItem","displayValue","type","placeholder","SelectedProduct","key","min","readOnly","Ripple"],"mappings":"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","file":"static/js/203.54218d7b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\"\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Timepickers extends React.Component{\r\n  state ={\r\n    basic : new Date(),\r\n    timeLimit : new Date(),\r\n    preloaded : new Date()\r\n  }\r\n\r\n  render(){\r\n    let { basic, timeLimit } = this.state\r\n    return(\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Timepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic 24hrs</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basic}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ basic : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Limit</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={timeLimit}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  minTime: \"16:00\",\r\n                  maxTime: \"22:30\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ timeLimit : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  defaultDate: \"13:45\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ preloaded : date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timepickers","import React from \"react\";\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\n\r\nclass Datepickers extends React.Component {\r\n  state = {\r\n    basicPicker: new Date(),\r\n    dateTimePicker: new Date(),\r\n    humanFriendly: new Date(),\r\n    minMax: new Date(),\r\n    disabledRange: new Date(),\r\n    multipleDates: new Date(),\r\n    rangePicker: new Date(),\r\n    weekNum: new Date(),\r\n    inlinePicker: new Date(),\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      basicPicker,\r\n      dateTimePicker,\r\n      humanFriendly,\r\n      minMax,\r\n      disabledRange,\r\n      multipleDates,\r\n      rangePicker,\r\n      weekNum,\r\n      inlinePicker,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Datepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basicPicker}\r\n                onChange={(date) => {\r\n                  this.setState({ basicPicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Date & Time</h5>\r\n              <Flatpickr\r\n                options={{\r\n                  minDate: \"today\",\r\n                  altInput: true,\r\n                  // altFormat: \"j-m-Y H:i:S\",\r\n                  altFormat: \"m-j-Y H:i:S\",\r\n                }}\r\n                className=\"form-control\"\r\n                data-enable-time\r\n                value={dateTimePicker}\r\n                onChange={(date) => {\r\n                  this.setState({ dateTimePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Human Friendly</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={humanFriendly}\r\n                options={{\r\n                  altInput: true,\r\n                  altFormat: \"F j, Y\",\r\n                  dateFormat: \"Y-m-d\",\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ humanFriendly: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Min & Max Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={minMax}\r\n                options={{ minDate: \"today\", maxDate: new Date().fp_incr(14) }}\r\n                onChange={(date) => {\r\n                  this.setState({ minMax: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Disabled Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={disabledRange}\r\n                options={{\r\n                  dateFormat: \"Y-m-d\",\r\n                  disable: [\r\n                    {\r\n                      from: \"2020-02-01\",\r\n                      to: \"2020-02-10\",\r\n                    },\r\n                    {\r\n                      from: \"2020-02-20\",\r\n                      to: \"2020-02-25\",\r\n                    },\r\n                  ],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ disabledRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Multiple Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={multipleDates}\r\n                options={{ mode: \"multiple\" }}\r\n                onChange={(date) => {\r\n                  this.setState({ multipleDates: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Range</h5>\r\n              <Flatpickr\r\n                value={rangePicker}\r\n                className=\"form-control\"\r\n                options={{ mode: \"range\" }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  mode: \"range\",\r\n                  defaultDate: [\"2020-02-01\", \"2020-02-15\"],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ preloadRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-md-0 mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Week Numbers</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={weekNum}\r\n                options={{ weekNumbers: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ weekNum: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Inline</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={inlinePicker}\r\n                options={{ inline: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ inlinePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datepickers;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Datepickers from \"./Datepickers\";\r\nimport Timepickers from \"./Timepicker\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\";\r\n\r\nclass Pickers extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Date & Time Picker\"\r\n          breadCrumbParent=\"Form Elements\"\r\n          breadCrumbActive=\"Date & Time Picker\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Datepickers />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Timepickers />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Pickers;\r\n// import { useState, useRef } from \"react\";\r\n// import Tesseract from \"tesseract.js\";\r\n\r\n// function anuj() {\r\n//   const [imagePath, setImagePath] = useState(\"\");\r\n//   const [text, setText] = useState(\"aa\");\r\n\r\n//   const handleChange = (event) => {\r\n//     setImage(URL.createObjectURL(event.target.files[0]));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <main className=\"App-main\">\r\n//         <h3>Actual image uploaded</h3>\r\n//         {/* <img src={imagePath} className=\"App-logo\" alt=\"logo\" /> */}\r\n\r\n//         <h3>Extracted text</h3>\r\n//         <div className=\"text-box\">\r\n//           <p> {text} </p>\r\n//         </div>\r\n//         <input type=\"file\" onChange={handleChange} />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default anuj;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { BsFillChatDotsFill, BsWhatsapp } from \"react-icons/bs\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { FiSend } from \"react-icons/fi\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  CreateOrder_ViewData,\r\n  CommentOrder,\r\n  CreateOrder_ID,\r\n  CommentProductWiki,\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  Create_Sales_personList,\r\n  Create_Targetsave,\r\n  CreateCustomerList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport Timepickers from \"../../../forms/form-elements/datepicker/Timepicker\";\r\nimport Pickers from \"../../../forms/form-elements/datepicker/Pickers\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet IndividualIndex = [];\r\nconst EditTarget = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [targetStartDate, settargetStartDate] = useState(\"\");\r\n  const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [SelectedPartyList, setSelectedPartyList] = useState([]);\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [Editdata, setEditdata] = useState({});\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [UserList, setUserList] = useState([]);\r\n  const [AllProductList, setAllProductList] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [items, setItems] = useState(\"\");\r\n  const [audit, setAudit] = useState(false);\r\n  const [SalesPersonList, setSalesPersonList] = useState([]);\r\n  const Params = useParams();\r\n  const location = useLocation();\r\n  const toggle = (item) => {\r\n    setItems(item);\r\n    setModal(!modal);\r\n  };\r\n  const audittoggle = () => {\r\n    setAudit(!audit);\r\n    // setModal(!modal);\r\n  };\r\n  const handleopentoggle = (iteam) => {\r\n    toggle(iteam);\r\n  };\r\n  const handleHistory = () => {\r\n    audittoggle();\r\n  };\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\", //\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1, //\r\n      price: \"\", //\r\n      totalprice: \"\", //\r\n      Salespersonname: \"\",\r\n      targetstartDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index) => {\r\n    // product.price * product?.qty\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n    console.log(GrandTotal);\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        console.log(val.qty * val.price);\r\n        GrandTotal[index] = val.qty * val.price;\r\n\r\n        list[index][\"totalprice\"] = val.qty * val.price;\r\n        return val.qty * val.price;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n      console.log(\"GrandTotal\", amt);\r\n    }\r\n    // console.log(list)\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt);\r\n    // setAmount(amt);\r\n  };\r\n\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(selectedItem); // removed item\r\n    // console.log(product);\r\n    // console.log(index);\r\n    // console.log(SelectedITems);\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      // updatedProduct.grandTotal = Quantity[index]*selectedItem.Product_MRP;\r\n      // setGrandTotalAmt\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    product.map((value) => console.log(value.totalprice));\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location?.state) {\r\n      localStorage.setItem(\"EditoneProduct\", location?.state);\r\n      setEditdata(location?.state);\r\n      settargetStartDate(location?.state?.startDate?.split(\"T\")[0]);\r\n      settargetEndDate(location?.state?.endDate?.split(\"T\")[0]);\r\n      let Selectedproduct = location?.state?.products;\r\n      let products = [];\r\n      if (Selectedproduct?.length) {\r\n        products = Selectedproduct?.map((ele) => {\r\n          return {\r\n            ...ele?.productId,\r\n            qty: ele?.qtyAssign,\r\n            totalPrice: ele?.totalPrice,\r\n            price: ele?.totalPrice,\r\n          };\r\n        });\r\n      }\r\n      setAllProductList(products);\r\n      // setProduct(products);\r\n      setGrandTotalAmt(location?.state?.grandTotal);\r\n    } else {\r\n      let mydata = localStorage.getItem(\"EditoneProduct\");\r\n      setEditdata(mydata);\r\n      settargetStartDate(mydata?.startDate?.split(\"T\")[0]);\r\n      settargetEndDate(mydata?.endDate?.split(\"T\")[0]);\r\n      let Selectedproduct = mydata?.products;\r\n      let products = [];\r\n\r\n      if (Selectedproduct?.length) {\r\n        products = Selectedproduct?.map((ele) => {\r\n          return {\r\n            ...ele?.productId,\r\n            qty: ele?.qtyAssign,\r\n            totalPrice: ele?.totalPrice,\r\n            price: ele?.price,\r\n          };\r\n        });\r\n      }\r\n      setAllProductList(products);\r\n      setGrandTotalAmt(mydata?.grandTotal);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    CreateCustomerList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let data = location?.state?.partyId?._id;\r\n        let selectedParty = res?.Customer?.filter((ele) => ele?._id == data);\r\n        setUserList(res?.Customer);\r\n        setSelectedPartyList(selectedParty);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    Create_Sales_personList()\r\n      .then((res) => {\r\n        console.log(res?.SalesPerson);\r\n        setSalesPersonList(res?.SalesPerson);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n       setProductList(res?.Product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n    // CreateOrder_ID()\r\n    //   .then((res) => {\r\n    //     const lastElement = res?.Order[res?.Order?.length - 1].id;\r\n    //     const prefix = lastElement?.substring(0, 5);\r\n    //     const number = parseInt(lastElement?.match(/\\d+$/)[0], 10) + 1;\r\n    //     const concatenatedString = prefix + number;\r\n    //     setOrderID(concatenatedString);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    // CreateOrder_ViewData()\r\n    //   .then((res) => {\r\n    //     const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n    //     setCreatAccountView(JSON.parse(jsonData));\r\n    //     setStatusDropDown(\r\n    //       JSON.parse(jsonData)?.createOrder.CurrentStatus?.MyDropDown?.dropdown\r\n    //     );\r\n    //     setdropdownValue(JSON.parse(jsonData));\r\n    //     setPartDetails(JSON.parse(jsonData)?.createOrder.PartDetails);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1, //\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Salespersonname: \"\",\r\n        targetstartDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        qtyAssign: ele?.qty,\r\n        price: ele?.price,\r\n        totalPrice: ele?.totalprice,\r\n      };\r\n    });\r\n    let payload = {\r\n      startDate: targetStartDate,\r\n      endDate: targetEndDate,\r\n      grandTotal: grandTotalAmt,\r\n      salesPersonId: Salesperson[0]?._id,\r\n      products: Allproduct,\r\n    };\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      Create_Targetsave(payload)\r\n        .then((res) => {\r\n          swal(\"Target Created Successfully\");\r\n          // }\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    setSalesperson(selectedList);\r\n    // console.log(index);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let arr = selectedList.map((ele) => ele.id);\r\n    // setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // if (uniqueChars.length === 1) {\r\n    //   let value = uniqueChars[0];\r\n    //   const formdata = new FormData();\r\n    //   formdata.append(\"state_id\", value);\r\n    //   axiosConfig\r\n    //     .post(`/getcity`, formdata)\r\n    //     .then((res) => {\r\n    //       setCityList(res?.data?.cities);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // } else {\r\n    //   setCityList([]);\r\n    // }\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n\r\n    // setmultiSelect(selectedList);\r\n\r\n    // let arr = selectedList.map((ele) => ele.id);\r\n    // console.log(arr);\r\n    // setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // console.log(uniqueChars);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Edit Target</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.goBack()}>\r\n                      {\" \"}\r\n                      Back\r\n                      {/* <FaPlus size={15} /> Create User */}\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            {/* <Pickers /> */}\r\n            {/* <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Range</h5>\r\n              <Flatpickr\r\n                // value={rangePicker}\r\n                className=\"form-control\"\r\n                options={{ mode: \"range\" }}\r\n                onChange={(date) => {\r\n                  console.log(date);\r\n                }}\r\n              />\r\n            </Col> */}\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Selected Party</Label>\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={UserList} // Options to display in the dropdown\r\n                      selectedValues={SelectedPartyList} // Preselected value to persist in dropdown\r\n                      onSelect={onSelect1} // Function will trigger on select event\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"OwnerName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Start date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"targetEndDate\"\r\n                      placeholder=\"Date of Delivery\"\r\n                      value={targetStartDate}\r\n                      onChange={(e) => settargetStartDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>End Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"targetstartDate\"\r\n                      placeholder=\"Date of Delivery\"\r\n                      value={targetEndDate}\r\n                      onChange={(e) => settargetEndDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              {AllProductList &&\r\n                AllProductList?.map((product, index) => {\r\n                  let SelectedProduct = ProductList?.filter(\r\n                    (ele) => ele?._id == product?._id\r\n                  );\r\n\r\n                  return (\r\n                    <Row className=\"\" key={index}>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Product Name</Label>\r\n                          <Multiselect\r\n                            required\r\n                            selectionLimit={1}\r\n                            selectedValues={SelectedProduct}\r\n                            isObject=\"false\"\r\n                            options={ProductList}\r\n                            onSelect={(selectedList, selectedItem) =>\r\n                              handleSelection(selectedList, selectedItem, index)\r\n                            }\r\n                            onRemove={(selectedList, selectedItem) => {\r\n                              handleRemoveSelected(\r\n                                selectedList,\r\n                                selectedItem,\r\n                                index\r\n                              );\r\n                            }}\r\n                            displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Quantity Assign</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"qty\"\r\n                            min={0}\r\n                            placeholder=\"Req_Qty\"\r\n                            value={product?.qty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProduct(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Price</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            readOnly\r\n                            placeholder=\"Price\"\r\n                            value={product.price}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Total Price</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"totalprice\"\r\n                            readOnly\r\n                            placeholder=\"TtlPrice\"\r\n                            value={product.price * product?.qty}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <div className=\"btnStyle\">\r\n                          {index ? (\r\n                            <Button\r\n                              type=\"button\"\r\n                              color=\"danger\"\r\n                              className=\"button remove \"\r\n                              onClick={() => removeMoreProduct(index)}>\r\n                              - Remove\r\n                            </Button>\r\n                          ) : null}\r\n                        </div>\r\n\r\n                        <div className=\"btnStyle\">\r\n                          <Button\r\n                            className=\"ml-1 mb-1\"\r\n                            color=\"primary\"\r\n                            type=\"button\"\r\n                            onClick={() => addMoreProduct()}>\r\n                            + Add\r\n                          </Button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                })}\r\n              <Row>\r\n                {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Discount</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"discount\"\r\n                          readOnly\r\n                          placeholder=\"Dissct\"\r\n                          value={product.discount}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n                {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Shipping Cost</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"Shipcst\"\r\n                          readOnly\r\n                          placeholder=\"Shipcst\"\r\n                          value={product.Shipping}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n                {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Tax</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"tax\"\r\n                          readOnly\r\n                          placeholder=\"Tax\"\r\n                          value={product.tax}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total : <stron>{grandTotalAmt}</stron>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EditTarget;\r\n"],"sourceRoot":""}