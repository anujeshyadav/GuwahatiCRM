{"version":3,"sources":["views/apps/freshlist/order/CreateOrder.js"],"names":["GrandTotal","SelectedITems","SelectedSize","CreateOrder","args","useState","setIndex","error","ProductList","setProductList","PartyList","setPartyList","PartyId","setPartyId","UnitList","setUnitList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","productId","availableQty","qty","price","Size","unitType","totalprice","product","setProduct","handleRequredQty","e","index","avalaibleSize","target","name","value","Number","list","amt","length","map","val","reduce","a","b","acc","useEffect","JSON","parse","localStorage","getItem","_id","userdata","ProductListView","database","then","res","Product","catch","err","console","log","CreateCustomerList","Customer","UnitListView","Unit","userInfo","addMoreProduct","unitQty","removeMoreProduct","i","newFormValues","splice","onRemove1","selectedList","removedItem","className","render","history","color","size","onClick","push","onSubmit","preventDefault","fullname","firstName","lastName","payload","userId","fullName","address","currentAddress","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","swal","SaveOrder","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","handleSelectionParty","onRemove","displayValue","type","onChange","key","prevProductList","updatedProductList","updatedProduct","Product_MRP","handleSelection","disabled","placeholder","min","autocomplete","updatedUnitList","primaryUnit","ele","indextotal","handleSelectionUnit","Ripple"],"mappings":"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","file":"static/js/463.08645e08.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n  BaseUnitListView,\r\n  CreateCustomerList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst CreateOrder = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      totalprice: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    const { name, value } = e.target;\r\n    if (Number(value) <= avalaibleSize) {\r\n      if (Number(value != 0)) {\r\n        setIndex(index);\r\n        const list = [...product];\r\n        list[index][name] = Number(value);\r\n\r\n        let amt = 0;\r\n        if (list.length > 0) {\r\n          const x = list?.map(val => {\r\n            GrandTotal[index] = val.Size * val.qty * val.price;\r\n            list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n            return val.Size * val.qty * val.price;\r\n          });\r\n          amt = x.reduce((a, b) => a + b);\r\n        }\r\n        setProduct(list);\r\n        setGrandTotalAmt(amt);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem._id);\r\n  };\r\n\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  const handleSelectionUnit = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedUnitList = [...prevProductList];\r\n      const updatedProduct = { ...updatedUnitList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem.unitQty;\r\n      updatedProduct.unitType = selectedItem.primaryUnit;\r\n      updatedUnitList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        updatedUnitList[index][\"totalprice\"] =\r\n          ele?.qty * ele.price * SelectedSize[i]?.unitQty;\r\n        let indextotal = ele?.price * ele.qty * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedUnitList; // Return the updated product list\r\n    });\r\n  };\r\n  let subtotal = product?.reduce((acc, product) => acc + product.totalprice, 0);\r\n  let taxRate = 0.1; // 10%\r\n  let tax = subtotal * taxRate;\r\n  let discountRate = 0.2;\r\n  let discountAmount = subtotal * discountRate;\r\n  let Grandtotals = subtotal + tax;\r\n\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then(res => {\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreateCustomerList(userdata?._id, userdata?.database)\r\n      .then(res => {\r\n        let value = res?.Customer;\r\n        if (value?.length) {\r\n          setPartyList(value);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    UnitListView(userdata?._id, userdata?.database)\r\n      .then(res => {\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        unitQty: \"\",\r\n        unitType: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const fullname = UserInfo?.firstName + \" \" + UserInfo?.lastName;\r\n    const payload = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.currentAddress,\r\n      grandTotal: grandTotalAmt + grandTotalAmt * 0.05 + grandTotalAmt * 0.18,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveOrder(payload)\r\n        .then(res => {\r\n          console.log(res);\r\n          swal(\"Order Created Successfully\");\r\n          //  history.push(\"/app/softnumen/order/orderList\")\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Sales Order</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softnumen/order/orderList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1}\r\n                      // displayValue=\"firstName\"\r\n                      displayValue=\"OwnerName\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={e => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"availableQty\"\r\n                          placeholder=\"AvailableSize\"\r\n                          value={product?.availableQty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          min={0}\r\n                          placeholder=\"Req_Qty\"\r\n                          required\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Choose Unit</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionUnit(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"primaryUnit\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          disabled\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          disabled\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.Size * product.price * product.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total:\r\n                          <span className=\"p-2\">\r\n                            {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                              ? 0\r\n                              : grandTotalAmt}\r\n                          </span>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost :{\" \"}\r\n                          <strong>RS {grandTotalAmt * 0.05}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS {grandTotalAmt * 0.18}</strong>\r\n                        </Label>\r\n                      </li>\r\n\r\n                      <li>\r\n                        {\" \"}\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :{\" \"}\r\n                          <strong>\r\n                            {grandTotalAmt +\r\n                              grandTotalAmt * 0.05 +\r\n                              grandTotalAmt * 0.18}\r\n                          </strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateOrder;\r\n"],"sourceRoot":""}