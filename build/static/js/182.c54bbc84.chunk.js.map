{"version":3,"sources":["views/apps/freshlist/house/CheckPermission.js","views/apps/freshlist/order/SalesReturnView.js","views/apps/freshlist/order/purchase/PurchaseReturnList.js","assets/img/profile/pages/logomain.png"],"names":["CheckPermission","props","pageparmission","JSON","parse","localStorage","getItem","newparmisson","rolename","rolePermission","find","value","pagename","View","permission","includes","Create","Edit","Delete","SalesReturnView","args","useState","setIndex","error","setProductList","grandTotalAmt","setGrandTotalAmt","setEditdata","setUserInfo","setSalesPersonList","location","useParams","useLocation","productId","Product_Title","Qty_Sales","Qty_Return","Product_Price","OrderedListData","setOrderedListData","handleProductChangeProduct","e","index","target","name","list","useEffect","getFromLocalData","orderItems","state","grandTotal","reduce","a","b","Product_MRP","setItem","console","log","Create_Sales_personList","then","res","SalesPerson","catch","err","userdata","ProductListView","_id","database","Product","userInfo","className","render","history","style","cursor","color","size","onClick","goBack","onSubmit","preventDefault","userData","myarr","map","ele","i","qty","Number","returnQty","price","payload","userId","returnItems","mobileNumber","email","Return_amount","orderId","created_by","swal","SalesReturnProduct","item","key","lg","md","sm","type","readOnly","placeholder","onChange","Ripple","SelectedColums","PurchaseReturn","toggleModal","setState","prevState","modalone","LookupviewStart","modal","handleChangeView","data","types","ViewOneUserView","ViewOneData","EditOneUserView","EditOneData","onGridReady","params","gridApi","api","gridColumnApi","columnApi","gridRef","current","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","handleChangeHeader","checked","push","delindex","findIndex","headerName","splice","exportToPDF","csvData","getDataAsCsv","processCellCallback","processCell","parseCsv","parsedData","generatePDF","exportToExcel","CsvData","convertCsvToExcel","blob","downloadExcelFile","convertCSVtoExcel","Papa","complete","result","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","shiftElementUp","currentIndex","Arrindex","myArrayCopy","SelectedcolumnDefs","elementToMove","shiftElementDown","length","convertCsvToXml","rows","xmlString","forEach","row","cell","Blob","link","document","createElement","href","URL","createObjectURL","download","click","HandleSetVisibleField","setColumnDefs","columnDefs","rowData","stringify","toggleDropdown","isOpen","HeadingRightShift","updatedSelectedColumnDefs","Set","handleLeftShift","SelectedCols","slice","React","createRef","userName","InsiderPermissions","ViewData","setMySelectedarr","paginationPageSize","AllcolumnDefs","defaultColDef","sortable","enablePivot","enableValue","resizable","suppressMenu","valueGetter","field","width","filter","cellRendererFramework","togglemodal","Size","HSN_Code","this","context","UserInformatio","InsidePermissions","Purchase_ReturnList","userHeading","id","buttons","cancel","text","Delete_targetINlist","selectedData","getSelectedRows","updateRowData","remove","Promise","resolve","reject","header","skipEmptyLines","Error","pdfsize","Object","keys","doc","jsPDF","setTextColor","tableData","values","addImage","Logo","date","Date","setCreationDate","autoTable","head","body","startY","save","dynamicTyping","worksheet","workbook","excelBuffer","bookType","url","window","appendChild","revokeObjectURL","fontWeight","title","position","zIndex","border","backgroundColor","exportDataAsCsv","marginTop","tag","right","Consumer","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","ref","domLayout","toggle","maxWidth","xl","xs","class","element","backdrop","fullscreen","Component","contextType","UserContext","module","exports"],"mappings":"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","file":"static/js/182.c54bbc84.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SalesReturnProduct,\r\n  ProductListView,\r\n  Create_Sales_personList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst SalesReturnView = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [Editdata, setEditdata] = useState({});\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [SalesPersonList, setSalesPersonList] = useState([]);\r\n  const Params = useParams();\r\n  const location = useLocation();\r\n\r\n  const [OrderedListData, setOrderedListData] = useState([\r\n    {\r\n      productId: \"\",\r\n      Product_Title: \"\",\r\n      Qty_Sales: \"\",\r\n      Qty_Return: 0,\r\n      Product_Price: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...OrderedListData];\r\n    list[index][name] = value;\r\n    setOrderedListData(list);\r\n  };\r\n  useEffect(() => {\r\n    let getFromLocalData = JSON.parse(\r\n      localStorage.getItem(\"OrderList\")\r\n    )?.orderItems;\r\n    if (location?.state) {\r\n      setOrderedListData(location?.state.orderItems);\r\n      let grandTotal = location?.state?.orderItems?.reduce(\r\n        (a, b) => a + b?.productId?.Product_MRP,\r\n        0\r\n      );\r\n\r\n      setGrandTotalAmt(grandTotal);\r\n      localStorage.setItem(\"EditoneProduct\", location?.state);\r\n      setEditdata(location?.state);\r\n    } else {\r\n      setOrderedListData(getFromLocalData);\r\n      let grandTotal = location?.state?.orderItems?.reduce(\r\n        (a, b) => a + b?.productId?.Product_MRP,\r\n        0\r\n      );\r\n      console.log(grandTotal);\r\n      setGrandTotalAmt(grandTotal);\r\n    }\r\n  }, []);\r\n  useEffect(() => {}, [OrderedListData]);\r\n\r\n  useEffect(() => {\r\n    Create_Sales_personList()\r\n      .then((res) => {\r\n        setSalesPersonList(res?.SalesPerson);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(OrderedListData);\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userData);\r\n\r\n    let myarr = OrderedListData?.map((ele, i) => {\r\n      return {\r\n        productId: ele?.productId?._id,\r\n        Qty_Sales: ele?.qty,\r\n        Qty_Return: Number(ele?.returnQty),\r\n        Product_Price: ele?.price,\r\n      };\r\n    });\r\n\r\n    let payload = {\r\n      userId: userData?._id,\r\n      returnItems: myarr,\r\n      mobileNumber: userData?.mobileNumber,\r\n      email: userData.email,\r\n      Return_amount: grandTotalAmt,\r\n      orderId: location?.state?._id,\r\n      created_by: userData?._id,\r\n    };\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SalesReturnProduct(payload)\r\n        .then((res) => {\r\n          swal(\"Sales Returned Successfully\");\r\n\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Sales Return</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => history.goBack()}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              {OrderedListData &&\r\n                OrderedListData?.map((item, index) => {\r\n                  console.log(item);\r\n                  return (\r\n                    <Row className=\"\" key={index}>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Product Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"Product_Title\"\r\n                            readOnly\r\n                            placeholder=\"Product Name\"\r\n                            value={item?.productId?.Product_Title}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Price</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"price\"\r\n                            readOnly\r\n                            placeholder=\"Price\"\r\n                            value={item?.productId?.Product_MRP}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Purchased Quantity</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            readOnly\r\n                            name=\"qty\"\r\n                            placeholder=\"Req_Qty\"\r\n                            value={item?.qty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProduct(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Return Quantity</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"returnQty\"\r\n                            placeholder=\"Return Quantity\"\r\n                            value={OrderedListData?.returnQty}\r\n                            onChange={(e) =>\r\n                              handleProductChangeProduct(e, index)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                })}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total :\r\n                      <strong>\r\n                        {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                          ? 0\r\n                          : grandTotalAmt}\r\n                      </strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SalesReturnView;\r\n","import React, { useRef } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\n\r\nimport { ContextLayout } from \"../../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport Logo from \"../../../../../assets/img/profile/pages/logomain.png\";\r\nimport Papa from \"papaparse\";\r\nimport { Eye, Trash2, ChevronDown, Edit, CornerDownLeft } from \"react-feather\";\r\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\r\nimport \"../../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport { ImDownload } from \"react-icons/im\";\r\nimport {\r\n  FaArrowAltCircleLeft,\r\n  FaArrowAltCircleRight,\r\n  FaFilter,\r\n  FaPlus,\r\n} from \"react-icons/fa\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  Purchase_ReturnList,\r\n  Delete_targetINlist,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  BsCloudDownloadFill,\r\n  BsFillArrowDownSquareFill,\r\n  BsFillArrowUpSquareFill,\r\n} from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport UserContext from \"../../../../../context/Context\";\r\nimport SalesReturnView from \".././SalesReturnView\";\r\nimport { CheckPermission } from \"../../house/CheckPermission\";\r\n\r\nconst SelectedColums = [];\r\n\r\nclass PurchaseReturn extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridRef = React.createRef();\r\n    this.gridApi = null;\r\n    this.state = {\r\n      isOpen: false,\r\n      Arrindex: \"\",\r\n      rowData: [],\r\n      userName: \"\",\r\n      modal: false,\r\n      InsiderPermissions: {},\r\n      modalone: false,\r\n      ViewData: {},\r\n      setMySelectedarr: [],\r\n      SelectedCols: [],\r\n      paginationPageSize: 5,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      AllcolumnDefs: [],\r\n      SelectedcolumnDefs: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        enablePivot: true,\r\n        enableValue: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: \"UID\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          // checkboxSelection: true,\r\n          width: 80,\r\n          filter: true,\r\n        },\r\n\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"transactions\",\r\n          width: 180,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.View && (\r\n                    <Eye\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"green\"\r\n                      onClick={() => {\r\n                        this.togglemodal();\r\n                        this.handleChangeView(params.data, \"readonly\");\r\n                      }}\r\n                    />\r\n                  )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // {\r\n        //   headerName: \"Full Name\",\r\n        //   field: \"orderItems\",\r\n        //   filter: true,\r\n        //   width: 180,\r\n        //   valueGetter: params => {\r\n        //     if (params.data.orderItems && params.data.orderItems.length > 0) {\r\n        //       return params.data.fullName;\r\n        //     }\r\n        //     return null;\r\n        //   },\r\n        // },\r\n\r\n        {\r\n          headerName: \"Product Name\",\r\n          field: \"returnItems\",\r\n          filter: true,\r\n          width: 220,\r\n          valueGetter: params => {\r\n            if (\r\n              params.data.returnItems &&\r\n              params.data.returnItems?.length > 0\r\n            ) {\r\n              return params?.data?.returnItems?.map(val => {\r\n                return val?.productId?.Product_Title;\r\n              });\r\n            }\r\n            return null;\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Size\",\r\n          field: \"returnItems\",\r\n          filter: true,\r\n          width: 220,\r\n          valueGetter: params => {\r\n            if (\r\n              params.data?.returnItems &&\r\n              params.data?.returnItems?.length > 0\r\n            ) {\r\n              return params?.data?.returnItems?.map(val => {\r\n                return val?.productId?.Size;\r\n              });\r\n            }\r\n            return null;\r\n          },\r\n        },\r\n        {\r\n          headerName: \"HSN_Code\",\r\n          field: \"returnItems\",\r\n          filter: true,\r\n          width: 220,\r\n          valueGetter: params => {\r\n            if (params.data.returnItems && params.data.returnItems.length > 0) {\r\n              return params?.data?.returnItems?.map(val => {\r\n                return val?.productId?.HSN_Code;\r\n              });\r\n            }\r\n            return null;\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Email\",\r\n          field: \"email\",\r\n          filter: true,\r\n          width: 200,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.email}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"MobileNo\",\r\n          field: \"mobileNumber\",\r\n          filter: true,\r\n          width: 150,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.mobileNumber}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        // {\r\n        //   headerName: \"Status\",\r\n        //   field: \"status\",\r\n        //   filter: true,\r\n        //   width: 150,\r\n        //   cellRendererFramework: params => {\r\n        //     return params.value === \"completed\" ? (\r\n        //       <div className=\"badge badge-pill badge-success\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     ) : params.value === \"pending\" ? (\r\n        //       <div className=\"badge badge-pill badge-warning\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     ) : (\r\n        //       <div className=\"badge badge-pill badge-success\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n      ],\r\n    };\r\n  }\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      modalone: !prevState.modalone,\r\n    }));\r\n  };\r\n  LookupviewStart = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  handleChangeView = (data, types) => {\r\n    let type = types;\r\n    if (type == \"readonly\") {\r\n      console.log(\"ResponseData\", data.orderItems);\r\n      this.setState({ ViewOneUserView: true });\r\n      this.setState({ ViewOneData: data });\r\n    } else {\r\n      this.setState({ EditOneUserView: true });\r\n      this.setState({ EditOneData: data });\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const UserInformation = this.context?.UserInformatio;\r\n    const InsidePermissions = CheckPermission(\"Purchase Return\");\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    await Purchase_ReturnList(userData?._id)\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({ rowData: res?.PurchaseReturn });\r\n        this.setState({ AllcolumnDefs: this.state.columnDefs });\r\n        this.setState({ SelectedCols: this.state.columnDefs });\r\n\r\n        let userHeading = JSON.parse(localStorage.getItem(\"TargetList\"));\r\n        if (userHeading?.length) {\r\n          this.setState({ columnDefs: userHeading });\r\n          this.gridApi.setColumnDefs(userHeading);\r\n          this.setState({ SelectedcolumnDefs: userHeading });\r\n        } else {\r\n          this.setState({ columnDefs: this.state.columnDefs });\r\n          this.setState({ SelectedcolumnDefs: this.state.columnDefs });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  runthisfunction(id) {\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then(value => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          Delete_targetINlist(id)\r\n            .then(res => {\r\n              let selectedData = this.gridApi.getSelectedRows();\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridRef.current = params.api;\r\n\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleChangeHeader = (e, value, index) => {\r\n    let check = e.target.checked;\r\n    if (check) {\r\n      SelectedColums?.push(value);\r\n    } else {\r\n      const delindex = SelectedColums?.findIndex(\r\n        ele => ele?.headerName === value?.headerName\r\n      );\r\n\r\n      SelectedColums?.splice(delindex, 1);\r\n    }\r\n  };\r\n  parseCsv(csvData) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: result => {\r\n          if (result.data && result.data.length > 0) {\r\n            resolve(result.data);\r\n          } else {\r\n            reject(new Error(\"No data found in the CSV\"));\r\n          }\r\n        },\r\n        error: error => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  generatePDF(parsedData) {\r\n    let pdfsize = [Object.keys(parsedData[0])][0].length;\r\n    let size = pdfsize > 15 ? \"a1\" : pdfsize < 14 > 10 ? \"a3\" : \"a4\";\r\n\r\n    const doc = new jsPDF(\"landscape\", \"mm\", size, false);\r\n    doc.setTextColor(5, 87, 97);\r\n    const tableData = parsedData.map(row => Object.values(row));\r\n    doc.addImage(Logo, \"JPEG\", 10, 10, 50, 30);\r\n    let date = new Date();\r\n    doc.setCreationDate(date);\r\n    doc.text(\"UserAccount\", 14, 51);\r\n    doc.autoTable({\r\n      head: [Object.keys(parsedData[0])],\r\n      body: tableData,\r\n      startY: 60,\r\n    });\r\n\r\n    doc.save(\"UserList.pdf\");\r\n  }\r\n\r\n  exportToPDF = async () => {\r\n    const csvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    try {\r\n      const parsedData = await this.parseCsv(csvData);\r\n      this.generatePDF(parsedData);\r\n    } catch (error) {\r\n      console.error(\"Error parsing CSV:\", error);\r\n    }\r\n  };\r\n  processCell = params => {\r\n    return params.value;\r\n  };\r\n\r\n  convertCsvToExcel(csvData) {\r\n    return new Promise(resolve => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        complete: function (result) {\r\n          const worksheet = XLSX.utils.json_to_sheet(result.data);\r\n          const workbook = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n          const excelBuffer = XLSX.write(workbook, {\r\n            bookType: \"xlsx\",\r\n            type: \"array\",\r\n          });\r\n          const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          resolve(blob);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  downloadExcelFile(blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"Userlist.xlsx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  exportToExcel = async e => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    const blob = await this.convertCsvToExcel(CsvData);\r\n    this.downloadExcelFile(blob);\r\n  };\r\n\r\n  convertCSVtoExcel = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: result => {\r\n        const ws = XLSX.utils.json_to_sheet(result.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelType = \"xls\";\r\n        XLSX.writeFile(wb, `UserList.${excelType}`);\r\n      },\r\n    });\r\n  };\r\n\r\n  shiftElementUp = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex > 0) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex - 1 });\r\n      myArrayCopy.splice(currentIndex - 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n\r\n  shiftElementDown = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex < this.state.SelectedcolumnDefs.length - 1) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex + 1 });\r\n      myArrayCopy.splice(currentIndex + 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n  convertCsvToXml = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: result => {\r\n        const rows = result.data;\r\n\r\n        // Create XML\r\n        let xmlString = \"<root>\\n\";\r\n\r\n        rows.forEach(row => {\r\n          xmlString += \"  <row>\\n\";\r\n          row.forEach((cell, index) => {\r\n            xmlString += `    <field${index + 1}>${cell}</field${index + 1}>\\n`;\r\n          });\r\n          xmlString += \"  </row>\\n\";\r\n        });\r\n\r\n        xmlString += \"</root>\";\r\n        const blob = new Blob([xmlString], { type: \"text/xml\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"output.xml\";\r\n        link.click();\r\n      },\r\n    });\r\n  };\r\n\r\n  HandleSetVisibleField = e => {\r\n    e.preventDefault();\r\n    debugger;\r\n    this.gridApi.setColumnDefs(this.state.SelectedcolumnDefs);\r\n    this.setState({ columnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ SelectedcolumnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ rowData: this.state.rowData });\r\n    localStorage.setItem(\r\n      \"TargetList\",\r\n      JSON.stringify(this.state.SelectedcolumnDefs)\r\n    );\r\n    this.LookupviewStart();\r\n  };\r\n  toggleDropdown = () => {\r\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\r\n  };\r\n  HeadingRightShift = () => {\r\n    const updatedSelectedColumnDefs = [\r\n      ...new Set([\r\n        ...this.state.SelectedcolumnDefs.map(item => JSON.stringify(item)),\r\n        ...SelectedColums.map(item => JSON.stringify(item)),\r\n      ]),\r\n    ].map(item => JSON.parse(item));\r\n    this.setState({\r\n      SelectedcolumnDefs: [...new Set(updatedSelectedColumnDefs)], // Update the state with the combined array\r\n    });\r\n  };\r\n  handleLeftShift = () => {\r\n    let SelectedCols = this.state.SelectedcolumnDefs?.slice();\r\n    let delindex = this.state.Arrindex; /* Your delete index here */\r\n\r\n    if (SelectedCols && delindex >= 0) {\r\n      const splicedElement = SelectedCols?.splice(delindex, 1); // Remove the element\r\n\r\n      this.setState({\r\n        SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n      SelectedcolumnDefs,\r\n      isOpen,\r\n      SelectedCols,\r\n      InsiderPermissions,\r\n      AllcolumnDefs,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Col className=\"app-user-list\">\r\n          {this.state.EditOneUserView && this.state.EditOneUserView ? (\r\n            <Row className=\"card\">\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end p-1\">\r\n                  <Button\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState({ EditOneUserView: false });\r\n                    }}\r\n                    color=\"danger\"\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              {/* <EditAccount EditOneData={this.state.EditOneData} /> */}\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {this.state.ViewOneUserView && this.state.ViewOneUserView ? (\r\n                <>\r\n                  <Row className=\"card\">\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-end p-1\">\r\n                        <Button\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.setState({ ViewOneUserView: false });\r\n                          }}\r\n                          color=\"danger\"\r\n                        >\r\n                          Back\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <SalesReturnView ViewOneData={this.state.ViewOneData} />\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col sm=\"12\">\r\n                    <Card>\r\n                      <Row className=\"mt-2 ml-2 mr-2\">\r\n                        <Col>\r\n                          <h1\r\n                            className=\"float-left\"\r\n                            style={{ fontWeight: \"600\" }}\r\n                          >\r\n                            Purchase Return List\r\n                          </h1>\r\n                        </Col>\r\n\r\n                        {InsiderPermissions && InsiderPermissions?.View && (\r\n                          <Col>\r\n                            <span className=\"mx-1\">\r\n                              <FaFilter\r\n                                style={{ cursor: \"pointer\" }}\r\n                                title=\"filter coloumn\"\r\n                                size=\"35px\"\r\n                                onClick={this.LookupviewStart}\r\n                                color=\"#39cccc\"\r\n                                className=\"float-right\"\r\n                              />\r\n                            </span>\r\n                            <span className=\"mx-1\">\r\n                              <div className=\"dropdown-container float-right\">\r\n                                <ImDownload\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  title=\"download file\"\r\n                                  size=\"35px\"\r\n                                  className=\"dropdown-button \"\r\n                                  color=\"#39cccc\"\r\n                                  onClick={this.toggleDropdown}\r\n                                />\r\n                                {isOpen && (\r\n                                  <div\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      zIndex: \"1\",\r\n                                      border: \"1px solid #39cccc\",\r\n                                      backgroundColor: \"white\",\r\n                                    }}\r\n                                    className=\"dropdown-content dropdownmy\"\r\n                                  >\r\n                                    <h5\r\n                                      onClick={() => this.exportToPDF()}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive mt-1\"\r\n                                    >\r\n                                      .PDF\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.gridApi.exportDataAsCsv()\r\n                                      }\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\"\r\n                                    >\r\n                                      .CSV\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={this.convertCSVtoExcel}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\"\r\n                                    >\r\n                                      .XLS\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={this.exportToExcel}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\"\r\n                                    >\r\n                                      .XLSX\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={() => this.convertCsvToXml()}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\"\r\n                                    >\r\n                                      .XML\r\n                                    </h5>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </span>\r\n                            {/* <span>\r\n                            <Route\r\n                              render={({ history }) => (\r\n                                <Badge\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"float-right mr-1\"\r\n                                  color=\"primary\"\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      \"/app/softnumen/order/createorder\"\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <FaPlus size={15} /> Create Order\r\n                                </Badge>\r\n                              )}\r\n                            />\r\n                          </span> */}\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                      <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n                        {this.state.rowData === null ? null : (\r\n                          <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                            <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                              <div className=\"mb-1\">\r\n                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                  <DropdownToggle tag=\"div\">\r\n                                    {this.gridApi\r\n                                      ? this.state.currenPageSize\r\n                                      : \"\" * this.state.getPageSize -\r\n                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {this.state.rowData.length -\r\n                                      this.state.currenPageSize *\r\n                                        this.state.getPageSize >\r\n                                    0\r\n                                      ? this.state.currenPageSize *\r\n                                        this.state.getPageSize\r\n                                      : this.state.rowData.length}{\" \"}\r\n                                    of {this.state.rowData.length}\r\n                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu right>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(5)}\r\n                                    >\r\n                                      5\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(20)}\r\n                                    >\r\n                                      20\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(50)}\r\n                                    >\r\n                                      50\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(100)}\r\n                                    >\r\n                                      100\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(134)}\r\n                                    >\r\n                                      134\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap justify-content-end mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                  <Input\r\n                                    placeholder=\"search Item here...\"\r\n                                    onChange={e =>\r\n                                      this.updateSearchQuery(e.target.value)\r\n                                    }\r\n                                    value={this.state.value}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ContextLayout.Consumer className=\"ag-theme-alpine\">\r\n                              {context => (\r\n                                <AgGridReact\r\n                                  id=\"myAgGrid\"\r\n                                  gridOptions={this.gridOptions}\r\n                                  rowSelection=\"multiple\"\r\n                                  defaultColDef={defaultColDef}\r\n                                  columnDefs={columnDefs}\r\n                                  rowData={rowData}\r\n                                  onGridReady={this.onGridReady}\r\n                                  colResizeDefault={\"shift\"}\r\n                                  animateRows={true}\r\n                                  floatingFilter={false}\r\n                                  pagination={true}\r\n                                  paginationPageSize={\r\n                                    this.state.paginationPageSize\r\n                                  }\r\n                                  pivotPanelShow=\"always\"\r\n                                  enableRtl={context.state.direction === \"rtl\"}\r\n                                  ref={this.gridRef} // Attach the ref to the grid\r\n                                  domLayout=\"autoHeight\" // Adjust layout as needed\r\n                                />\r\n                              )}\r\n                            </ContextLayout.Consumer>\r\n                          </div>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.LookupviewStart}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}\r\n        >\r\n          <ModalHeader toggle={this.LookupviewStart}>Change Fileds</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"12\" xl=\"4\" xs=\"12\">\r\n                <h4>Available Columns</h4>\r\n                <div className=\"mainshffling\">\r\n                  <div class=\"ex1\">\r\n                    {AllcolumnDefs &&\r\n                      AllcolumnDefs?.map((ele, i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              onClick={e => this.handleChangeHeader(e, ele, i)}\r\n                              key={i}\r\n                              className=\"mycustomtag mt-1\"\r\n                            >\r\n                              <span className=\"mt-1\">\r\n                                <h5\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"allfields\"\r\n                                >\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    // checked={check && check}\r\n                                    className=\"mx-1\"\r\n                                  />\r\n\r\n                                  {ele?.headerName}\r\n                                </h5>\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"12\" xl=\"2\" xs=\"12\" className=\"colarrowbtn\">\r\n                <div className=\"mainarrowbtn\">\r\n                  <div style={{ cursor: \"pointer\" }}>\r\n                    <FaArrowAltCircleRight\r\n                      onClick={this.HeadingRightShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ cursor: \"pointer\" }} className=\"my-2\">\r\n                    <FaArrowAltCircleLeft\r\n                      onClick={this.handleLeftShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\" xl=\"6\" xs=\"12\">\r\n                <Row>\r\n                  <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n                    <h4>Visible Columns</h4>\r\n                    <div className=\"mainshffling\">\r\n                      <div class=\"ex1\">\r\n                        {SelectedcolumnDefs &&\r\n                          SelectedcolumnDefs?.map((ele, i) => {\r\n                            return (\r\n                              <>\r\n                                <div key={i} className=\"mycustomtag mt-1\">\r\n                                  <span className=\"mt-1\">\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.setState({ Arrindex: i })\r\n                                      }\r\n                                      style={{\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor: `${\r\n                                          this.state.Arrindex === i\r\n                                            ? \"#1877f2\"\r\n                                            : \"\"\r\n                                        }`,\r\n                                      }}\r\n                                      className=\"allfields\"\r\n                                    >\r\n                                      <IoMdRemoveCircleOutline\r\n                                        onClick={() => {\r\n                                          const SelectedCols =\r\n                                            this.state.SelectedcolumnDefs?.slice();\r\n                                          const delindex =\r\n                                            SelectedCols?.findIndex(\r\n                                              element =>\r\n                                                element?.headerName ==\r\n                                                ele?.headerName\r\n                                            );\r\n\r\n                                          if (SelectedCols && delindex >= 0) {\r\n                                            const splicedElement =\r\n                                              SelectedCols?.splice(delindex, 1); // Remove the element\r\n                                            // splicedElement contains the removed element, if needed\r\n\r\n                                            this.setState({\r\n                                              SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n                                            });\r\n                                          }\r\n                                        }}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        size=\"25px\"\r\n                                        color=\"red\"\r\n                                        className=\"mr-1\"\r\n                                      />\r\n\r\n                                      {ele?.headerName}\r\n                                    </h5>\r\n                                  </span>\r\n                                </div>\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"updownbtn justify-content-center\">\r\n                      <div>\r\n                        <BsFillArrowUpSquareFill\r\n                          className=\"arrowassign mb-1\"\r\n                          size=\"30px\"\r\n                          onClick={this.shiftElementUp}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillArrowDownSquareFill\r\n                          onClick={this.shiftElementDown}\r\n                          className=\"arrowassign\"\r\n                          size=\"30px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  {/* <Button onClick={this.HandleSetVisibleField} color=\"primary\">\r\n                    Submit\r\n                  </Button> */}\r\n\r\n                  <Badge\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"\"\r\n                    color=\"primary\"\r\n                    onClick={this.HandleSetVisibleField}\r\n                  >\r\n                    Submit\r\n                  </Badge>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.modalone}\r\n          toggle={this.toggleModal}\r\n          className=\"modal-dialog modal-xl\"\r\n          size=\"lg\"\r\n          backdrop={true}\r\n          fullscreen={true}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>View Details</ModalHeader>\r\n          <ModalBody className=\"myproducttable\"></ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default PurchaseReturn;\r\n","module.exports = __webpack_public_path__ + \"static/media/logomain.cee4d0c2.png\";"],"sourceRoot":""}