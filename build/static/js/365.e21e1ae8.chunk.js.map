{"version":3,"sources":["views/apps/freshlist/accounts/CreateReturnSalesOrder.js"],"names":["GrandTotal","SelectedITems","SalesReturn","args","useState","setIndex","error","ProductList","setProductList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","productId","Qty_Purchased","Qty_Return","Product_Price","product","setProduct","handleProductChangeProduct","e","index","target","name","value","list","amt","length","map","val","console","log","qty","price","reduce","a","b","useEffect","ProductListView","then","res","Product","catch","err","userInfo","JSON","parse","localStorage","getItem","addMoreProduct","removeMoreProduct","i","newFormValues","splice","className","onSubmit","preventDefault","ObjOrder","userId","_id","fullName","UserName","address","Address","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","swal","SaveOrder","key","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedList","selectedItem","push","prevProductList","updatedProductList","updatedProduct","Product_MRP","myarr","ele","indextotal","handleSelection","onRemove","removedItem","onRemove1","displayValue","type","placeholder","onChange","readOnly","color","size","onClick","Ripple"],"mappings":"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","file":"static/js/365.e21e1ae8.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { BsFillChatDotsFill, BsWhatsapp } from \"react-icons/bs\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { FiSend } from \"react-icons/fi\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst SalesReturn = args => {\r\n  const [formData, setFormData] = useState({});\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  //   \"mobileNumber\": \"9131102238\",\r\n  // \"email\": \"john.doe@example.com\",\r\n  // \"Return_amount\": 50.5,\r\n  // \"orderId\": \"6564698fe38e5ca62eaed3e5\"\r\n  const [product, setProduct] = useState([\r\n    // [\r\n    //   {\r\n    //     productId: \"655de34174b6eedcb0a82a33\",\r\n    //     Qty_Purchased: 2,\r\n    //     Qty_Return: 1,\r\n    //     Product_Price: 50.5,\r\n    //   },\r\n    // ],\r\n\r\n    {\r\n      productId: \"\",\r\n      Qty_Purchased: \"\",\r\n      Qty_Return: \"\",\r\n      Product_Price: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map(val => {\r\n        console.log(val.qty * val.price);\r\n        list[index][\"totalprice\"] = val.qty * val.price;\r\n        return val.qty * val.price;\r\n      });\r\n      amt = x.reduce((a, b) => a + b, 0);\r\n      console.log(\"GrandTotal\", amt);\r\n    }\r\n    console.log(list);\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt);\r\n    console.log(GrandTotal);\r\n  };\r\n\r\n  // const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n  //   setProduct(prevProductList => {\r\n  //     const updatedProductList = [...prevProductList];\r\n  //     const updatedProduct = { ...updatedProductList[index] };\r\n  //     updatedProduct.partyId = selectedItem?._id;\r\n  //     updatedProductList[index] = updatedProduct;\r\n  //     return updatedProductList;\r\n  //   });\r\n  // };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      console.log(myarr);\r\n      let amt = myarr.reduce((a, b) => a + b, 0);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(product);\r\n    console.log(GrandTotal);\r\n  }, [product, GrandTotal]);\r\n\r\n  useEffect(() => {\r\n    ProductListView()\r\n      .then(res => {\r\n        console.log(res.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    // CreatePartyList()\r\n    //   .then(res => {\r\n    //     console.log(res.Party);\r\n    //     setPartyList(res.Party);\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        Qty_Purchased: \"\",\r\n        Qty_Return: \"\",\r\n        Product_Price: \"\",\r\n        // product: \"\",\r\n        // productId: \"\",\r\n        // availableQty: \"\",\r\n        // qty: 1,\r\n        // price: \"\",\r\n        // totalprice: \"\",\r\n        // DateofDelivery: \"\",\r\n        // partyId: \"\",\r\n        // discount: \"\",\r\n        // Shipping: \"\",\r\n        // tax: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    debugger;\r\n    e.preventDefault();\r\n    console.log(\"Final \", product);\r\n    const ObjOrder = {\r\n      userId: UserInfo?._id,\r\n      fullName: UserInfo?.UserName,\r\n      address: UserInfo?.Address,\r\n      grandTotal: grandTotalAmt,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      // landMark: \"Nearby Park\",\r\n      // pincode: 90001,\r\n      // discount: 10.00,\r\n      // shippingCost: 5.00,\r\n      // taxAmount: 7.50,\r\n\r\n      orderItems: product,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveOrder(ObjOrder)\r\n        .then(res => {\r\n          console.log(res);\r\n          // if (res.status) {\r\n          //   setFormData({});\r\n          //   window.location.reload();\r\n          swal(\"Order Created Successfully\");\r\n          // }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n    // setmultiSelect(selectedList);\r\n\r\n    // let arr = selectedList.map((ele) => ele.id);\r\n    // console.log(arr);\r\n    // setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // console.log(uniqueChars);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Sales Return</h1>\r\n              </div>\r\n            </Col>\r\n\r\n            {/* <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softnumen/order/orderList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col> */}\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          // showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Sales Quantity</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"Qty_Purchased\"\r\n                          placeholder=\"Req_Qty\"\r\n                          value={product?.Qty_Purchased}\r\n                          onChange={e => handleProductChangeProduct(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Return Quantity</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          value={product?.qty}\r\n                          onChange={e => handleProductChangeProduct(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Product Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.price * product?.qty}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n                    <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          SubTotal : <strong>{grandTotalAmt}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost : <strong>RS 50</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS 25</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Discount : <strong>RS 5</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        {\" \"}\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :{\" \"}\r\n                          <strong>{grandTotalAmt + 50 + 25 + 5}</strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SalesReturn;\r\n"],"sourceRoot":""}