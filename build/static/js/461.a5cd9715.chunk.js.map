{"version":3,"sources":["views/apps/freshlist/order/PlaceOrder.js"],"names":["GrandTotal","SelectedITems","SelectedSize","PlaceOrder","args","useState","setIndex","error","ProductList","setProductList","UnitList","setUnitList","PartyList","setPartyList","PartyId","setPartyId","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","productId","availableQty","qty","price","totalprice","unitQty","Size","unitType","product","setProduct","history","useHistory","handleProductChangeProduct","e","index","availableSize","target","value","name","list","amt","length","map","val","console","log","reduce","a","b","handleRequredQty","avalaibleSize","Number","useEffect","JSON","parse","localStorage","getItem","_id","userdata","ProductListView","database","then","res","Product","catch","err","CreateCustomerList","Customer","UnitListView","Unit","userInfo","addMoreProduct","removeMoreProduct","i","newFormValues","splice","onRemove1","selectedList","removedItem","className","color","onClick","push","onSubmit","preventDefault","fullname","firstName","lastName","ObjOrder","userId","fullName","address","Address","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","swal","SavePlaceOrder","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","handleSelectionParty","onRemove","displayValue","type","onChange","key","prevProductList","updatedProductList","updatedProduct","Product_MRP","handleSelection","placeholder","autocomplete","updatedUnitList","primaryUnit","ele","indextotal","handleSelectionUnit","readOnly","Ripple"],"mappings":"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","file":"static/js/461.a5cd9715.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SavePlaceOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n  CreateCustomerList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst PlaceOrder = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      unitQty: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n    },\r\n  ]);\r\n  let history = useHistory();\r\n\r\n  const handleProductChangeProduct = (e, index, availableSize) => {\r\n    if (availableSize >= e.target.value) {\r\n      setIndex(index);\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      list[index][name] = value;\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map(val => {\r\n          console.log(val.qty * val.price);\r\n          list[index][\"totalprice\"] = val.qty * val.price;\r\n          return val.qty * val.price;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      // console.log(list);\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n      console.log(GrandTotal);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem?._id);\r\n  };\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    const { name, value } = e.target;\r\n    if (Number(value) <= avalaibleSize) {\r\n      if (Number(value != 0)) {\r\n        setIndex(index);\r\n        const list = [...product];\r\n        list[index][name] = Number(value);\r\n\r\n        let amt = 0;\r\n        if (list.length > 0) {\r\n          const x = list?.map(val => {\r\n            GrandTotal[index] = val.Size * val.qty * val.price;\r\n            list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n            return val.Size * val.qty * val.price;\r\n          });\r\n          amt = x.reduce((a, b) => a + b);\r\n        }\r\n        setProduct(list);\r\n        setGrandTotalAmt(amt);\r\n      }\r\n    }\r\n  };\r\n  const handleSelectionUnit = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedUnitList = [...prevProductList];\r\n      const updatedProduct = { ...updatedUnitList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem.unitQty;\r\n      updatedProduct.unitType = selectedItem.primaryUnit;\r\n      updatedUnitList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        updatedUnitList[index][\"totalprice\"] =\r\n          ele?.qty * ele.price * SelectedSize[i]?.unitQty;\r\n        let indextotal = ele?.price * ele.qty * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedUnitList; // Return the updated product list\r\n    });\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(product);\r\n    // console.log(GrandTotal);\r\n  }, [product, GrandTotal]);\r\n\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then(res => {\r\n        console.log(res.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreateCustomerList(userdata?._id, userdata?.database)\r\n      .then(res => {\r\n        let value = res?.Customer;\r\n        if (value?.length) {\r\n          setPartyList(value);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    UnitListView(userdata?._id, userdata?.database)\r\n      .then(res => {\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\",\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues?.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal?.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(\"Final \", product);\r\n    let fullname = UserInfo.firstName + \" \" + UserInfo?.lastName;\r\n    const ObjOrder = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.Address,\r\n      grandTotal: grandTotalAmt + grandTotalAmt * 0.05 + grandTotalAmt * 0.18,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SavePlaceOrder(ObjOrder)\r\n        .then(res => {\r\n          swal(\"Order Place Successfully\");\r\n          history.push(\"/app/AjGroup/order/placeOrderList\");\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Place Order</h1>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"\">\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Button\r\n                  className=\"btn float-right\"\r\n                  color=\"warning\"\r\n                  onClick={() =>\r\n                    history.push(\"/app/AjGroup/order/placeOrderList\")\r\n                  }\r\n                >\r\n                  Back\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"OwnerName\" // Property name to display in the dropdown options\r\n                      // displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={e => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"availableQty\"\r\n                          placeholder=\"availableQty\"\r\n                          value={product?.availableQty}\r\n                          onChange={e => handleProductChangeProduct(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Qty</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Choose Unit</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionUnit(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"primaryUnit\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.Size * product.price * product.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          SubTotal : <strong>{grandTotalAmt}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost :{\" \"}\r\n                          <strong>RS {grandTotalAmt * 0.05}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS {grandTotalAmt * 0.18}</strong>\r\n                        </Label>\r\n                      </li>\r\n\r\n                      <li>\r\n                        {\" \"}\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :{\" \"}\r\n                          <strong>\r\n                            {grandTotalAmt +\r\n                              grandTotalAmt * 0.05 +\r\n                              grandTotalAmt * 0.18}\r\n                          </strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PlaceOrder;\r\n"],"sourceRoot":""}