{"version":3,"sources":["views/apps/freshlist/category/CategoryList.js"],"names":["i","CategoryList","state","rowData","Viewpermisson","Editpermisson","Createpermisson","Deletepermisson","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","axiosConfig","className","data","image","src","alt","height","name","style","textTransform","description","createdAt","status","render","history","size","color","onClick","push","_id","runthisfunction","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","pageparmission","JSON","parse","localStorage","getItem","newparmisson","role","find","value","pageName","this","permission","includes","FormData","append","AllCategoryList","then","res","console","log","Category","catch","err","id","selectedData","getSelectedRows","swal","buttons","cancel","text","DeleteCategory","updateRowData","remove","sm","fontWeight","cursor","props","marginTop","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/418.6adb34cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  AllCategoryList,\r\n  DeleteCategory,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nclass CategoryList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    Viewpermisson: null,\r\n    Editpermisson: null,\r\n    Createpermisson: null,\r\n    Deletepermisson: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      // editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Image\",\r\n        field: \"image\",\r\n        filter: true,\r\n        width: 100,\r\n        cellRendererFramework: params => {\r\n          let base = axiosConfig();\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              {params.data.image && (\r\n                <img\r\n                  className=\"rounded-circle mr-50\"\r\n                  src={`http://64.227.162.41:5000/Images/${params.data?.image}`}\r\n                  alt=\"user avatar\"\r\n                  height=\"40\"\r\n                  width=\"40\"\r\n                />\r\n              )}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"name\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params?.data?.name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Type\",\r\n      //   field: \"type\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data?.type}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Description\",\r\n        field: \"description\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span className=\"\" style={{ textTransform: \"uppercase\" }}>\r\n                {params.data?.description}\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"createdAt\",\r\n        field: \"createdAt\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span className=\"\" style={{ textTransform: \"uppercase\" }}>\r\n                {params.data?.createdAt}\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 100,\r\n        cellRendererFramework: params => {\r\n          return params.data.status === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.data.status === \"Deactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* {this.state.Viewpermisson && (\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <>\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Eye\r\n                            className=\"mr-50\"\r\n                            size=\"25px\"\r\n                            color=\"green\"\r\n                            onClick={() =>\r\n                              history.push(\r\n                                `/app/freshlist/category/editCategory/${params?.data?.id}`\r\n                              )\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n                    </>\r\n                  )}\r\n                />\r\n              )} */}\r\n              {/* {this.state.Editpermisson && ( */}\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/category/editCategory/${params?.data?._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              {/* )} */}\r\n              {/* {this.state.Deletepermisson && ( */}\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Trash2\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"red\"\r\n                    onClick={() => {\r\n                      // let selectedData = this.gridApi.getSelectedRows();\r\n                      this.runthisfunction(params?.data?._id);\r\n                      // this.gridApi.updateRowData({ remove: selectedData });\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              {/* )} */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let newparmisson = pageparmission?.role?.find(\r\n      value => value?.pageName === \"Category List\"\r\n    );\r\n\r\n    this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n    this.setState({\r\n      Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n    });\r\n    this.setState({\r\n      Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n    });\r\n    this.setState({\r\n      Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n    });\r\n\r\n    const data = new FormData();\r\n\r\n    data.append(\"user_id\", pageparmission?._id);\r\n    await AllCategoryList(pageparmission?._id)\r\n      .then(res => {\r\n        console.log(res?.Category);\r\n        if (res?.Category) {\r\n          this.setState({ rowData: res?.Category });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    // await axiosConfig.post(\"/getcategory\", data).then((response) => {\r\n    //   let rowData = response.data.data?.category;\r\n    //   console.log(rowData);\r\n    //   if (rowData) {\r\n    //     this.setState({ rowData });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    let selectedData = this.gridApi.getSelectedRows();\r\n\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"Cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then(value => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          let data = new FormData();\r\n          let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n          DeleteCategory(id)\r\n            .then(res => {\r\n              console.log(res);\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n              swal(\"Success\", \"Category Deleted Successfully\");\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              swal(\"Error\", `Some Error Occured`);\r\n            });\r\n\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      // console.log(rowData),\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"mt-2 ml-2 mr-2\">\r\n              <Col>\r\n                <h1 sm=\"6\" className=\"float-left\" style={{ fontWeight: \"600\" }}>\r\n                  Category List\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"btn btn-danger float-right\"\r\n                  onClick={() =>\r\n                    this.props.history.push(\r\n                      \"/app/freshlist/category/addCategory\"\r\n                    )\r\n                  }\r\n                >\r\n                  + Add Category\r\n                </Button>\r\n              </Col>\r\n              {/* <Col>\r\n                {this.state.Createpermisson && (\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\"btn float-right\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          history.push(\"/app/freshlist/category/addCategory\")\r\n                        }\r\n                      >\r\n                        Add Category\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                )}\r\n              </Col> */}\r\n            </Row>\r\n            <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={e => this.updateSearchQuery(e.target.value)}\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {context => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default CategoryList;\r\n"],"sourceRoot":""}