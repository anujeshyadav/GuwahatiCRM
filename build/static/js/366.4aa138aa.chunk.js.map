{"version":3,"sources":["../node_modules/reactstrap/es/FormGroup.js","views/apps/freshlist/accounts/ViewAccount.js"],"names":["_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","EditAccount","ViewOneData","useState","CreatAccountView","setCreatAccountView","Countries","setCountry","States","setState","Cities","setCities","formData","setFormData","setdropdownValue","index","setindex","error","setError","Context","useContext","UserContext","handleInputChange","e","type","i","target","name","value","checked","test","length","useEffect","console","log","pageparmission","JSON","parse","localStorage","getItem","Get_RoleList","_id","database","then","res","Role","catch","err","swal","Country","countryselected","getAllCountries","filter","ele","State","stateselected","getStatesOfCountry","isoCode","City","cityselected","getCitiesOfState","countryCode","status","CreateAccountView","jsonData","xmlJs","xml2json","data","compact","spaces","CreateUser","input","onSubmit","preventDefault","CreateAccountSave","window","location","reload","lg","md","rolename","roleName","readOnly","map","phoneinput","key","sm","label","_text","inputClass","country","onKeyDown","_attributes","includes","countryCodeEditable","onChange","phone","style","color","library","options","getOptionLabel","getOptionValue","placeholder","dateFormat","UserInformatio","moment","tz","timeZone","format","number","onWheel","marginRight"],"mappings":"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","file":"static/js/366.4aa138aa.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountView,\r\n  Get_RoleList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nconst EditAccount = ({ ViewOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [States, setState] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    setFormData(ViewOneData);\r\n    console.log(ViewOneData);\r\n   let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n   Get_RoleList(pageparmission?._id, pageparmission?.database)\r\n     .then((res) => {\r\n       setdropdownValue(res?.Role);\r\n     })\r\n     .catch((err) => {\r\n       console.log(err);\r\n       swal(\"Roles List Not found\");\r\n     });\r\n    if (ViewOneData?.Country) {\r\n      let countryselected = Country?.getAllCountries()?.filter(\r\n        (ele, i) => ele?.name == ViewOneData?.Country\r\n      );\r\n      setCountry(countryselected);\r\n      if (ViewOneData?.State) {\r\n        let stateselected = State?.getStatesOfCountry(\r\n          countryselected[0]?.isoCode\r\n        )?.filter((ele, i) => ele?.name == ViewOneData?.State);\r\n        setState(stateselected);\r\n        console.log(stateselected);\r\n        if (ViewOneData?.City) {\r\n          let cityselected = City.getCitiesOfState(\r\n            stateselected[0]?.countryCode,\r\n            stateselected[0]?.isoCode\r\n          )?.filter((ele, i) => ele?.name == ViewOneData?.City);\r\n          setCities(cityselected);\r\n        }\r\n      }\r\n    }\r\n    if (ViewOneData?.status) {\r\n      formData[\"status\"] = ViewOneData?.status;\r\n    }\r\n    CreateAccountView()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData)?.CreateUser?.input);\r\n\r\n        setCreatAccountView(JSON.parse(jsonData)?.CreateUser?.input);\r\n\r\n        setdropdownValue(JSON.parse(jsonData));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      CreateAccountSave(formData)\r\n        .then(res => {\r\n          setFormData({});\r\n          if (res.status) {\r\n            window.location.reload();\r\n            swal(\"User Created Successfully\");\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          {/* <hr /> */}\r\n\r\n          <Form className=\"mr-1 ml-1\" onSubmit={submitHandler}>\r\n            <Row className=\"mb-2\">\r\n              {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                            ?.name?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n                      {dropdownValue?.CreateAccount?.MyDropdown?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col> */}\r\n              <Col lg=\"4\" md=\"4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Role Name-\r\n                    <strong>\r\n                      {formData?.rolename?.roleName &&\r\n                        formData?.rolename?.roleName}\r\n                    </strong>\r\n                  </Label>\r\n                  <Input\r\n                    readOnly\r\n                    value={\r\n                      formData?.rolename?.roleName &&\r\n                      formData?.rolename?.roleName\r\n                    }\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              {CreatAccountView &&\r\n                CreatAccountView?.map((ele, i) => {\r\n                  if (!!ele?.phoneinput) {\r\n                    return (\r\n                      <>\r\n                        <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>{ele?.label?._text}</Label>\r\n                            <PhoneInput\r\n                              disabled\r\n                              inputClass=\"myphoneinput\"\r\n                              country={\"in\"}\r\n                              onKeyDown={(e) => {\r\n                                if (ele?.type?._attributes?.type == \"number\") {\r\n                                  [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                    e.preventDefault();\r\n                                }\r\n                              }}\r\n                              countryCodeEditable={false}\r\n                              name={ele?.name?._text}\r\n                              value={formData[ele?.name?._text]}\r\n                              onChange={(phone) => {\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [ele?.name?._text]: phone,\r\n                                });\r\n                              }}\r\n                            />\r\n                            {index === i ? (\r\n                              <>\r\n                                {error && (\r\n                                  <span style={{ color: \"red\" }}>{error}</span>\r\n                                )}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </>\r\n                    );\r\n                  } else if (!!ele?.library) {\r\n                    if (ele?.label._text?.includes(\"ountry\")) {\r\n                      console.log(ele);\r\n                      return (\r\n                        <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>{ele?.label?._text}</Label>\r\n                            <Select\r\n                              disabled\r\n                              inputClass=\"countryclass\"\r\n                              className=\"countryclassnw\"\r\n                              options={Country.getAllCountries()}\r\n                              getOptionLabel={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              getOptionValue={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              value={Countries}\r\n                              onChange={(country) => {\r\n                                setCountry(country);\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"Country\"]: country?.name,\r\n                                });\r\n                              }}\r\n                            />\r\n                            {index === i ? (\r\n                              <>\r\n                                {error && (\r\n                                  <span style={{ color: \"red\" }}>{error}</span>\r\n                                )}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    } else if (ele?.label._text?.includes(\"tate\")) {\r\n                      return (\r\n                        <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>{ele?.label?._text}</Label>\r\n                            <Select\r\n                              disabled\r\n                              options={State?.getStatesOfCountry(\r\n                                Countries?.isoCode\r\n                              )}\r\n                              getOptionLabel={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              getOptionValue={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              value={States}\r\n                              onChange={(State) => {\r\n                                setState(State);\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"State\"]: State?.name,\r\n                                });\r\n                              }}\r\n                            />\r\n                            {index === i ? (\r\n                              <>\r\n                                {error && (\r\n                                  <span style={{ color: \"red\" }}>{error}</span>\r\n                                )}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    } else if (ele?.label._text?.includes(\"ity\")) {\r\n                      return (\r\n                        <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                          <FormGroup>\r\n                            <Label>{ele?.label?._text}</Label>\r\n                            <Select\r\n                              disabled\r\n                              options={City?.getCitiesOfState(\r\n                                States?.countryCode,\r\n                                States?.isoCode\r\n                              )}\r\n                              getOptionLabel={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              getOptionValue={(options) => {\r\n                                return options[\"name\"];\r\n                              }}\r\n                              value={Cities}\r\n                              onChange={(City) => {\r\n                                setCities(City);\r\n                                setFormData({\r\n                                  ...formData,\r\n                                  [\"City\"]: City?.name,\r\n                                });\r\n                              }}\r\n                            />\r\n                            {index === i ? (\r\n                              <>\r\n                                {error && (\r\n                                  <span style={{ color: \"red\" }}>{error}</span>\r\n                                )}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {ele?.type?._attributes?.type == \"date\" ? (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup key={i}>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n\r\n                                  <Input\r\n                                    disabled\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    dateFormat={\r\n                                      Context?.UserInformatio?.dateFormat\r\n                                    }\r\n                                    value={\r\n                                      moment(formData[ele?.name?._text])\r\n                                        .tz(Context?.UserInformatio?.timeZone)\r\n                                        .format(\r\n                                          Context?.UserInformatio?.dateFormat\r\n                                        )\r\n                                      // formData[ele?.name?._text]\r\n                                    }\r\n                                    // value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup key={i}>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <Input\r\n                                    disabled\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  } else {\r\n                    return (\r\n                      <>\r\n                        {!!ele?.number ? (\r\n                          <>\r\n                            <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <FormGroup key={i}>\r\n                                <Label>{ele?.label?._text}</Label>\r\n\r\n                                <Input\r\n                                  disabled\r\n                                  onWheel={(e) => {\r\n                                    e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                  }}\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    )\r\n                                  }\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        ) : (\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup key={i}>\r\n                              <Label>{ele?.label?._text}</Label>\r\n\r\n                              <Input\r\n                                disabled\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(e) => {\r\n                                  // const value = e.target.value;\r\n                                  // // Use regular expression to allow only numbers\r\n                                  // const numericValue = value.replace(\r\n                                  //   /\\D/g,\r\n                                  //   \"\"\r\n                                  // );\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  );\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        )}\r\n                      </>\r\n                    );\r\n                  }\r\n                })}\r\n            </Row>\r\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <Label className=\"mb-0\">Status</Label>\r\n              <div\r\n                className=\"form-label-group\"\r\n                // onChange={(e) => {\r\n                //   setFormData({\r\n                //     ...formData,\r\n                //     [\"status\"]: e.target.value,\r\n                //   });\r\n                // }}\r\n              >\r\n                <input\r\n                  disabled\r\n                  checked={formData[\"status\"] == \"Active\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Active\"\r\n                />\r\n                <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                <input\r\n                  // checked={status == \"Inactive\"}\r\n                  checked={formData[\"status\"] == \"Deactive\"}\r\n                  disabled\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Deactive\"\r\n                />\r\n                <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n              </div>\r\n            </Col>\r\n            <hr />\r\n            {/* <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n\r\n            {/* <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row> */}\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EditAccount;\r\n"],"sourceRoot":""}