{"version":3,"sources":["views/apps/freshlist/order/CreateOrder.js"],"names":["i","GrandTotal","SelectedITems","SelectedSize","CreateOrder","args","useState","setIndex","error","ProductList","setProductList","PartyList","setPartyList","PartyId","setPartyId","UnitList","setUnitList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","productId","availableQty","qty","price","Size","unitType","totalprice","product","setProduct","Context","useContext","UserContext","handleRequredQty","e","index","avalaibleSize","target","name","value","Number","list","amt","length","map","val","reduce","a","b","handleSelection","selectedList","selectedItem","JSON","parse","localStorage","getItem","push","URl","WareHouse_Current_Stock","warehouse","_Get","_id","then","res","console","log","currentStock","Stock","catch","err","swal","prevProductList","updatedProductList","updatedProduct","Product_MRP","acc","useEffect","userdata","ProductListView","database","Product","filter","ele","addProductType","CreateCustomerList","Customer","UnitListView","Unit","userInfo","addMoreProduct","unitQty","removeMoreProduct","newFormValues","splice","onRemove1","removedItem","className","render","history","color","size","onClick","onSubmit","preventDefault","fullname","firstName","lastName","payload","userId","SuperAdmin","CompanyDetails","created_by","fullName","address","currentAddress","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","SaveOrder","lg","md","sm","required","selectionLimit","isObject","options","onSelect","handleSelectionParty","onRemove","displayValue","type","onChange","key","disabled","placeholder","min","autocomplete","updatedUnitList","primaryUnit","indextotal","handleSelectionUnit","Ripple"],"mappings":"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","file":"static/js/479.8f4444cb.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n  BaseUnitListView,\r\n  CreateCustomerList,\r\n  _Get,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { WareHouse_Current_Stock } from \"../../../../ApiEndPoint/Api\";\r\nimport UserContext from \"../../../../context/Context\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst CreateOrder = (args) => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      totalprice: \"\",\r\n    },\r\n  ]);\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    const { name, value } = e.target;\r\n    if (Number(value) <= avalaibleSize) {\r\n      if (Number(value != 0)) {\r\n        setIndex(index);\r\n        const list = [...product];\r\n        list[index][name] = Number(value);\r\n\r\n        let amt = 0;\r\n        if (list.length > 0) {\r\n          const x = list?.map((val) => {\r\n            GrandTotal[index] = val.Size * val.qty * val.price;\r\n            list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n            return val.Size * val.qty * val.price;\r\n          });\r\n          amt = x.reduce((a, b) => a + b);\r\n        }\r\n        setProduct(list);\r\n        setGrandTotalAmt(amt);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem._id);\r\n  };\r\n\r\n  const handleSelection = async (selectedList, selectedItem, index) => {\r\n    const userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    SelectedITems.push(selectedItem);\r\n    // console.log(selectedItem?.warehouse);\r\n    // console.log(selectedItem?._id);\r\n    // console.log(userdata?._id, userdata?.database);\r\n    let URl = `${WareHouse_Current_Stock}${selectedItem?.warehouse}/`;\r\n    var Stock;\r\n    await _Get(URl, selectedItem?._id)\r\n      .then((res) => {\r\n        console.log(res?.currentStock);\r\n        Stock = res?.currentStock;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"something went Wrong\");\r\n      });\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = Stock?.currentStock;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  const handleSelectionUnit = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedUnitList = [...prevProductList];\r\n      const updatedProduct = { ...updatedUnitList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem.unitQty;\r\n      updatedProduct.unitType = selectedItem.primaryUnit;\r\n      updatedUnitList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        updatedUnitList[index][\"totalprice\"] =\r\n          ele?.qty * ele.price * SelectedSize[i]?.unitQty;\r\n        let indextotal = ele?.price * ele.qty * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedUnitList; // Return the updated product list\r\n    });\r\n  };\r\n  let subtotal = product?.reduce((acc, product) => acc + product.totalprice, 0);\r\n  let taxRate = 0.1; // 10%\r\n  let tax = subtotal * taxRate;\r\n  let discountRate = 0.2;\r\n  let discountAmount = subtotal * discountRate;\r\n  let Grandtotals = subtotal + tax;\r\n\r\n  useEffect(() => {\r\n    // console.log(Context?.CompanyDetails?.created_by);\r\n    // debugger;\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let product = res?.Product?.filter(\r\n          (ele) => ele?.addProductType == \"Product\"\r\n        );\r\n        setProductList(product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    CreateCustomerList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let value = res?.Customer;\r\n        if (value?.length) {\r\n          setPartyList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    UnitListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        unitQty: \"\",\r\n        unitType: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const fullname = UserInfo?.firstName + \" \" + UserInfo?.lastName;\r\n    const payload = {\r\n      userId: UserInfo?._id,\r\n      SuperAdmin: Context?.CompanyDetails?.created_by,\r\n      fullName: fullname,\r\n      address: UserInfo?.currentAddress,\r\n      grandTotal: grandTotalAmt + grandTotalAmt * 0.05 + grandTotalAmt * 0.18,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveOrder(payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"Order Created Successfully\");\r\n          //  history.push(\"/app/softnumen/order/orderList\")\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Sales Order</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softnumen/order/orderList\")\r\n                    }>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1}\r\n                      displayValue=\"OwnerName\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={(e) => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"availableQty\"\r\n                          placeholder=\"AvailableSize\"\r\n                          value={product?.availableQty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          min={0}\r\n                          placeholder=\"Req_Qty\"\r\n                          required\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={(e) =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Choose Unit</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionUnit(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"primaryUnit\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          disabled\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          disabled\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.Size * product.price * product.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}>\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}>\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total:\r\n                          <span className=\"p-2\">\r\n                            {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                              ? 0\r\n                              : grandTotalAmt}\r\n                          </span>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost :{\" \"}\r\n                          <strong>RS {grandTotalAmt * 0.05}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS {grandTotalAmt * 0.18}</strong>\r\n                        </Label>\r\n                      </li>\r\n\r\n                      <li>\r\n                        {\" \"}\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :{\" \"}\r\n                          <strong>\r\n                            {grandTotalAmt +\r\n                              grandTotalAmt * 0.05 +\r\n                              grandTotalAmt * 0.18}\r\n                          </strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateOrder;\r\n"],"sourceRoot":""}