{"version":3,"sources":["views/apps/freshlist/house/CheckPermission.js","views/apps/freshlist/accounts/RoleList.js"],"names":["CheckPermission","props","pageparmission","JSON","parse","localStorage","getItem","newparmisson","rolename","rolePermission","find","value","pagename","View","permission","includes","Create","Edit","Delete","i","RoleList","state","rowData","InsiderPermissions","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","roleName","desc","render","history","style","border","padding","borderRadius","backgroundColor","marginLeft","size","color","onClick","push","pathname","_id","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","Get_RoleList","database","then","res","console","log","Role","catch","err","InsidePermissions","this","id","selectedData","getSelectedRows","swal","buttons","cancel","text","formData","FormData","append","updateRowData","remove","axiosConfig","post","response","sm","lg","md","xs","fontWeight","cursor","ms","marginTop","tag","length","right","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","contextType","UserContext"],"mappings":"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","file":"static/js/316.590be4fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n","import React from \"react\";\r\nimport { FaPencilAlt } from \"react-icons/fa\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport xmlJs from \"xml-js\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown, Edit, Trash, Edit2 } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { BsEye, BsTrash } from \"react-icons/bs\";\r\nimport {\r\n  CreateAccountView,\r\n  Get_RoleList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { CheckPermission } from \"../house/CheckPermission\";\r\n\r\nclass RoleList extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    rowData: [],\r\n    InsiderPermissions: {},\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Role Name\",\r\n        field: \"roleName\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 160,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params?.data?.roleName}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Role desc\",\r\n        field: \"desc\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 230,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params?.data?.desc}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions.View && (\r\n                  <BsEye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/account/updateexistingrole/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )} */}\r\n\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions.Edit && (\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <span\r\n                        style={{\r\n                          border: \"1px solid white\",\r\n                          padding: \"10px\",\r\n                          borderRadius: \"30px\",\r\n                          backgroundColor: \"rgb(212, 111, 16)\",\r\n                          marginLeft: \"3px\",\r\n                        }}\r\n                      >\r\n                        <FaPencilAlt\r\n                          className=\"\"\r\n                          size=\"20px\"\r\n                          color=\"white\"\r\n                          onClick={() =>\r\n                            history.push({\r\n                              pathname: `/app/freshlist/account/editRole/${params?.data?._id}`,\r\n                              data: params,\r\n                            })\r\n                          }\r\n                        />\r\n                      </span>\r\n                    )}\r\n                  />\r\n                )}\r\n              {/* )} */}\r\n              {/* {this.state.Deletepermisson && (\r\n                <BsTrash\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"red\"\r\n                  onClick={() => {\r\n                    this.runthisfunction(params.data.id);\r\n                  }}\r\n                />\r\n              )} */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    await Get_RoleList(pageparmission?._id, pageparmission?.database)\r\n      .then((res) => {\r\n        console.log(res?.Role);\r\n        this.setState({ rowData: res?.Role });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    const InsidePermissions = CheckPermission(\"Create User\");\r\n    console.log(InsidePermissions);\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n\r\n   \r\n  }\r\n\r\n  runthisfunction(id) {\r\n    // console.log(id);\r\n    let selectedData = this.gridApi.getSelectedRows();\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then(value => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          const formData = new FormData();\r\n          formData.append(\"user_id\", id);\r\n          this.gridApi.updateRowData({ remove: selectedData });\r\n          axiosConfig.post(`/userdelete`, formData).then(response => {});\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files[0] });\r\n  //     this.setState({ selectedName: event.target.files[0].name });\r\n  //     console.log(event.target.files[0]);\r\n  //   };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files });\r\n  //     this.setState({ selectedName: event.target.files.name });\r\n  //     console.log(event.target.files);\r\n  //   };\r\n  //   changeHandler1 = (e) => {\r\n  //     this.setState({ status: e.target.value });\r\n  //   };\r\n  //   changeHandler = (e) => {\r\n  //     this.setState({ [e.target.name]: e.target.value });\r\n  //   };\r\n  //   submitHandler = (e) => {\r\n  //     e.preventDefault();\r\n  //     const data = new FormData();\r\n  //     data.append(\"banner_title\", this.state.banner_title);\r\n  //     data.append(\"bannertype\", this.state.bannertype);\r\n  //     data.append(\"status\", this.state.status);\r\n  //     for (const file of this.state.selectedFile) {\r\n  //       if (this.state.selectedFile !== null) {\r\n  //         data.append(\"banner_img\", file, file.name);\r\n  //       }\r\n  //     }\r\n\r\n  //     axiosConfig\r\n  //       .post(\"/addbanner\", data)\r\n  //       .then((response) => {\r\n  //         console.log(response);\r\n  //         swal(\"Successful!\", \"You clicked the button!\", \"success\");\r\n  //         this.props.history.push(\"/app/freshlist/banner/bannerList\");\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"mt-2 mx-2 mr-2\">\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\">\r\n                <h1 className=\"float-left\" style={{ fontWeight: \"600\" }}>\r\n                  Created Role List\r\n                </h1>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"12\"></Col>\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" md=\"2\" sm=\"2\" xs=\"12\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() =>\r\n                              history.push(\"/app/freshlist/account/addRoleNew\")\r\n                            }\r\n                          >\r\n                            <FaPlus size={15} /> Create Role\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" sm=\"2\" md=\"2\" ms=\"12\">\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          style={{\r\n                            cursor: \"pointer\",\r\n                            backgroundColor: \"#39cccc\",\r\n                            color: \"white\",\r\n                            fontWeight: \"600\",\r\n                          }}\r\n                          className=\" float-right\"\r\n                          color=\"#39cccc\"\r\n                          onClick={() =>\r\n                            history.push(\r\n                              \"/app/freshlist/account/CreateHeirarchy\"\r\n                            )\r\n                          }\r\n                        >\r\n                          <FaPlus size={15} /> Hierarchy\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                )}\r\n            </Row>\r\n            <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-1 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    {/* <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Hub Name\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Order Id\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Phone Number\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Enter Email\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {context => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default RoleList;\r\n"],"sourceRoot":""}