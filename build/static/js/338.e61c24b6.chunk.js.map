{"version":3,"sources":["views/apps/freshlist/house/AddProduct.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AddProduct","useState","CreatAccountView","setCreatAccountView","categoryList","setcategoryList","UnitList","setUnitList","wareHouseList","setWareHouseList","subcatlist","setsubcatlist","Countries","setCountry","States","setState","Cities","setCities","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","Context","useContext","UserContext","handleInputChange","e","type","i","target","name","value","checked","document","getElementById","selectedIndex","selectedOptionText","options","text","list","test","files","length","console","log","useEffect","CreateProductXMLView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","createProduct","catch","err","localStorage","getItem","userData","AllCategoryList","_id","database","Category","UnitListView","Unit","CreateAccountList","adminDetails","lg","md","sm","className","onChange","style","marginRight","fontSize","render","history","color","onClick","push","onSubmit","preventDefault","formdata","FormData","append","input","map","ele","_attributes","_text","unitType","ProductType","MyDropDown","dropdown","swal","SaveProduct","status","key","label","required","placeholder","selecteddata","filter","subcategories","handlechangeSubcat","cat","toLowerCase","includes","whList","firstName","for","id","primaryUnit","unitQty","option","moment","tz","format","phoneinput","inputClass","country","onKeyDown","countryCodeEditable","phone","library","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","dateFormat","UserInformatio","timeZone","number","onWheel","handleFileChange","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/338.e61c24b6.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  AllCategoryList,\r\n  CreateProductXMLView,\r\n  SaveProduct,\r\n  UnitListView,\r\n  CreateWarehouseList,\r\n  CreateAccountList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst AddProduct = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [categoryList, setcategoryList] = useState([]);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [wareHouseList, setWareHouseList] = useState([]);\r\n  const [subcatlist, setsubcatlist] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [States, setState] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n\r\n    if (name == \"Unit\") {\r\n      let value = document.getElementById(\"unitType\").value;\r\n      const selectedOptionValue = e.target.value;\r\n      const selectedIndex = e.target.selectedIndex;\r\n      const selectedOptionText = e.target.options[selectedIndex]?.text;\r\n\r\n      let list = formData;\r\n      list[\"unitType\"] = selectedOptionText;\r\n      setFormData(list);\r\n    }\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else if (type == \"file\") {\r\n        if (e.target.files) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n          });\r\n        }\r\n      } else {\r\n        if (value.length) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  console.log(formData);\r\n  const changeHandler1 = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [\"status\"]: e.target.value,\r\n    });\r\n  };\r\n  const changeHandler2 = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [\"ProductType\"]: e.target.value,\r\n    });\r\n  };\r\n  // useEffect(() => {\r\n  //   console.log(formData);\r\n  // }, [formData]);\r\n  useEffect(() => {\r\n    CreateProductXMLView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData).createProduct);\r\n        setCreatAccountView(JSON.parse(jsonData)?.createProduct);\r\n        setdropdownValue(JSON.parse(jsonData)?.createProduct);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    AllCategoryList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res?.Category) {\r\n          setcategoryList(res.Category);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    UnitListView(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        console.log(res?.Unit);\r\n        setUnitList(res?.Unit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    CreateAccountList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        let value = res?.adminDetails;\r\n        if (value) {\r\n          setWareHouseList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const handleFileChange = (e, type, i) => {\r\n    const { name } = e.target;\r\n    setindex(i);\r\n    setFormData({\r\n      ...formData,\r\n      [name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    formdata.append(\"created_by\", userData?._id);\r\n    CreatAccountView?.input?.map((ele, i) => {\r\n      if (ele?.type?._attributes?.type == \"text\") {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      } else if (ele?.type?._attributes?.type == \"file\") {\r\n        formdata.append(\"file\", formData[ele?.name?._text]);\r\n      } else {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      }\r\n    });\r\n\r\n    formdata.append(\"unitType\", formData?.unitType);\r\n    formdata.append(\"addProductType\", formData?.ProductType);\r\n    CreatAccountView?.MyDropDown?.map((ele, i) => {\r\n      formdata.append(\r\n        `${ele?.dropdown?.name?._text}`,\r\n        formData[ele?.dropdown?.name?._text]\r\n      );\r\n    });\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      if (formData?.ProductType) {\r\n        SaveProduct(formdata)\r\n          .then((res) => {\r\n            console.log(res);\r\n            setFormData({});\r\n            if (res.status) {\r\n              // window.location.reload();\r\n              swal(\"Product Created Successfully\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            swal(\"Enter All Details\");\r\n          });\r\n      } else {\r\n        swal(\"error\", \"Choose Product Type\");\r\n      }\r\n    }\r\n  };\r\n  const handlechangeSubcat = (e) => {\r\n    console.log(e.target.value);\r\n    if (e.target.value != \"NA\") {\r\n      let selecteddata = categoryList?.filter(\r\n        (ele, i) => ele?.name == e.target.value\r\n      );\r\n      console.log(selecteddata[0]?.subcategories);\r\n      setsubcatlist(selecteddata[0]?.subcategories);\r\n    } else {\r\n      swal(\"Select Category\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row>\r\n            <Col lg=\"8\" md=\"8\" sm=\"8\" className=\"mb-1 mt-1\">\r\n              <div className=\"px-2\">\r\n                <h3 className=\"mb-2 mx-2\">Add Product Type</h3>\r\n                <div className=\"form-label-group\" onChange={changeHandler2}>\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    // value={formData[\"status\"]}\r\n                    name=\"ProductType\"\r\n                    className=\"ml-1\"\r\n                    value=\"Product\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\", fontSize: \"18px\" }}>\r\n                    <strong>Add Product</strong>\r\n                  </span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"ProductType\"\r\n                    className=\"ml-1\"\r\n                    value=\"Item\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\", fontSize: \"18px\" }}>\r\n                    <strong>Add Item</strong>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"container p-2 mr-2\">\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\"btn  float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/freshlist/house/houseProductList\")\r\n                      }>\r\n                      Go back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* <hr /> */}\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {dropdownValue &&\r\n                  dropdownValue?.MyDropDown?.map((ele, i) => {\r\n                    if (ele?.dropdown?.name?._text == \"category\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={(e) => {\r\n                                handleInputChange(e);\r\n                                handlechangeSubcat(e);\r\n                              }}>\r\n                              <option value=\"NA\">--Select Category--</option>\r\n                              {categoryList?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text == \"SubCategory\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}>\r\n                              <option value=\"NA\">--Select SubCategory--</option>\r\n                              {subcatlist?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (\r\n                      ele?.dropdown?.name?._text\r\n                        ?.toLowerCase()\r\n                        ?.includes(\"arehouse\")\r\n                    ) {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1 mt-1\">\r\n                              {ele?.dropdown?.label?._text} *\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select WareHouse\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}>\r\n                              <option value=\"NA\">--Select WareHouse--</option>\r\n\r\n                              {wareHouseList &&\r\n                                wareHouseList?.map((whList) => (\r\n                                  <option value={whList?._id} key={whList?._id}>\r\n                                    {whList?.firstName}\r\n                                  </option>\r\n                                ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text == \"Unit\") {\r\n                      return (\r\n                        <>\r\n                          {formData?.ProductType == \"Item\" ? (\r\n                            <>\r\n                              <Col lg=\"4\" md=\"4\">\r\n                                <div className=\"\">\r\n                                  <label className=\"mb-1\" for=\"unit\">\r\n                                    Select Unit\r\n                                  </label>\r\n                                  <select\r\n                                    id=\"unitType\"\r\n                                    className=\"form-control\"\r\n                                    name=\"Unit\"\r\n                                    placeholder=\"selecetedUnit\"\r\n                                    // value={product?.selecetedUnit}\r\n                                    onChange={handleInputChange}>\r\n                                    <option value=\"\">--select Unit--</option>\r\n                                    {UnitList &&\r\n                                      UnitList?.map((cat) => (\r\n                                        <option\r\n                                          value={cat?.primaryUnit}\r\n                                          key={cat?._id}>\r\n                                          {cat?.primaryUnit}\r\n                                        </option>\r\n                                      ))}\r\n\r\n                                    <option value=\"kg\">Kilogram (kg)</option>\r\n                                    <option value=\"Pcs\">Pieces (Pcs)</option>\r\n                                    <option value=\"g\">Gram (g)</option>\r\n                                    <option value=\"tonne\">\r\n                                      Metric Ton (tonne)\r\n                                    </option>\r\n                                    <option value=\"m\">Meter (m)</option>\r\n                                    <option value=\"cm\">Centimeter (cm)</option>\r\n                                    <option value=\"mm\">Millimeter (mm)</option>\r\n                                    <option value=\"in\">Inch (in)</option>\r\n                                    <option value=\"ft\">Foot (ft)</option>\r\n                                    <option value=\"m3\">Cubic Meter (m³)</option>\r\n                                    <option value=\"L\">Liter (L)</option>\r\n                                    <option value=\"ml\">Milliliter (ml)</option>\r\n                                    <option value=\"s\">Second (s)</option>\r\n                                    <option value=\"min\">Minute (min)</option>\r\n                                    <option value=\"hr\">Hour (hr)</option>\r\n                                    <option value=\"°C\">Celsius (°C)</option>\r\n                                    <option value=\"°F\">Fahrenheit (°F)</option>\r\n                                    <option value=\"Pa\">Pascal (Pa)</option>\r\n                                    <option value=\"bar\">Bar (bar)</option>\r\n                                    <option value=\"m/s\">\r\n                                      Meters per Second (m/s)\r\n                                    </option>\r\n                                    <option value=\"km/h\">\r\n                                      Kilometers per Hour (km/h)\r\n                                    </option>\r\n                                    <option value=\"A\">Ampere (A)</option>\r\n                                    <option value=\"V\">Volt (V)</option>\r\n                                    <option value=\"W\">Watt (W)</option>\r\n                                    <option value=\"kW\">Kilowatt (kW)</option>\r\n                                  </select>\r\n                                </div>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\">\r\n                                <Label className=\"mb-1\">\r\n                                  {ele?.dropdown?.label?._text}\r\n                                </Label>\r\n                                <CustomInput\r\n                                  required\r\n                                  id=\"unitType\"\r\n                                  type=\"select\"\r\n                                  placeholder=\"Select Category\"\r\n                                  name={ele?.dropdown?.name?._text}\r\n                                  value={formData[ele?.dropdown?.name?._text]}\r\n                                  onChange={handleInputChange}>\r\n                                  <option value=\"NA\">--Select Unit--</option>\r\n                                  {UnitList &&\r\n                                    UnitList?.map((cat) => (\r\n                                      <option\r\n                                        value={cat?.unitQty}\r\n                                        key={cat?._id}>\r\n                                        {cat?.primaryUnit}\r\n                                      </option>\r\n                                    ))}\r\n                                </CustomInput>\r\n                              </Col>\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <Col lg=\"4\" md=\"4\">\r\n                          <FormGroup>\r\n                            <Label>{ele?.dropdown?.label?._text}</Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}>\r\n                              <option value=\"\">--Select Role--</option>\r\n                              {ele?.dropdown?.option?.map((option, index) => (\r\n                                <option\r\n                                  key={index}\r\n                                  value={option?._attributes?.value}>\r\n                                  {option?._attributes?.value}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    }\r\n                  })}\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                            ?.name?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n                      {dropdownValue?.CreateAccount?.MyDropdown?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col> */}\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.input?.map((ele, i) => {\r\n                    {\r\n                      /* console.log(Context?.UserInformatio?.dateFormat); */\r\n                    }\r\n                    // console.log(Countries);\r\n                    // console.log(States);\r\n                    const convertedTime = moment(\"2022-08-05T12:00:00\")\r\n                      .tz(\"America/New_York\")\r\n                      .format(\"D MMM, YYYY HH:mm\");\r\n\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"us\"}\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [ele?.name?._text]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        console.log(ele);\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Countries}\r\n                                onChange={(country) => {\r\n                                  setCountry(country);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Country\"]: country?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  Countries?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={States}\r\n                                onChange={(State) => {\r\n                                  setState(State);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  States?.countryCode,\r\n                                  States?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Cities}\r\n                                onChange={(City) => {\r\n                                  setCities(City);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            {ele?.type?._attributes?.type == \"date\" ? (\r\n                              <>\r\n                                <Col\r\n                                  className=\"mt-1\"\r\n                                  key={i}\r\n                                  lg=\"4\"\r\n                                  md=\"4\"\r\n                                  sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      dateFormat={\r\n                                        Context?.UserInformatio?.dateFormat\r\n                                      }\r\n                                      value={\r\n                                        moment(formData[ele?.name?._text])\r\n                                          .tz(Context?.UserInformatio?.timeZone)\r\n                                          .format(\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          )\r\n                                        // formData[ele?.name?._text]\r\n                                      }\r\n                                      // value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Col\r\n                                  className=\"mt-1\"\r\n                                  key={i}\r\n                                  lg=\"4\"\r\n                                  md=\"4\"\r\n                                  sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {!!ele?.number ? (\r\n                            <>\r\n                              <Col\r\n                                className=\"mt-1\"\r\n                                key={i}\r\n                                lg=\"4\"\r\n                                md=\"4\"\r\n                                sm=\"12\">\r\n                                <FormGroup key={i}>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n\r\n                                  <Input\r\n                                    onWheel={(e) => {\r\n                                      e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                    }}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <FormGroup key={i}>\r\n                                {ele?.type?._attributes?.type &&\r\n                                ele?.type?._attributes?.type == \"file\" ? (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      //   value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleFileChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n\r\n                                {/* <Label className=\"mb-1\">\r\n                                  {ele?.label?._text}\r\n                                </Label>\r\n\r\n                                <Input\r\n                                  className=\"form-control\"\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) => {\r\n                                    // const value = e.target.value;\r\n                                    // // Use regular expression to allow only numbers\r\n                                    // const numericValue = value.replace(\r\n                                    //   /\\D/g,\r\n                                    //   \"\"\r\n                                    // );\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )} */}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n\r\n              <hr />\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-0\">Status</Label>\r\n                  <div className=\"form-label-group\" onChange={changeHandler1}>\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      // value={formData[\"status\"]}\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\">\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddProduct;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}