{"version":3,"sources":["views/apps/freshlist/customer/HRM/RecPLace/offerletterForm.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["OfferLetterForm","useState","candidateName","candidateEmail","candidateNumber","formData","setFormData","handleInputChange","e","target","name","value","onSubmit","preventDefault","console","log","row","for","sm","type","id","onChange","placeholder","size","offset","color","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"+QAoFeA,UAjFS,WACtB,MAAgCC,mBAAS,CACvCC,cAAe,GACfC,eAAgB,GAChBC,gBAAiB,KACjB,mBAJKC,EAAQ,KAAEC,EAAW,KAMtBC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdL,EAAY,2BAAKD,GAAQ,kBAAGK,EAAOC,MASrC,OACE,kBAAC,IAAI,KACH,kBAAC,IAAQ,KACP,4BAAI,qBACJ,kBAAC,IAAI,CAACC,SAVS,SAACJ,GACpBA,EAAEK,iBACFC,QAAQC,IAAI,+BAAgCV,KAStC,kBAAC,IAAS,CAACW,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,gBAAgBC,GAAI,GAAG,mBAGlC,kBAAC,IAAG,CAACA,GAAI,GACP,kBAAC,IAAK,CACJC,KAAK,OACLT,KAAK,gBACLU,GAAG,gBACHT,MAAON,EAASH,cAChBmB,SAAUd,EACVe,YAAY,iBAIlB,kBAAC,IAAS,CAACN,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,iBAAiBC,GAAI,GAAG,oBAGnC,kBAAC,IAAG,CAACA,GAAI,GACP,kBAAC,IAAK,CACJC,KAAK,QACLT,KAAK,iBACLU,GAAG,iBACHT,MAAON,EAASF,eAChBkB,SAAUd,EACVe,YAAY,kBAIlB,kBAAC,IAAS,CAACN,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,kBAAkBC,GAAI,GAAG,2BAGpC,kBAAC,IAAG,CAACA,GAAI,GACP,kBAAC,IAAK,CACJC,KAAK,MACLT,KAAK,kBACLU,GAAG,kBACHT,MAAON,EAASD,gBAChBiB,SAAUd,EACVe,YAAY,yBAIlB,kBAAC,IAAS,CAACN,KAAG,GACZ,kBAAC,IAAG,CAACE,GAAI,CAAEK,KAAM,EAAGC,OAAQ,IAC1B,kBAAC,IAAM,CAACC,MAAM,UAAUN,KAAK,UAAS,8B,iCCzEpD,2EAEIO,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBd,IAAKa,IAAUE,KACfC,MAAOH,IAAUE,KACjBE,OAAQJ,IAAUE,KAClBG,SAAUL,IAAUE,KACpBI,IAAKC,cACLC,UAAWR,IAAUS,OACrBC,UAAWV,IAAUW,QAMnBC,EAAY,SAAmBC,GACjC,IAAIL,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBvB,EAAM0B,EAAM1B,IACZkB,EAAWQ,EAAMR,SACjBF,EAAQU,EAAMV,MACdC,EAASS,EAAMT,OACfU,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAOhB,GAElDoB,EAAUC,0BAAgBC,IAAWX,IAAWrB,GAAM,MAAegB,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBK,GAMtM,MAJY,aAARI,IACFC,EAAWV,SAAWA,GAGJe,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,MAIfL,EAAUd,UAAYA,EACtBc,EAAUW,aA1BS,CACjBjB,IAAK,OA0BQM","file":"static/js/384.cb5d37ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, CardBody, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\n\r\nconst OfferLetterForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    candidateName: '',\r\n    candidateEmail: '',\r\n    candidateNumber: '',\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Offer Letter Form submitted:', formData);\r\n   \r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h2>Offer Letter Form</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup row>\r\n            <Label for=\"candidateName\" sm={4}>\r\n              Candidate Name:\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"candidateName\"\r\n                id=\"candidateName\"\r\n                value={formData.candidateName}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter Name\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"candidateEmail\" sm={4}>\r\n              Candidate Email:\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"candidateEmail\"\r\n                id=\"candidateEmail\"\r\n                value={formData.candidateEmail}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"candidateNumber\" sm={4}>\r\n              Candidate Phone Number:\r\n            </Label>\r\n            <Col sm={8}>\r\n              <Input\r\n                type=\"tel\"\r\n                name=\"candidateNumber\"\r\n                id=\"candidateNumber\"\r\n                value={formData.candidateNumber}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter Phone Number\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Col sm={{ size: 8, offset: 4 }}>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Create Offer Letter\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OfferLetterForm;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}