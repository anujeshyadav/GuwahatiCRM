{"version":3,"sources":["views/pages/profile/UserProfile.js","../node_modules/reactstrap/es/FormGroup.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["UserProfile","props","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","changeHandler","e","value","submitHandler","preventDefault","Loading","userData","JSON","parse","localStorage","getItem","data","FormData","append","state","email","password","cnfmPassword","EditUserProfile","accountId","then","response","console","log","updateUser","user","context","setUserInformatio","setItem","stringify","status","swal","catch","error","firstName","lastName","Countries","States","Cities","selectedCountry","selectedState","LoginData","formData","countries","Country","getAllCountries","this","pageparmission","Userinfo","UserInformatio","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","id","className","lg","md","xl","sm","style","listStyleType","onSubmit","type","placeholder","onChange","inputClass","options","getOptionLabel","getOptionValue","country","prevState","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","color","icon","size","label","defaultChecked","Ripple","React","Component","contextType","UserContext","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","CheckBoxesVuexy","checked","onClick"],"mappings":"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","file":"static/js/177.da9a2b25.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardTitle,\r\n  CustomInput,FormGroup ,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport CheckBoxesVuexy from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Check } from \"react-feather\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport swal from \"sweetalert\";\r\nimport { EditUserProfile } from \"../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../assets/scss/pages/users-profile.scss\";\r\nimport UserContext from \"../../../context/Context\";\r\nimport moment from \"moment-timezone\";\r\n\r\nclass UserProfile extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName:\"\",\r\n      lastName:\"\",\r\n      Countries:[],\r\n      States:[],\r\n      Cities:[],\r\n      selectedCountry: \"\",\r\n      selectedState: \"\",\r\n      name: \"\",\r\n      LoginData: {},\r\n      formData:\"\",\r\n      // Update_User_details: {},\r\n      email: \"\",\r\n      cnfmPassword: \"\",\r\n      password: \"\",\r\n      // Role: \"\",\r\n      // adminimg: \"\",\r\n      // Date_format: \"\",\r\n      // Date_Time_format: \"\",\r\n      // Currency: \"\",\r\n      // selectedName: \"\",\r\n      // Locale: \"\",\r\n      // Loading: \"Submit\",\r\n      // T_Zone: \"\",\r\n      // selectedFile: null,\r\n      // data: {},\r\n    };\r\n  }\r\n\r\n  //Image Submit Handler\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    // console.log(event.target.files[0]);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const countries = Country.getAllCountries();\r\n    this.setState({ countries });\r\n    console.log(this.context);\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    // console.log(pageparmission);\r\n    this.setState({ LoginData: pageparmission });\r\n\r\n    this.setState({\r\n      // data: response.data.data,\r\n      name: pageparmission?.name,\r\n      email: pageparmission?.email,\r\n     cnfmPassword: pageparmission?.Userinfo?.password,\r\n    });\r\n    // if (\r\n    //   pageparmission?.currency == undefined ||\r\n    //   pageparmission?.currency == null\r\n    // ) {\r\n    //   this.setState({ Currency: \"USD\" });\r\n    // }\r\n    // console.log(this.context);\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ Loading: \"Loading...\" });\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const data = new FormData();\r\n    data.append(\"name\", this.state.name);\r\n    data.append(\"email\", this.state.email);\r\n    // data.append(\"id\", userData?._id);\r\n    if (this.state.password) {\r\n      data.append(\"Password\", this.state.password);\r\n    }\r\n    data.append(\"cnfmPassword\", this.state.cnfmPassword);\r\n    // data.append(\"dateFormat\", this.state.Date_format);\r\n    // data.append(\"dateTimeFormat\", this.state.Date_Time_format);\r\n    // data.append(\"locale\", this.state.Locale);\r\n    // data.append(\"timeZone\", this.state.T_Zone);\r\n    // data.append(\"currency\", this.state.Currency);\r\n    // if (this.state.selectedFile !== null) {\r\n    //   data.append(\"file\", this.state.selectedFile);\r\n    // }\r\n    if (this.state.password) {\r\n      if (this.state.password == this.state.cnfmPassword) {\r\n        EditUserProfile(userData?.accountId, data)\r\n          .then((response) => {\r\n            console.log(response);\r\n            let userData = { ...response?.updateUser[0], ...response?.user };\r\n            this.context?.setUserInformatio(userData);\r\n            localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n\r\n            if (response?.status) {\r\n              swal(\"Success!\", \"Updated Successfully\", \"success\");\r\n              this.setState({ Loading: \"Submit\" });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            swal(\"Error!\", \"Something went Wrong\", \"error\");\r\n            this.setState({ Loading: \"Submit\" });\r\n            console.log(error.response);\r\n          });\r\n      } else {\r\n        swal(\"Password Does Not Match\");\r\n        this.setState({ Loading: \"Submit\" });\r\n      }\r\n    } else {\r\n      EditUserProfile(userData?.accountId, data)\r\n        .then((response) => {\r\n          console.log(response);\r\n          let userData = { ...response?.updateUser[0], ...response?.user };\r\n          this.context?.setUserInformatio(userData);\r\n          localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n\r\n          if (response?.status) {\r\n            swal(\"Success!\", \"Updated Successfully\", \"success\");\r\n            this.setState({ Loading: \"Submit\" });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"object\");\r\n          swal(\"Error!\", \"Something went Wrong\", \"error\");\r\n          console.log(error.response);\r\n          this.setState({ Loading: \"Submit\" });\r\n        });\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.context?.UserInformatio);\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Profile\"\r\n          breadCrumbParent=\"Pages\"\r\n          breadCrumbActive=\"Profile\"\r\n        />\r\n        <div id=\"user-profile\">\r\n          <Row className=\"m-0 justify-content-center\">\r\n            <Col lg=\"4\" md=\"4\" xl=\"4\" sm=\"12\">\r\n              <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\r\n                <div className=\"profile-img text-center st-1\">\r\n                  {/* {this.state.LoginData?.profileImage ? (\r\n                    <>\r\n                      <img\r\n                        src={`http://65.0.96.247:8000//Images/${this.context?.UserInformatio?.profileImage}`}\r\n                        alt=\"adminimg\"\r\n                        className=\"img-fluid img-border rounded-circle box-shadow-1 mt-1\"\r\n                        width=\"250px\"\r\n                        height=\"280px\"\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <img\r\n                        src={`http://65.0.96.247:8000//Images/${this.context?.UserInformatio?.profileImage}`}\r\n                        alt=\"adminimg\"\r\n                        className=\"img-fluid img-border rounded-circle box-shadow-1 mt-1\"\r\n                        width=\"210px\"\r\n                        height=\"280px\"\r\n                      />\r\n                    </>\r\n                  )} */}\r\n                  <ul\r\n                    style={{ listStyleType: \"none\" }}\r\n                    className=\"lst-1 usrdatlist\"\r\n                  >\r\n                    <li className=\"lst-2 p-1\">\r\n                      FirstName:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.state.LoginData?.name}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      LastName:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.state.LoginData?.name}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      Email:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.email}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      Country:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.email}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      State:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.email}</strong>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"lst-2 p-1\">\r\n                      City:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.email}</strong>\r\n                      </span>\r\n                    </li>\r\n                    {/* <li className=\"lst-2 p-1\">\r\n                      Role:\r\n                      <span className=\"lst-3\">\r\n                        <strong>{this.context?.UserInformatio?.Role}</strong>\r\n                      </span>\r\n                    </li> */}\r\n                  </ul>\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              sm=\"12\"\r\n              xl=\"8\"\r\n              lg=\"8\"\r\n              md=\"8\"\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\r\n                <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n                  <div className=\"st-2\">\r\n                    <CardTitle>\r\n                      <h4 className=\"mb-3\">Edit Profile</h4>\r\n                      <Col></Col>\r\n                    </CardTitle>\r\n\r\n                    <Row className=\"m-0\">\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>FirstName</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          placeholder=\"FirstName\"\r\n                          value={this.state.name}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>LastName</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"lastName\"\r\n                          placeholder=\"LastName\"\r\n                          value={this.state.name}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Email</Label>\r\n                        <Input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n                      <Col  lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>Select Country</Label>\r\n                                <Select\r\n                                  inputClass=\"countryclass\"\r\n                                  className=\"countryclassnw\"\r\n                                  options={Country.getAllCountries()}\r\n                                  getOptionLabel={(options) => {\r\n                                    return options[\"name\"];\r\n                                  }}\r\n                                  getOptionValue={(options) => {\r\n                                    return options[\"name\"];\r\n                                  }}\r\n                                  value={this.state.Countries.name}\r\n                                  onChange={(country) => {\r\n                                    this.setState({country})\r\n                                  this.setState((prevState) => ({\r\n                                  formData: {\r\n                                        ...prevState.formData,\r\n                                        [\"Country\"]: country?.name,\r\n                                      },\r\n                                    }));\r\n                                  }}\r\n                                />\r\n                               \r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>Select State</Label>\r\n                                <Select\r\n                                  options={State?.getStatesOfCountry(\r\n                                    this.state.Countries?.isoCode\r\n                                  )}\r\n                                  getOptionLabel={(options) => {\r\n                                    return options[\"name\"];\r\n                                  }}\r\n                                  getOptionValue={(options) => {\r\n                                    return options[\"name\"];\r\n                                  }}\r\n                                  value={this.state.States.name}\r\n                                  //// onChange={(State) => {\r\n                                  //   setState(State);\r\n                                  //   setFormData({\r\n                                  //     ...formData,\r\n                                  //     [\"State\"]: State?.name,\r\n                                  //   });\r\n                                  // }}\r\n                                  onChange={(State) => {\r\n                                    this.setState({State})\r\n                                  this.setState((prevState) => ({\r\n                                  formData: {\r\n                                        ...prevState.formData,\r\n                                        [\"State\"]: State?.name,\r\n                                      },\r\n                                    }));\r\n                                  }}\r\n                                />\r\n                               \r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col  lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>Select City</Label>\r\n                                <Select\r\n                                  options={City?.getCitiesOfState(\r\n                                    this.state.States?.countryCode,\r\n                                    this.state.States?.isoCode\r\n                                  )}\r\n                                  getOptionLabel={(options) => {\r\n                                    return options[\"name\"];\r\n                                  }}\r\n                                  getOptionValue={(options) => {\r\n                                    return options[\"name\"];\r\n                                  }}\r\n                                  value={this.state.Cities}\r\n                                  // onChange={(City) => {\r\n                                  //   setCities(City);\r\n                                  //   setFormData({\r\n                                  //     ...formData,\r\n                                  //     [\"City\"]: City?.name,\r\n                                  //   });\r\n                                  // }}\r\n                                />\r\n                             </FormGroup>\r\n                            </Col>\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Password</Label>\r\n                        <Input\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"Password\"\r\n                          value={this.state.password}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Confirm Password</Label>\r\n                        <Input\r\n                          type=\"password\"\r\n                          name=\"cnfmPassword\"\r\n                          placeholder=\"Reset password\"\r\n                          value={this.state.cnfmPassword}\r\n                          onChange={this.changeHandler}\r\n                        />\r\n                      </Col>\r\n                      \r\n                      {/* <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>User Image</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"file\"\r\n                          name=\"profileImage\"\r\n                          onChange={this.onChangeHandler}\r\n                        />\r\n                      </Col> */}\r\n                      {/* <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Locale</Label>\r\n                        <CustomInput\r\n                          name=\"Locale\"\r\n                          value={this.state.Locale}\r\n                          onChange={this.changeHandler}\r\n                          required\r\n                          type=\"select\"\r\n                        >\r\n                          <option value=\"NA\">--Select--</option>\r\n                          <option value=\"en_US\">English (United States)</option>\r\n                          <option value=\"en_GB\">\r\n                            English (United Kingdom)\r\n                          </option>\r\n                          <option value=\"fr_FR\">French (France)</option>\r\n                          <option value=\"es_ES\">es_ES Spanish (Spain)</option>\r\n                          <option value=\"de_DE\">German (Germany)</option>\r\n                          <option value=\"it_IT\">Italian (Italy)</option>\r\n                          <option value=\"ja_JP\">Japanese (Japan)</option>\r\n                          <option value=\"zh_CN\">Chinese ( China)</option>\r\n                          <option value=\"ru_RU\"> Russian (Russia)</option>\r\n                          <option value=\"ar_SA\">Arabic (Saudi Arabia)</option>\r\n                          <option value=\"pt_BR\">Portuguese (Brazil)</option>\r\n                          <option value=\"ko_KR\">Korean (South Korea)</option>\r\n\r\n                          <option value=\"hi_IN\">Hindi(India)</option>\r\n                          <option value=\"tr_TR\">Turkish (Turkey)</option>\r\n                          <option value=\"nl_NL\">Dutch (Netherlands)</option>\r\n                          <option value=\"sv_SE\">Swedish (Sweden)</option>\r\n                          <option value=\"pl_PL\">Polish (Poland)</option>\r\n                          <option value=\"no_NO\">Norwegian (Norway)</option>\r\n                          <option value=\"fi_FI\">Finnish (Finland)</option>\r\n                          <option value=\"da_DK\">Danish (Denmark)</option>\r\n                        </CustomInput>\r\n                      </Col>\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Time Zone</Label>\r\n                        <CustomInput\r\n                          name=\"T_Zone\"\r\n                          value={this.state.T_Zone}\r\n                          onChange={this.changeHandler}\r\n                          required\r\n                          type=\"select\"\r\n                        >\r\n                          <option value=\"us\">--Select--</option>\r\n                          <option value=\"Etc/UTC\">\r\n                            Coordinated Universal Time (UTC)\r\n                          </option>\r\n                          <option value=\"GMT\">Greenwich Mean Time (GMT)</option>\r\n                          <option value=\"Europe/London-BST\">\r\n                            British Summer Time (BST)\r\n                          </option>\r\n                          <option value=\"Europe/Berlin-CST\">\r\n                            Central European Time (CET)\r\n                          </option>\r\n                          <option value=\"Europe/Berlin-CEST\">\r\n                            Central European Summer Time (CEST)\r\n                          </option>\r\n\r\n                          <option value=\"America/Los_Angeles-PST\">\r\n                            Pacific Standard Time (PST)\r\n                          </option>\r\n                          <option value=\"America/Los_Angeles-PDT\">\r\n                            Pacific Daylight Time (PDT)\r\n                          </option>\r\n                          <option value=\"CST\">\r\n                            (Central Standard Time - CST)\r\n                          </option>\r\n                          <option value=\"America/Phoenix-MST\">\r\n                            (Mountain Standard Time - MST)\r\n                          </option>\r\n                          <option value=\"America/Denver-MDT\">\r\n                            (Mountain Daylight Time - MDT)\r\n                          </option>\r\n                          <option value=\"America/Chicago-CDT\">\r\n                            (Central Daylight Time - CDT)\r\n                          </option>\r\n                          <option value=\"America/New_York-EDT\">\r\n                            Eastern Daylight Time (EDT)\r\n                          </option>\r\n                          <option value=\"Pacific/Honolulu -HST\">\r\n                            Hawaii Standard Time (HST)\r\n                          </option>\r\n                          <option value=\"America/Anchorage-AKST\">\r\n                            Alaska Standard Time (AKST)\r\n                          </option>\r\n                          <option value=\"America/Anchorage-AKDT\">\r\n                            Alaska Daylight Time (AKDT)\r\n                          </option>\r\n                          <option value=\"Australia/Sydney-AEST\">\r\n                            Australian Eastern Standard Time (AEST)\r\n                          </option>\r\n                          <option value=\"Australia/Sydney-AEDT\">\r\n                            Australian Eastern Daylight Time (AEDT)\r\n                          </option>\r\n                          <option value=\"Asia/Tokyo-JST\">\r\n                            Japan Standard Time (JST)\r\n                          </option>\r\n                          <option value=\"Asia/Shanghai-CST\">\r\n                            China Standard Time (CST)\r\n                          </option>\r\n                          <option value=\"Asia/Calcutta-IST\">\r\n                            Indian Standard Time (IST)\r\n                          </option>\r\n                        </CustomInput>\r\n                      </Col> */}\r\n                      {/* <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Date-Format</Label>\r\n                        <CustomInput\r\n                          name=\"Date_format\"\r\n                          value={this.state.Date_format}\r\n                          onChange={this.changeHandler}\r\n                          required\r\n                          type=\"select\"\r\n                        >\r\n                          <option value=\"us\">--Select--</option>\r\n\r\n                          <option value=\"YYYY-MM-DD\">\r\n                            YYYY-MM-DD (e.g., 2023-10-16)\r\n                          </option>\r\n                          <option value=\"MM/DD/YYYY\">\r\n                            MM/DD/YYYY (e.g., 10/16/2023)\r\n                          </option>\r\n                          <option value=\"DD/MM/YYYY\">\r\n                            DD/MM/YYYY (e.g., 16/10/2023)\r\n                          </option>\r\n                          <option value=\"MMM D, YYYY\">\r\n                            MMM D, YYYY (e.g., Oct 16, 2023)\r\n                          </option>\r\n                          <option value=\"D MMM, YYYY\">\r\n                            D MMM, YYYY (e.g., 16 Oct, 2023)\r\n                          </option>\r\n                          <option value=\"MMMM D, YYYY\">\r\n                            MMMM D, YYYY (e.g., October 16, 2023)\r\n                          </option>\r\n                          <option value=\"D of MMMM, YYYY\">\r\n                            D of MMMM, YYYY (e.g., 16 of October, 2023)\r\n                          </option>\r\n                        </CustomInput>\r\n                      </Col>\r\n                      <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Date-Time-Format</Label>\r\n                        <CustomInput\r\n                          name=\"Date_Time_format\"\r\n                          value={this.state.Date_Time_format}\r\n                          onChange={this.changeHandler}\r\n                          required\r\n                          type=\"select\"\r\n                        >\r\n                          <option value=\"us\">--Select--</option>\r\n\r\n                          <option value=\"YYYY-MM-DD HH:mm:ss\">\r\n                            YYYY-MM-DD HH:mm:ss (e.g., 2023-10-16 15:30:45)\r\n                          </option>\r\n                          <option value=\"MM/DD/YYYY h:mm A\">\r\n                            MM/DD/YYYY h:mm A (e.g., 10/16/2023 3:30 PM)\r\n                          </option>\r\n                          <option value=\"DD/MM/YYYY HH:mm\">\r\n                            DD/MM/YYYY HH:mm (e.g., 16/10/2023 15:30)\r\n                          </option>\r\n                          <option value=\"MMM D, YYYY h:mm A\">\r\n                            MMM D, YYYY h:mm A (e.g., Oct 16, 2023 3:30 PM)\r\n                          </option>\r\n                          <option value=\"D MMM, YYYY HH:mm\">\r\n                            D MMM, YYYY HH:mm (e.g., 16 Oct, 2023 15:30)\r\n                          </option>\r\n                          <option value=\"MMMM D, YYYY h:mm A\">\r\n                            MMMM D, YYYY h:mm A (e.g., October 16, 2023 3:30 PM)\r\n                          </option>\r\n                          <option value=\"D of MMMM, YYYY HH:mm\">\r\n                            D of MMMM, YYYY HH:mm (e.g., 16 of October, 2023\r\n                            15:30)\r\n                          </option>\r\n                        </CustomInput>\r\n                      </Col> */}\r\n                      {/* <Col sm=\"12\" lg=\"6\" md=\"6\" className=\"p-1\">\r\n                        <Label>Currency</Label>\r\n                        <CustomInput\r\n                          name=\"Currency\"\r\n                          value={this.state.Currency}\r\n                          onChange={this.changeHandler}\r\n                          required\r\n                          type=\"select\"\r\n                        >\r\n                          <option value=\"NS\">--Select--</option>\r\n                          <option value=\"USD_$\">USD</option>\r\n                          <option value=\"AED_AED\">AED</option>\r\n                          <option value=\"ARS_$\">ARS</option>\r\n                          <option value=\"AUD_$\">AUD</option>\r\n                          <option value=\"BGN_лв\">BGN</option>\r\n                          <option value=\"BRL_R$\">BRL</option>\r\n                          <option value=\"BSD_$\">BSD</option>\r\n                          <option value=\"CAD_$\">CAD</option>\r\n                          <option value=\"CLP_$\">CLP</option>\r\n                          <option value=\"CNY_¥\">CNY</option>\r\n                          <option value=\"COP_$\">COP</option>\r\n                          <option value=\"CZK_Kč\">CZK</option>\r\n                          <option value=\"DKK_kr\">DKK</option>\r\n                          <option value=\"DOP_RD$\">DOP</option>\r\n                          <option value=\"EGP_£\">EGP</option>\r\n                          <option value=\"EUR_€\">EUR</option>\r\n                          <option value=\"FJD_$\">FJD</option>\r\n                          <option value=\"GBP_£\">GBP</option>\r\n                          <option value=\"GTQ_Q\">GTQ</option>\r\n                          <option value=\"HKD_$\">HKD</option>\r\n                          <option value=\"HUF_Ft\">HUF</option>\r\n                          <option value=\"IDR_Rp\">IDR</option>\r\n                          <option value=\"ILS_₪\">ILS</option>\r\n                          <option value=\"INR_₹\">INR</option>\r\n                          <option value=\"ISK_kr\">ISK</option>\r\n                          <option value=\"JPY_¥\">JPY</option>\r\n                          <option value=\"KRW_₩\">KRW</option>\r\n                          <option value=\"KZT_лв\">KZT</option>\r\n                          <option value=\"MXN_$\">MXN</option>\r\n                          <option value=\"MYR_RM\">MYR</option>\r\n                          <option value=\"NOK_kr\">NOK</option>\r\n                          <option value=\"NZD_$\">NZD</option>\r\n                          <option value=\"PAB_B/.\">PAB</option>\r\n                          <option value=\"PEN_S/.\">PEN</option>\r\n                          <option value=\"PHP_₱\">PHP</option>\r\n                          <option value=\"PKR_₨\">PKR</option>\r\n                          <option value=\"PLN_zł\">PLN</option>\r\n                          <option value=\"PYG_Gs\">PYG</option>\r\n                          <option value=\"RON_lei\">RON</option>\r\n                          <option value=\"RUB_₽\">RUB</option>\r\n                          <option value=\"SEK_kr\">SEK</option>\r\n                          <option value=\"SGD_$\">SGD</option>\r\n                          <option value=\"THB_฿\">THB</option>\r\n                          <option value=\"TWD_NT$\">TWD</option>\r\n                          <option value=\"UAH_₴\">UAH</option>\r\n                          <option value=\"UYU_$U\">UYU</option>\r\n                        </CustomInput>\r\n                      </Col> */}\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <CheckBoxesVuexy\r\n                          color=\"primary\"\r\n                          className=\"mb-1 mx-1\"\r\n                          icon={<Check className=\"vx-icon\" size={16} />}\r\n                          label=\" I accept the terms & conditions.\"\r\n                          defaultChecked={true}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <Button.Ripple color=\"primary\" type=\"submit\">\r\n                        {this.state.Loading}\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default UserProfile;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}