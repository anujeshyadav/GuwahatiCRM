{"version":3,"sources":["views/apps/freshlist/order/CreateOrder.js"],"names":["GrandTotal","SelectedITems","CreateOrder","args","useState","setIndex","error","ProductList","setProductList","PartyList","setPartyList","PartyId","setPartyId","UnitList","setUnitList","setPriceTotal","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","productId","availableQty","qty","price","totalprice","unitQty","product","setProduct","handleRequredQty","e","index","avalaibleSize","target","value","name","list","length","map","val","handleUnit","unt","console","log","subtotal","reduce","acc","tax","discountAmount","Grandtotals","useEffect","userId","JSON","parse","localStorage","getItem","_id","ProductListView","then","res","Product","catch","err","CreatePartyList","Party","UnitListView","Unit","userInfo","addMoreProduct","removeMoreProduct","i","newFormValues","splice","amt","a","b","setGrandTotalAmt","onRemove1","selectedList","removedItem","className","render","history","color","size","onClick","push","onSubmit","preventDefault","fullname","firstName","lastName","ObjOrder","fullName","address","currentAddress","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","swal","SaveOrder","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","handleSelectionParty","onRemove","displayValue","type","onChange","key","prevProductList","updatedProductList","updatedProduct","Product_MRP","Size","ele","indextotal","handleSelection","disabled","placeholder","autocomplete","primaryUnit","Ripple"],"mappings":"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","file":"static/js/421.7c18e971.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n  BaseUnitListView,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst CreateOrder = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      totalprice: \"\", //no\r\n      unitQty: \"\",\r\n      // partyId: \"\", //no\r\n      // DateofDelivery: \"\", //no\r\n    },\r\n  ]);\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    if (avalaibleSize >= e.target.value) {\r\n      setIndex(index);\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      list[index][name] = value;\r\n\r\n      if (list.length > 0) {\r\n        let totalPrice = list?.map(val => {\r\n          list[index][\"totalprice\"] = val.qty * val.price;\r\n          return val.qty * val.price;\r\n        });\r\n        // setProduct((pre) =>);\r\n        // totalPrice\r\n        // setPriceTotal(totalPrice);\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const handleUnit = (e, index) => {\r\n    let unt = [...product];\r\n    unt[index].unitQty = e.target.value;\r\n    console.log(unt);\r\n    setProduct(unt);\r\n  };\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem._id);\r\n  };\r\n\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      ProductList;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b, 0);\r\n      console.log(amt);\r\n      setPriceTotal(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  let subtotal = product?.reduce((acc, product) => acc + product.price, 0);\r\n  // console.log(product);\r\n  let taxRate = 0.1; // 10%\r\n  let tax = subtotal * taxRate;\r\n  let discountRate = 0.2;\r\n  let discountAmount = subtotal * discountRate;\r\n  let Grandtotals = subtotal + tax;\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    ProductListView(userId)\r\n      .then(res => {\r\n        console.log(res?.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreatePartyList(userId)\r\n      .then(res => {\r\n        setPartyList(res.Party);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    UnitListView(userId)\r\n      .then(res => {\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        unitQty: \"\",\r\n        // DateofDelivery: \"\",\r\n        // partyId: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const fullname = UserInfo?.firstName + \" \" + UserInfo?.lastName;\r\n    const ObjOrder = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.currentAddress,\r\n      grandTotal: Grandtotals,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n    };\r\n    console.log(ObjOrder);\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveOrder(ObjOrder)\r\n        .then(res => {\r\n          swal(\"Order Created Successfully\");\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Order</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softnumen/order/orderList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1}\r\n                      displayValue=\"firstName\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={e => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"availableQty\"\r\n                          placeholder=\"AvailableSize\"\r\n                          value={product?.availableQty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          required\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <Label>Choose Unit</Label>\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"Select Type\"\r\n                        name=\"type\"\r\n                        value={product.unitQty}\r\n                        onChange={e => handleUnit(e, index)}\r\n                      >\r\n                        <option value=\"None\">None</option>\r\n                        {UnitList?.map(val => {\r\n                          return (\r\n                            <option value={val.primaryUnit}>\r\n                              {val.primaryUnit}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </CustomInput>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          disabled\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          disabled\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.price * product?.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          SubTotal:\r\n                          <strong>\r\n                            {subtotal && subtotal?.length >= 0 ? subtotal : 0}\r\n                          </strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost : <strong>RS {subtotal}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS {tax}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Discount : <strong>RS {discountAmount}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :<strong>{Grandtotals}</strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateOrder;\r\n"],"sourceRoot":""}