{"version":3,"sources":["views/apps/freshlist/parts/Addorderbycashbook.js"],"names":["GrandTotal","SelectedITems","SelectedSize","Addorderbycashbook","args","useState","setIndex","error","ProductList","setProductList","PartyList","setPartyList","PartyId","setPartyId","UnitList","setUnitList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","productId","availableQty","qty","price","totalprice","Size","unitQty","product","setProduct","handleRequredQty","e","index","avalaibleSize","console","log","target","name","value","list","Number","amt","length","map","val","reduce","a","b","subtotal","acc","useEffect","JSON","parse","localStorage","getItem","_id","userdata","ProductListView","database","then","res","Product","catch","err","CreateCustomerList","Customer","UnitListView","Unit","userInfo","addMoreProduct","unitType","removeMoreProduct","i","newFormValues","splice","onRemove1","selectedList","removedItem","className","render","history","color","size","onClick","push","onSubmit","preventDefault","fullname","firstName","lastName","payload","userId","fullName","address","currentAddress","status","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","swal","Ordercashbook","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","handleSelectionParty","onRemove","displayValue","type","onChange","key","prevProductList","updatedProductList","updatedProduct","Product_MRP","handleSelection","disabled","placeholder","min","autocomplete","updatedUnitList","primaryUnit","ele","indextotal","handleSelectionUnit","Ripple"],"mappings":"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","file":"static/js/474.0ddd5ade.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n  BaseUnitListView,\r\n  Ordercashbook,\r\n  CreateCustomerList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst Addorderbycashbook = (args) => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      totalprice: \"\", //no\r\n      Size: \"\",\r\n      unitQty: \"\",\r\n      // partyId: \"\", //no\r\n      // DateofDelivery: \"\", //no\r\n    },\r\n  ]);\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    setIndex(index);\r\n    console.log(product);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = Number(value);\r\n    // console.log(GrandTotal);\r\n\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        console.log(val.qty * val.price);\r\n        GrandTotal[index] = val.Size * val.qty * val.price;\r\n\r\n        list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n        return val.Size * val.qty * val.price;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n    }\r\n    console.log(list);\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem._id);\r\n  };\r\n\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  const handleSelectionUnit = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      // debugger;\r\n      const updatedUnitList = [...prevProductList];\r\n      const updatedProduct = { ...updatedUnitList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem.unitQty;\r\n      updatedProduct.unitQty = selectedItem.primaryUnit;\r\n      updatedUnitList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        // console.log(ele?.qty * ele.price * SelectedSize[i]?.unitQty);\r\n        updatedUnitList[index][\"totalprice\"] =\r\n          ele?.qty * ele.price * SelectedSize[i]?.unitQty;\r\n        let indextotal = ele?.price * ele.qty * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      console.log(amt);\r\n      // setPriceTotal(amt);\r\n      setGrandTotalAmt(amt);\r\n      return updatedUnitList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  let subtotal = product?.reduce((acc, product) => acc + product.totalprice, 0);\r\n  console.log(subtotal);\r\n  // let UnitPrice = product?.reduce((acc, product) => acc + product.unitQty, 0);\r\n  // let totalPrice = UnitPrice * subtotal;\r\n  let taxRate = 0.1; // 10%\r\n  let tax = subtotal * taxRate;\r\n  let discountRate = 0.2;\r\n  let discountAmount = subtotal * discountRate;\r\n  let Grandtotals = subtotal + tax;\r\n\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        console.log(res?.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    CreateCustomerList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let value = res?.Customer;\r\n        if (value?.length) {\r\n          setPartyList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    UnitListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        console.log(res.Unit);\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        unitQty: \"\",\r\n        unitType: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const fullname = UserInfo?.firstName + \" \" + UserInfo?.lastName;\r\n    const payload = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.currentAddress,\r\n      status: \"Completed\",\r\n      grandTotal: grandTotalAmt,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n    };\r\n    console.log(payload);\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      Ordercashbook(payload)\r\n        .then((res) => {\r\n          swal(\"Order Created Successfully\");\r\n          //  history.push(\"/app/softnumen/order/orderList\")\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Add Order By Cashbook</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/SoftNumen/parts/Cashbook\")\r\n                    }>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1}\r\n                      displayValue=\"OwnerName\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={(e) => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    {console.log(product)}\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"availableQty\"\r\n                          placeholder=\"AvailableSize\"\r\n                          value={product?.availableQty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          min={0}\r\n                          // max={product?.availableQty}\r\n                          placeholder=\"Req_Qty\"\r\n                          required\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={(e) =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Choose Unit</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionUnit(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"primaryUnit\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          disabled\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          disabled\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.Size * product.price * product.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}>\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}>\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      {/* <li>\r\n                        <Label className=\"\">\r\n                          SubTotal:\r\n                          <strong>{priceTotal}</strong>\r\n                        </Label>\r\n                      </li> */}\r\n                      {/* <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost : <strong>RS {subtotal}</strong>\r\n                        </Label>\r\n                      </li> */}\r\n                      {/* <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS {tax}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Discount : <strong>RS {discountAmount}</strong>\r\n                        </Label>\r\n                      </li> */}\r\n                      <li>\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total:\r\n                          <span className=\"p-2\">\r\n                            {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                              ? 0\r\n                              : grandTotalAmt}\r\n                          </span>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Addorderbycashbook;\r\n"],"sourceRoot":""}