{"version":3,"sources":["views/apps/freshlist/house/CheckPermission.js","views/apps/freshlist/accounts/GoodDispatchView.js","views/apps/freshlist/customer/Ticketing/DispatchReport.js","../node_modules/reactstrap/es/FormGroup.js","assets/img/profile/pages/logomain.png"],"names":["CheckPermission","props","pageparmission","JSON","parse","localStorage","getItem","newparmisson","rolename","rolePermission","find","value","pagename","View","permission","includes","Create","Edit","Delete","GoodDispatchView","ViewOneData","useState","CreatAccountView","setCreatAccountView","dropdownValue","setdropdownValue","formData","setFormData","index","setindex","error","setError","useContext","UserContext","useEffect","console","log","GoodDispatchxmlView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","GoodDispatch","input","catch","err","className","map","ele","i","type","_attributes","key","lg","md","sm","label","_text","disabled","placeholder","name","style","color","src","alt","width","height","MyDropdown","dropdown","required","onChange","e","target","checked","test","length","AssignDeliveryBoy","SelectedColums","GoodDispatchList","LookupviewStart","setState","prevState","modal","handleChangeEdit","types","ViewOneUserView","EditOneUserView","EditOneData","toggleDropdown","isOpen","onGridReady","params","gridApi","api","gridColumnApi","columnApi","gridRef","current","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleChangeHeader","push","delindex","findIndex","headerName","splice","exportToPDF","csvData","getDataAsCsv","processCellCallback","processCell","parseCsv","parsedData","generatePDF","exportToExcel","CsvData","convertCsvToExcel","blob","downloadExcelFile","convertCSVtoExcel","Papa","complete","result","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","shiftElementUp","currentIndex","state","Arrindex","myArrayCopy","SelectedcolumnDefs","elementToMove","shiftElementDown","convertCsvToXml","rows","xmlString","forEach","row","cell","Blob","link","document","createElement","href","URL","createObjectURL","download","click","HandleSetVisibleField","preventDefault","setColumnDefs","columnDefs","rowData","setItem","stringify","HeadingRightShift","updatedSelectedColumnDefs","Set","item","handleLeftShift","SelectedCols","slice","React","createRef","setMySelectedarr","InsiderPermissions","paginationPageSize","valueGetter","field","filter","render","history","size","onClick","cellRendererFramework","status","resizable","cursor","title","pathname","_id","fill","fullName","MobileNo","address","grandTotal","taxAmount","partyId","firstName","orderItems","AllcolumnDefs","defaultColDef","sortable","enablePivot","enableValue","suppressMenu","this","context","UserInformatio","InsidePermissions","OrderDisPatchList","Invoice","userHeading","id","swal","buttons","cancel","text","DeleteAccount","selectedData","getSelectedRows","updateRowData","remove","Promise","resolve","reject","header","skipEmptyLines","Error","pdfsize","Object","keys","doc","jsPDF","setTextColor","tableData","values","addImage","Logo","date","Date","setCreationDate","autoTable","head","body","startY","save","dynamicTyping","worksheet","workbook","excelBuffer","bookType","url","window","a","appendChild","revokeObjectURL","fontWeight","position","zIndex","border","backgroundColor","exportDataAsCsv","marginTop","tag","right","Consumer","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","ref","domLayout","toggle","maxWidth","xl","xs","class","element","Component","contextType","_excluded","propTypes","children","PropTypes","node","bool","check","inline","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","defaultProps","module","exports"],"mappings":"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","file":"static/js/168.b847bc50.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport {\r\n  GoodDispatchxmlView,\r\n  Get_RoleList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst GoodDispatchView = ({ ViewOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    console.log(ViewOneData);\r\n    setFormData(ViewOneData);\r\n  }, []);\r\n  useEffect(() => {\r\n    GoodDispatchxmlView()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        // console.log(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setCreatAccountView(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setdropdownValue(JSON.parse(jsonData)?.GoodDispatch);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\">\r\n            <Row className=\"mb-2\">\r\n              {CreatAccountView &&\r\n                CreatAccountView?.map((ele, i) => {\r\n                  if (ele?.type?._attributes?.type == \"text\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            disabled\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else if (ele?.type?._attributes?.type == \"file\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label className=\"m-2\">{ele?.label?._text}</Label>\r\n                          <img\r\n                            // className=\"form-control\"\r\n                            src={`http://64.227.162.41:5000/Images/${\r\n                              formData[ele?.name?._text]\r\n                            }`}\r\n                            alt=\"image\"\r\n                            width={50}\r\n                            height={50}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            disabled\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                })}\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.label?._text}\r\n                  </Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name={dropdownValue?.MyDropdown?.dropdown?.name?._text}\r\n                    value={\r\n                      formData[dropdownValue?.MyDropdown?.dropdown?.name?._text]\r\n                    }\r\n                    disabled\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <option value=\"\">{formData.AssignDeliveryBoy}</option>\r\n                    {/* <option value=\"\">--DeliveryAuthentication--</option> */}\r\n                    {/* {dropdownValue?.MyDropdown?.dropdown?.option.map(\r\n                      (option, index) => (\r\n                        <option key={index} value={option?._attributes?.value}>\r\n                          {option?._attributes?.value}\r\n                        </option>\r\n                      )\r\n                    )} */}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoodDispatchView;\r\n","import React, { useRef } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { ImDownload } from \"react-icons/im\";\r\nimport { ContextLayout } from \"../../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\n// import GoodDispatchEdit from \"./GoodDispatchEdit\";\r\n// import GoodDispatchEdit from \"../.\";\r\nimport GoodDispatchView from \"../../accounts/GoodDispatchView\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport Logo from \"../../../../../assets/img/profile/pages/logomain.png\";\r\nimport Papa from \"papaparse\";\r\nimport { Eye, Trash2, ChevronDown, Edit } from \"react-feather\";\r\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\r\nimport \"../../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  FaArrowAltCircleLeft,\r\n  FaArrowAltCircleRight,\r\n  FaFilter,\r\n  FaPlus,\r\n  FaTruck,\r\n  FaTruckLoading,\r\n} from \"react-icons/fa\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  GoodDispatchListView,\r\n  GoodDispatchxmlView,\r\n  DeleteAccount,\r\n  OrderDisPatchList,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  BsCloudDownloadFill,\r\n  BsFillArrowDownSquareFill,\r\n  BsFillArrowUpSquareFill,\r\n} from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport UserContext from \"../../../../../context/Context\";\r\nimport { CheckPermission } from \"../../house/CheckPermission\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\nconst SelectedColums = [];\r\n\r\nclass GoodDispatchList extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridRef = React.createRef();\r\n    this.gridApi = null;\r\n    this.state = {\r\n      isOpen: false,\r\n      Arrindex: \"\",\r\n      rowData: [],\r\n      setMySelectedarr: [],\r\n      InsiderPermissions: {},\r\n\r\n      SelectedCols: [],\r\n      paginationPageSize: 5,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      columnDefs: [\r\n        {\r\n          headerName: \"S.No\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          width: 80,\r\n          filter: true,\r\n        },\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"sortorder\",\r\n          field: \"transactions\",\r\n          width: 120,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.View && (\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Eye\r\n                          className=\"\"\r\n                          size=\"25px\"\r\n                          color=\"green\"\r\n                          onClick={() => {\r\n                            // this.handleChangeEdit(params.data, \"readonly\");\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                {/* {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.Edit && (\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Edit\r\n                          className=\"mr-50\"\r\n                          size=\"25px\"\r\n                          color=\"blue\"\r\n                          onClick={() => {\r\n                            // this.handleChangeEdit(params.data, \"Editable\");\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  )} */}\r\n\r\n                {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.Delete && (\r\n                    <Route\r\n                      render={() => (\r\n                        <Trash2\r\n                          className=\"\"\r\n                          size=\"25px\"\r\n                          color=\"red\"\r\n                          onClick={() => {\r\n                            // this.runthisfunction(params?.data?._id);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Status\",\r\n          field: \"order_status\",\r\n          filter: true,\r\n          width: 140,\r\n          cellRendererFramework: params => {\r\n            // console.log(params.data);\r\n            return params.data?.status === \"completed\" ? (\r\n              <div className=\"badge badge-pill badge-success\">Completed</div>\r\n            ) : params.data?.status === \"pending\" ? (\r\n              <div className=\"badge badge-pill badge-warning\">\r\n                {params.data?.status}\r\n              </div>\r\n            ) : params.data?.status === \"return\" ? (\r\n              <div className=\"badge badge-pill bg-danger\">Returned</div>\r\n            ) : params.data?.status === \"cancelled\" ? (\r\n              <div className=\"badge badge-pill bg-danger\">\r\n                {params.data.status}\r\n              </div>\r\n            ) : params.data?.status === \"completed\" ? (\r\n              <div className=\"badge badge-pill bg-success\">Completed</div>\r\n            ) : (\r\n              <>\r\n                <div className=\"badge badge-pill bg-warning\">Cancelled</div>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Dispatch\",\r\n          field: \"Dispatch\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 140,\r\n          cellRendererFramework: params => {\r\n            // console.log(params?.data?.status);\r\n\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  {this.state.InsiderPermissions &&\r\n                    this.state.InsiderPermissions?.View && (\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <FaTruck\r\n                            style={{ cursor: \"pointer\" }}\r\n                            title=\"Dispatch Now\"\r\n                            onClick={() =>\r\n                              history.push({\r\n                                pathname: `/app/AjGroup/dispatch/CreateDispach/${params?.data?._id}`,\r\n                                state: { data: params?.data },\r\n                              })\r\n                            }\r\n                            // onClick={() => this.MergeBillNow(params.data)}\r\n                            fill=\"green\"\r\n                            size=\"30px\"\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Orderid\",\r\n          field: \"_id\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 210,\r\n          cellRendererFramework: params => {\r\n            // console.log(params.data?.order_id);\r\n\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?._id}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"FullName\",\r\n          field: \"fullName\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 150,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.fullName}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"MobileNo\",\r\n          field: \"MobileNo\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 160,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.MobileNo}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Address\",\r\n          field: \"address\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 200,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.address}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"GrandTotal\",\r\n          field: \"grandTotal\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 150,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.grandTotal}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Tax Amount\",\r\n          field: \"taxAmount\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 150,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.taxAmount}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Party Name\",\r\n          field: \"partyId.firstName\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 210,\r\n          cellRendererFramework: params => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params.data?.partyId?.firstName}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"Total Product\",\r\n          field: \"params?.data?.orderItems?.length\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 180,\r\n          cellRendererFramework: params => {\r\n            // console.log(params.data);\r\n            return (\r\n              <div className=\"d-flex cursor-pointer\">\r\n                <div>{params?.data?.orderItems?.length} Products</div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        // {\r\n        //   headerName: \"total\",\r\n        //   field: \"total\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 160,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div>\r\n        //           <Badge color=\"success\">{params.data?.total}</Badge>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n        // {\r\n        //   headerName: \"brandname \",\r\n        //   field: \"brand_name\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 180,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div>\r\n        //           <span>{params.data?.brand_name}</span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n        // {\r\n        //   headerName: \"city\",\r\n        //   field: \"city\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 160,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div>\r\n        //           <span>{params.data?.city}</span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n        // {\r\n        //   headerName: \"order Creation date\",\r\n        //   field: \"order_date\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 230,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div>\r\n        //           <span>{params.data?.order_date}</span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n      ],\r\n      AllcolumnDefs: [],\r\n      SelectedcolumnDefs: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        enablePivot: true,\r\n        enableValue: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  LookupviewStart = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  handleChangeEdit = (data, types) => {\r\n    let type = types;\r\n    if (type == \"readonly\") {\r\n      this.setState({ ViewOneUserView: true });\r\n      this.setState({ ViewOneData: data });\r\n    } else {\r\n      this.setState({ EditOneUserView: true });\r\n      this.setState({ EditOneData: data });\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const UserInformation = this.context?.UserInformatio;\r\n    const InsidePermissions = CheckPermission(\"Dispatch details\");\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    await OrderDisPatchList()\r\n      .then(res => {\r\n        console.log(res?.Invoice);\r\n        this.setState({ rowData: res?.Invoice });\r\n        this.setState({ AllcolumnDefs: this.state.columnDefs });\r\n\r\n        let userHeading = JSON.parse(\r\n          localStorage.getItem(\"DispatchDetailList\")\r\n        );\r\n        if (userHeading?.length) {\r\n          this.setState({ columnDefs: userHeading });\r\n          this.gridApi.setColumnDefs(userHeading);\r\n          this.setState({ SelectedcolumnDefs: userHeading });\r\n        } else {\r\n          this.setState({ columnDefs: this.state.columnDefs });\r\n          this.setState({ SelectedcolumnDefs: this.state.columnDefs });\r\n        }\r\n        this.setState({ SelectedCols: this.state.columnDefs });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    // GoodDispatchxmlView()\r\n    // .then((res) => {\r\n    //   var mydropdownArray = [];\r\n    //   var adddropdown = [];\r\n    //   const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n    //   let headerSet = JSON.parse(jsonData)?.GoodDispatch?.input;\r\n    //   let indexB = headerSet?.indexOf(\"CNUpload\");\r\n    //   // Find the index of 'c' in the array\r\n    //   let indexC = headerSet?.indexOf(\"FetchSalesInvoice\");\r\n\r\n    //   // Check if 'b' and 'c' exist in the array before removing\r\n    //   if (indexB !== -1 && indexC !== -1) {\r\n    //     // Use splice to remove elements from the array\r\n    //     headerSet?.splice(indexB, 1); // Remove 'b'\r\n    //     headerSet?.splice(indexC - 1, 1); // Since 'b' is removed, remove 'c' from updated index\r\n    //   }\r\n\r\n    //   const inputs = headerSet?.map((ele) => {\r\n    //     return {\r\n    //       headerName: ele?.label._text,\r\n    //       field: ele?.name._text,\r\n    //       filter: true,\r\n    //       sortable: true,\r\n    //     };\r\n    //   });\r\n\r\n    //   let myHeadings = [\r\n    //     // ...checkboxinput,\r\n    //     ...inputs,\r\n    //     // ...adddropdown,\r\n    //     // ...addRadio,\r\n    //     ...mydropdownArray,\r\n    //   ];\r\n    //   // console.log(myHeadings);\r\n    //   let Product = [\r\n    //     {\r\n    //       headerName: \"Actions\",\r\n    //       field: \"sortorder\",\r\n    //       field: \"transactions\",\r\n    //       width: 190,\r\n    //       cellRendererFramework: (params) => {\r\n    //         return (\r\n    //           <div className=\"actions cursor-pointer\">\r\n    //             {this.state.InsiderPermissions &&\r\n    //               this.state.InsiderPermissions?.View && (\r\n    //                 <Route\r\n    //                   render={({ history }) => (\r\n    //                     <Eye\r\n    //                       className=\"mr-50\"\r\n    //                       size=\"25px\"\r\n    //                       color=\"green\"\r\n    //                       onClick={() => {\r\n    //                         this.handleChangeEdit(params.data, \"readonly\");\r\n    //                       }}\r\n    //                     />\r\n    //                   )}\r\n    //                 />\r\n    //               )}\r\n    //             {this.state.InsiderPermissions &&\r\n    //               this.state.InsiderPermissions?.Edit && (\r\n    //                 <Route\r\n    //                   render={({ history }) => (\r\n    //                     <Edit\r\n    //                       className=\"mr-50\"\r\n    //                       size=\"25px\"\r\n    //                       color=\"blue\"\r\n    //                       onClick={() => {\r\n    //                         this.handleChangeEdit(params.data, \"Editable\");\r\n    //                       }}\r\n    //                     />\r\n    //                   )}\r\n    //                 />\r\n    //               )}\r\n\r\n    //             {this.state.InsiderPermissions &&\r\n    //               this.state.InsiderPermissions?.Delete && (\r\n    //                 <Route\r\n    //                   render={() => (\r\n    //                     <Trash2\r\n    //                       className=\"mr-50\"\r\n    //                       size=\"25px\"\r\n    //                       color=\"red\"\r\n    //                       onClick={() => {\r\n    //                         this.runthisfunction(params?.data?._id);\r\n    //                       }}\r\n    //                     />\r\n    //                   )}\r\n    //                 />\r\n    //               )}\r\n    //           </div>\r\n    //         );\r\n    //       },\r\n    //     },\r\n\r\n    //     ...myHeadings,\r\n    //     //   {\r\n    //     //     headerName: \"Status\",\r\n    //     //     field: \"status\",\r\n    //     //     filter: true,\r\n    //     //     width: 100,\r\n    //     //     cellRendererFramework: (params) => {\r\n    //     //       return params.data.status === \"Active\" ? (\r\n    //     //         <div className=\"badge badge-pill badge-success\">\r\n    //     //           {params.data.status}\r\n    //     //         </div>\r\n    //     //       ) : params.data.status === \"Deactive\" ? (\r\n    //     //         <div className=\"badge badge-pill badge-warning\">\r\n    //     //           {params.data.status}\r\n    //     //         </div>\r\n    //     //       ) : null;\r\n    //     //     },\r\n    //     //   },\r\n    //     {\r\n    //       headerName: \"CNUpload\",\r\n    //       field: \"CnUpload\",\r\n    //       filter: true,\r\n    //       sortable: true,\r\n    //       cellRendererFramework: (params) => {\r\n    //         return (\r\n    //           <>\r\n    //             <div className=\"actions cursor-pointer\">\r\n    //               <img\r\n    //                 src={`http://64.227.162.41:5000/Images/${params?.data?.CNUpload}`}\r\n    //                 alt=\"CNUpload Not Find\"\r\n    //               />\r\n    //             </div>\r\n    //           </>\r\n    //         );\r\n    //       },\r\n    //     },\r\n    //     {\r\n    //       headerName: \"FetchSalesInvoice\",\r\n    //       field: \"FetchSalesInvoice\",\r\n    //       filter: true,\r\n    //       sortable: true,\r\n    //       cellRendererFramework: (params) => {\r\n    //         return (\r\n    //           <>\r\n    //             <div className=\"actions cursor-pointer\">\r\n    //               <img\r\n    //                 src={`http://64.227.162.41:5000/Images/${params?.data?.FetchSalesInvoice}`}\r\n    //                 alt=\"FetchSalesInvoice Not Find\"\r\n    //               />\r\n    //             </div>\r\n    //           </>\r\n    //         );\r\n    //       },\r\n    //     },\r\n    //     {\r\n    //       headerName: \"Updated date\",\r\n    //       field: \"updatedAt\",\r\n    //       filter: true,\r\n    //       sortable: true,\r\n    //       cellRendererFramework: (params) => {\r\n    //         return (\r\n    //           <>\r\n    //             <div className=\"actions cursor-pointer\">\r\n    //               <div className=\"actions cursor-pointer\">\r\n    //                 <span>{params?.data?.createdAt}</span>\r\n    //               </div>\r\n    //             </div>\r\n    //           </>\r\n    //         );\r\n    //       },\r\n    //     },\r\n    //   ];\r\n\r\n    //   this.setState({ AllcolumnDefs: Product });\r\n\r\n    //   let userHeading = JSON.parse(localStorage.getItem(\"PartyList\"));\r\n    //   if (userHeading?.length) {\r\n    //     this.setState({ columnDefs: userHeading });\r\n    //     this.gridApi.setColumnDefs(userHeading);\r\n    //     this.setState({ SelectedcolumnDefs: userHeading });\r\n    //   } else {\r\n    //     this.setState({ columnDefs: Product });\r\n    //     this.setState({ SelectedcolumnDefs: Product });\r\n    //   }\r\n    //   this.setState({ SelectedCols: Product });\r\n    // })\r\n    // .catch((err) => {\r\n    //   console.log(err);\r\n    // });\r\n\r\n    // await GoodDispatchListView(userId)\r\n    //   .then((res) => {\r\n    //     // console.log(res.GoodDispatch[0].CNUpload);\r\n\r\n    //     // Find the index of 'b' in the array\r\n    //     let indexB = res?.GoodDispatch?.indexOf(\"CNUpload\");\r\n    //     // Find the index of 'c' in the array\r\n    //     let indexC = res?.GoodDispatch?.indexOf(\"FetchSalesInvoice\");\r\n\r\n    //     // Check if 'b' and 'c' exist in the array before removing\r\n    //     if (indexB !== -1 && indexC !== -1) {\r\n    //       // Use splice to remove elements from the array\r\n    //       res?.GoodDispatch?.splice(indexB, 1); // Remove 'b'\r\n    //       res?.GoodDispatch?.splice(indexC - 1, 1); // Since 'b' is removed, remove 'c' from updated index\r\n    //     }\r\n    //     // this.setState({ rowData: res.GoodDispatch });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }\r\n  toggleDropdown = () => {\r\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then(value => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          DeleteAccount(id)\r\n            .then(res => {\r\n              let selectedData = this.gridApi.getSelectedRows();\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridRef.current = params.api;\r\n\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleChangeHeader = (e, value, index) => {\r\n    let check = e.target.checked;\r\n    if (check) {\r\n      SelectedColums?.push(value);\r\n    } else {\r\n      const delindex = SelectedColums?.findIndex(\r\n        ele => ele?.headerName === value?.headerName\r\n      );\r\n\r\n      SelectedColums?.splice(delindex, 1);\r\n    }\r\n  };\r\n  parseCsv(csvData) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: result => {\r\n          if (result.data && result.data.length > 0) {\r\n            resolve(result.data);\r\n          } else {\r\n            reject(new Error(\"No data found in the CSV\"));\r\n          }\r\n        },\r\n        error: error => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  generatePDF(parsedData) {\r\n    let pdfsize = [Object.keys(parsedData[0])][0].length;\r\n    let size = pdfsize > 15 ? \"a1\" : pdfsize < 14 > 10 ? \"a3\" : \"a4\";\r\n\r\n    const doc = new jsPDF(\"landscape\", \"mm\", size, false);\r\n    doc.setTextColor(5, 87, 97);\r\n    const tableData = parsedData.map(row => Object.values(row));\r\n    doc.addImage(Logo, \"JPEG\", 10, 10, 50, 30);\r\n    let date = new Date();\r\n    doc.setCreationDate(date);\r\n    doc.text(\"UserAccount\", 14, 51);\r\n    doc.autoTable({\r\n      head: [Object.keys(parsedData[0])],\r\n      body: tableData,\r\n      startY: 60,\r\n    });\r\n\r\n    doc.save(\"UserList.pdf\");\r\n  }\r\n\r\n  exportToPDF = async () => {\r\n    const csvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    try {\r\n      const parsedData = await this.parseCsv(csvData);\r\n      this.generatePDF(parsedData);\r\n    } catch (error) {\r\n      console.error(\"Error parsing CSV:\", error);\r\n    }\r\n  };\r\n  processCell = params => {\r\n    return params.value;\r\n  };\r\n\r\n  convertCsvToExcel(csvData) {\r\n    return new Promise(resolve => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        complete: function (result) {\r\n          const worksheet = XLSX.utils.json_to_sheet(result.data);\r\n          const workbook = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n          const excelBuffer = XLSX.write(workbook, {\r\n            bookType: \"xlsx\",\r\n            type: \"array\",\r\n          });\r\n          const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          resolve(blob);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  downloadExcelFile(blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"Userlist.xlsx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  exportToExcel = async e => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    const blob = await this.convertCsvToExcel(CsvData);\r\n    this.downloadExcelFile(blob);\r\n  };\r\n\r\n  convertCSVtoExcel = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: result => {\r\n        const ws = XLSX.utils.json_to_sheet(result.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelType = \"xls\";\r\n        XLSX.writeFile(wb, `UserList.${excelType}`);\r\n      },\r\n    });\r\n  };\r\n\r\n  shiftElementUp = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex > 0) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex - 1 });\r\n      myArrayCopy.splice(currentIndex - 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n\r\n  shiftElementDown = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex < this.state.SelectedcolumnDefs.length - 1) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex + 1 });\r\n      myArrayCopy.splice(currentIndex + 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n  convertCsvToXml = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: result => {\r\n        const rows = result.data;\r\n\r\n        // Create XML\r\n        let xmlString = \"<root>\\n\";\r\n\r\n        rows.forEach(row => {\r\n          xmlString += \"  <row>\\n\";\r\n          row.forEach((cell, index) => {\r\n            xmlString += `    <field${index + 1}>${cell}</field${index + 1}>\\n`;\r\n          });\r\n          xmlString += \"  </row>\\n\";\r\n        });\r\n\r\n        xmlString += \"</root>\";\r\n\r\n        // setXmlData(xmlString);\r\n\r\n        // Create a download link\r\n        const blob = new Blob([xmlString], { type: \"text/xml\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"output.xml\";\r\n        link.click();\r\n      },\r\n    });\r\n  };\r\n\r\n  HandleSetVisibleField = e => {\r\n    e.preventDefault();\r\n    this.gridApi.setColumnDefs(this.state.SelectedcolumnDefs);\r\n    this.setState({ columnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ SelectedcolumnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ rowData: this.state.rowData });\r\n    localStorage.setItem(\r\n      \"DispatchDetailList\",\r\n      JSON.stringify(this.state.SelectedcolumnDefs)\r\n    );\r\n    this.LookupviewStart();\r\n  };\r\n\r\n  HeadingRightShift = () => {\r\n    const updatedSelectedColumnDefs = [\r\n      ...new Set([\r\n        ...this.state.SelectedcolumnDefs.map(item => JSON.stringify(item)),\r\n        ...SelectedColums.map(item => JSON.stringify(item)),\r\n      ]),\r\n    ].map(item => JSON.parse(item));\r\n    this.setState({\r\n      SelectedcolumnDefs: [...new Set(updatedSelectedColumnDefs)], // Update the state with the combined array\r\n    });\r\n  };\r\n  handleLeftShift = () => {\r\n    let SelectedCols = this.state.SelectedcolumnDefs.slice();\r\n    let delindex = this.state.Arrindex; /* Your delete index here */\r\n\r\n    if (SelectedCols && delindex >= 0) {\r\n      const splicedElement = SelectedCols.splice(delindex, 1); // Remove the element\r\n\r\n      this.setState({\r\n        SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n      SelectedcolumnDefs,\r\n      isOpen,\r\n      SelectedCols,\r\n      InsiderPermissions,\r\n      AllcolumnDefs,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Col className=\"app-user-list\">\r\n          {this.state.EditOneUserView && this.state.EditOneUserView ? (\r\n            <Row className=\"card\">\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end p-1\">\r\n                  <Button\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState({ EditOneUserView: false });\r\n                    }}\r\n                    color=\"danger\"\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              {/* <GoodDispatchEdit EditOneData={this.state.EditOneData} /> */}\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {this.state.ViewOneUserView && this.state.ViewOneUserView ? (\r\n                <>\r\n                  <Row className=\"card\">\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-end p-1\">\r\n                        <Button\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.setState({ ViewOneUserView: false });\r\n                          }}\r\n                          color=\"danger\"\r\n                        >\r\n                          Back\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <GoodDispatchView ViewOneData={this.state.ViewOneData} />\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col sm=\"12\">\r\n                    <Card>\r\n                      <Row className=\"ml-2 mr-2 mt-2\">\r\n                        <Col>\r\n                          <h1\r\n                            className=\"float-left\"\r\n                            style={{ fontWeight: \"600\" }}\r\n                          >\r\n                            Good Dispatch Report\r\n                          </h1>\r\n                        </Col>\r\n\r\n                        {InsiderPermissions && InsiderPermissions?.View && (\r\n                          <Col>\r\n                            <span className=\"mx-1\">\r\n                              <FaFilter\r\n                                style={{ cursor: \"pointer\" }}\r\n                                title=\"filter coloumn\"\r\n                                size=\"35px\"\r\n                                onClick={this.LookupviewStart}\r\n                                color=\"#39cccc\"\r\n                                className=\"float-right\"\r\n                              />\r\n                            </span>\r\n                            <span className=\"mx-1\">\r\n                              <div className=\"dropdown-container float-right\">\r\n                                <ImDownload\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  title=\"download file\"\r\n                                  size=\"35px\"\r\n                                  className=\"dropdown-button \"\r\n                                  color=\"#39cccc\"\r\n                                  onClick={this.toggleDropdown}\r\n                                />\r\n                                {isOpen && (\r\n                                  <div\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      zIndex: \"1\",\r\n                                      border: \"1px solid #39cccc\",\r\n                                      backgroundColor: \"white\",\r\n                                    }}\r\n                                    className=\"dropdown-content dropdownmy\"\r\n                                  >\r\n                                    <h5\r\n                                      onClick={() => this.exportToPDF()}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive mt-1\"\r\n                                    >\r\n                                      .PDF\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.gridApi.exportDataAsCsv()\r\n                                      }\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\"\r\n                                    >\r\n                                      .CSV\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={this.convertCSVtoExcel}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\"\r\n                                    >\r\n                                      .XLS\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={this.exportToExcel}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\"\r\n                                    >\r\n                                      .XLSX\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={() => this.convertCsvToXml()}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\"\r\n                                    >\r\n                                      .XML\r\n                                    </h5>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </span>\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                      <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n                        {this.state.rowData === null ? null : (\r\n                          <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                            <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                              <div className=\"mb-1\">\r\n                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                  <DropdownToggle tag=\"div\">\r\n                                    {this.gridApi\r\n                                      ? this.state.currenPageSize\r\n                                      : \"\" * this.state.getPageSize -\r\n                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {this.state.rowData.length -\r\n                                      this.state.currenPageSize *\r\n                                        this.state.getPageSize >\r\n                                    0\r\n                                      ? this.state.currenPageSize *\r\n                                        this.state.getPageSize\r\n                                      : this.state.rowData.length}{\" \"}\r\n                                    of {this.state.rowData.length}\r\n                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu right>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(5)}\r\n                                    >\r\n                                      5\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(20)}\r\n                                    >\r\n                                      20\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(50)}\r\n                                    >\r\n                                      50\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(100)}\r\n                                    >\r\n                                      100\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(134)}\r\n                                    >\r\n                                      134\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap justify-content-end mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                  <Input\r\n                                    placeholder=\"search Item here...\"\r\n                                    onChange={e =>\r\n                                      this.updateSearchQuery(e.target.value)\r\n                                    }\r\n                                    value={this.state.value}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ContextLayout.Consumer className=\"ag-theme-alpine\">\r\n                              {context => (\r\n                                <AgGridReact\r\n                                  id=\"myAgGrid\"\r\n                                  // gridOptions={{\r\n                                  //   domLayout: \"autoHeight\",\r\n                                  //   // or other layout options\r\n                                  // }}\r\n                                  gridOptions={this.gridOptions}\r\n                                  rowSelection=\"multiple\"\r\n                                  defaultColDef={defaultColDef}\r\n                                  columnDefs={columnDefs}\r\n                                  rowData={rowData}\r\n                                  // onGridReady={(params) => {\r\n                                  //   this.gridApi = params.api;\r\n                                  //   this.gridColumnApi = params.columnApi;\r\n                                  //   this.gridRef.current = params.api;\r\n\r\n                                  //   this.setState({\r\n                                  //     currenPageSize:\r\n                                  //       this.gridApi.paginationGetCurrentPage() +\r\n                                  //       1,\r\n                                  //     getPageSize:\r\n                                  //       this.gridApi.paginationGetPageSize(),\r\n                                  //     totalPages:\r\n                                  //       this.gridApi.paginationGetTotalPages(),\r\n                                  //   });\r\n                                  // }}\r\n                                  onGridReady={this.onGridReady}\r\n                                  colResizeDefault={\"shift\"}\r\n                                  animateRows={true}\r\n                                  floatingFilter={false}\r\n                                  pagination={true}\r\n                                  paginationPageSize={\r\n                                    this.state.paginationPageSize\r\n                                  }\r\n                                  pivotPanelShow=\"always\"\r\n                                  enableRtl={context.state.direction === \"rtl\"}\r\n                                  ref={this.gridRef} // Attach the ref to the grid\r\n                                  domLayout=\"autoHeight\" // Adjust layout as needed\r\n                                />\r\n                              )}\r\n                            </ContextLayout.Consumer>\r\n                          </div>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.LookupviewStart}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}\r\n        >\r\n          <ModalHeader toggle={this.LookupviewStart}>Change Fileds</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"12\" xl=\"4\" xs=\"12\">\r\n                <h4>Avilable Columns</h4>\r\n                <div className=\"mainshffling\">\r\n                  <div class=\"ex1\">\r\n                    {AllcolumnDefs &&\r\n                      AllcolumnDefs?.map((ele, i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              onClick={e => this.handleChangeHeader(e, ele, i)}\r\n                              key={i}\r\n                              className=\"mycustomtag mt-1\"\r\n                            >\r\n                              <span className=\"mt-1\">\r\n                                <h5\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"allfields\"\r\n                                >\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    // checked={check && check}\r\n                                    className=\"mx-1\"\r\n                                  />\r\n\r\n                                  {ele?.headerName}\r\n                                </h5>\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"12\" xl=\"2\" xs=\"12\" className=\"colarrowbtn\">\r\n                <div className=\"mainarrowbtn\">\r\n                  <div style={{ cursor: \"pointer\" }}>\r\n                    <FaArrowAltCircleRight\r\n                      onClick={this.HeadingRightShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ cursor: \"pointer\" }} className=\"my-2\">\r\n                    <FaArrowAltCircleLeft\r\n                      onClick={this.handleLeftShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\" xl=\"6\" xs=\"12\">\r\n                <Row>\r\n                  <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n                    <h4>Visible Columns</h4>\r\n                    <div className=\"mainshffling\">\r\n                      <div class=\"ex1\">\r\n                        {SelectedcolumnDefs &&\r\n                          SelectedcolumnDefs?.map((ele, i) => {\r\n                            return (\r\n                              <>\r\n                                <div key={i} className=\"mycustomtag mt-1\">\r\n                                  <span className=\"mt-1\">\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.setState({ Arrindex: i })\r\n                                      }\r\n                                      style={{\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor: `${\r\n                                          this.state.Arrindex === i\r\n                                            ? \"#1877f2\"\r\n                                            : \"\"\r\n                                        }`,\r\n                                      }}\r\n                                      className=\"allfields\"\r\n                                    >\r\n                                      <IoMdRemoveCircleOutline\r\n                                        onClick={() => {\r\n                                          const SelectedCols =\r\n                                            this.state.SelectedcolumnDefs.slice();\r\n                                          const delindex =\r\n                                            SelectedCols.findIndex(\r\n                                              element =>\r\n                                                element?.headerName ==\r\n                                                ele?.headerName\r\n                                            );\r\n\r\n                                          if (SelectedCols && delindex >= 0) {\r\n                                            const splicedElement =\r\n                                              SelectedCols.splice(delindex, 1); // Remove the element\r\n                                            // splicedElement contains the removed element, if needed\r\n\r\n                                            this.setState({\r\n                                              SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n                                            });\r\n                                          }\r\n                                          // const delindex =\r\n                                          //   SelectedCols.findIndex(\r\n                                          //     (element) =>\r\n                                          //       element?.headerName ==\r\n                                          //       ele?.headerName\r\n                                          //   );\r\n\r\n                                          // SelectedCols?.splice(delindex, 1);\r\n                                          // this.setState({\r\n                                          //   SelectedcolumnDefs: SelectedCols,\r\n                                          // });\r\n                                        }}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        size=\"25px\"\r\n                                        color=\"red\"\r\n                                        className=\"mr-1\"\r\n                                      />\r\n\r\n                                      {ele?.headerName}\r\n                                    </h5>\r\n                                  </span>\r\n                                </div>\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"updownbtn justify-content-center\">\r\n                      <div>\r\n                        <BsFillArrowUpSquareFill\r\n                          className=\"arrowassign mb-1\"\r\n                          size=\"30px\"\r\n                          onClick={this.shiftElementUp}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillArrowDownSquareFill\r\n                          onClick={this.shiftElementDown}\r\n                          className=\"arrowassign\"\r\n                          size=\"30px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button onClick={this.HandleSetVisibleField} color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default GoodDispatchList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","module.exports = __webpack_public_path__ + \"static/media/logomain.cee4d0c2.png\";"],"sourceRoot":""}