{"version":3,"sources":["views/apps/freshlist/house/CheckPermission.js","../node_modules/reactstrap/es/Spinner.js","views/SuperAdminUi/SuperAdminUI.js","views/apps/freshlist/accounts/RoleList.js"],"names":["CheckPermission","props","pageparmission","JSON","parse","localStorage","getItem","newparmisson","rolename","rolePermission","find","value","pagename","View","permission","includes","Create","Edit","Delete","_excluded","propTypes","tag","tagPropType","type","PropTypes","string","size","color","className","cssModule","object","children","Spinner","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","SuperAdminUI","onDropdownChange","onSubmit","useState","SuperAdminList","setSuperAdminList","selectedSuperAdmin","setSelectedSuperAdmin","setSelectedSuperAdminName","useEffect","_GetList","Super_Admin_List","then","res","console","log","SuperAdmin","catch","err","lg","sm","md","onChange","e","selectedName","target","options","selectedIndex","getAttribute","split","selectedValue","map","ele","i","data-name","_id","database","firstName","lastName","onClick","preventDefault","RoleList","state","rowData","InsiderPermissions","paginationPageSize","MasterShow","currenPageSize","getPageSize","defaultColDef","sortable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","roleName","desc","render","history","style","border","padding","borderRadius","backgroundColor","marginLeft","push","pathname","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleParentSubmit","id","db","Apicalling","handleDropdownChange","setItem","stringify","this","Loading","Get_RoleList","Role","rank","InsidePermissions","selectedData","getSelectedRows","swal","buttons","cancel","text","formData","FormData","append","updateRowData","remove","axiosConfig","post","response","display","justifyContent","marginTop","height","xs","fontWeight","cursor","ms","length","right","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","Component","contextType","UserContext"],"mappings":"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","file":"static/js/244.1ceb41dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, CustomInput, Row } from \"reactstrap\";\r\nimport { Super_Admin_List } from \"../../ApiEndPoint/Api\";\r\nimport { _Get, _GetList } from \"../../ApiEndPoint/ApiCalling\";\r\n\r\nconst SuperAdminUI = ({ onDropdownChange, onSubmit }) => {\r\n  const [SuperAdminList, setSuperAdminList] = useState([]);\r\n  const [selectedSuperAdmin, setSelectedSuperAdmin] = useState(\"\");\r\n  const [selectedSuperAdminName, setSelectedSuperAdminName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Super_Admin_List;\r\n    _GetList(Super_Admin_List)\r\n      .then((res) => {\r\n        console.log(res?.SuperAdmin);\r\n        setSuperAdminList(res?.SuperAdmin);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Call the onSubmit function passed from the parent component\r\n    onSubmit(e);\r\n  };\r\n  const handleDropdownChange = (e) => {\r\n    const selectedName = e.target.options[e.target.selectedIndex]\r\n      .getAttribute(\"data-name\")\r\n      ?.split(\" \")[0];\r\n    const selectedValue =\r\n      e.target.options[e.target.selectedIndex].getAttribute(\"data-name\");\r\n    setSelectedSuperAdmin(selectedName);\r\n    setSelectedSuperAdminName(selectedName);\r\n    onDropdownChange(selectedValue);\r\n  };\r\n  console.log(selectedSuperAdmin);\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col lg=\"6\" sm=\"6\" md=\"6\">\r\n          <CustomInput\r\n            value={selectedSuperAdmin}\r\n            onChange={handleDropdownChange}\r\n            type=\"select\">\r\n            <option>--select SuperAdmin--</option>\r\n            {SuperAdminList &&\r\n              SuperAdminList?.map((ele, i) => (\r\n                <option\r\n                  data-name={`${ele?._id} ${ele?.database}`}\r\n                  value={ele?._id}>\r\n                  {ele?.firstName} {ele?.lastName}\r\n                </option>\r\n              ))}\r\n          </CustomInput>\r\n        </Col>\r\n        <Col>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperAdminUI;\r\n","import React from \"react\";\r\nimport { FaPencilAlt } from \"react-icons/fa\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  CustomInput,\r\n  Col,\r\n  Form,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  Badge,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport xmlJs from \"xml-js\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport { Eye, Trash2, ChevronDown, Edit, Trash, Edit2 } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { BsEye, BsTrash } from \"react-icons/bs\";\r\nimport {\r\n  CreateAccountView,\r\n  Get_RoleList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { CheckPermission } from \"../house/CheckPermission\";\r\nimport SuperAdminUI from \"../../../SuperAdminUi/SuperAdminUI\";\r\n\r\nclass RoleList extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    rowData: [],\r\n    InsiderPermissions: {},\r\n    paginationPageSize: 20,\r\n    MasterShow: false,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n      },\r\n      {\r\n        headerName: \"Role Name\",\r\n        field: \"roleName\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params?.data?.roleName}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Role desc\",\r\n        field: \"desc\",\r\n        filter: true,\r\n        resizable: true,\r\n        width: 230,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <div className=\"\">\r\n                <span>{params?.data?.desc}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        field: \"transactions\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions.View && (\r\n                  <BsEye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/freshlist/account/updateexistingrole/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )} */}\r\n\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions.Edit && (\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <span\r\n                        style={{\r\n                          border: \"1px solid white\",\r\n                          padding: \"10px\",\r\n                          borderRadius: \"30px\",\r\n                          backgroundColor: \"rgb(212, 111, 16)\",\r\n                          marginLeft: \"3px\",\r\n                        }}>\r\n                        <FaPencilAlt\r\n                          className=\"\"\r\n                          size=\"20px\"\r\n                          color=\"white\"\r\n                          onClick={() =>\r\n                            history.push({\r\n                              pathname: `/app/freshlist/account/editRole/${params?.data?._id}`,\r\n                              data: params,\r\n                            })\r\n                          }\r\n                        />\r\n                      </span>\r\n                    )}\r\n                  />\r\n                )}\r\n              {/* )} */}\r\n              {/* {this.state.Deletepermisson && (\r\n                <BsTrash\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"red\"\r\n                  onClick={() => {\r\n                    this.runthisfunction(params.data.id);\r\n                  }}\r\n                />\r\n              )} */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async Apicalling(id, db) {\r\n    this.setState({ Loading: true });\r\n    await Get_RoleList(id, db)\r\n      .then((res) => {\r\n        this.setState({ Loading: false });\r\n\r\n        console.log(res?.Role);\r\n        this.setState({ rowData: res?.Role });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ Loading: false });\r\n\r\n        console.log(err);\r\n      });\r\n  }\r\n  async componentDidMount() {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (pageparmission?.rolename.rank === 0) {\r\n      this.setState({ MasterShow: true });\r\n    }\r\n    this.Apicalling(pageparmission?._id, pageparmission?.database);\r\n\r\n    const InsidePermissions = CheckPermission(\"Create User\");\r\n    console.log(InsidePermissions);\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n  }\r\n\r\n  runthisfunction(id) {\r\n    // console.log(id);\r\n    let selectedData = this.gridApi.getSelectedRows();\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          const formData = new FormData();\r\n          formData.append(\"user_id\", id);\r\n          this.gridApi.updateRowData({ remove: selectedData });\r\n          axiosConfig.post(`/userdelete`, formData).then((response) => {});\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files[0] });\r\n  //     this.setState({ selectedName: event.target.files[0].name });\r\n  //     console.log(event.target.files[0]);\r\n  //   };\r\n  //   onChangeHandler = (event) => {\r\n  //     this.setState({ selectedFile: event.target.files });\r\n  //     this.setState({ selectedName: event.target.files.name });\r\n  //     console.log(event.target.files);\r\n  //   };\r\n  //   changeHandler1 = (e) => {\r\n  //     this.setState({ status: e.target.value });\r\n  //   };\r\n  //   changeHandler = (e) => {\r\n  //     this.setState({ [e.target.name]: e.target.value });\r\n  //   };\r\n  //   submitHandler = (e) => {\r\n  //     e.preventDefault();\r\n  //     const data = new FormData();\r\n  //     data.append(\"banner_title\", this.state.banner_title);\r\n  //     data.append(\"bannertype\", this.state.bannertype);\r\n  //     data.append(\"status\", this.state.status);\r\n  //     for (const file of this.state.selectedFile) {\r\n  //       if (this.state.selectedFile !== null) {\r\n  //         data.append(\"banner_img\", file, file.name);\r\n  //       }\r\n  //     }\r\n\r\n  //     axiosConfig\r\n  //       .post(\"/addbanner\", data)\r\n  //       .then((response) => {\r\n  //         console.log(response);\r\n  //         swal(\"Successful!\", \"You clicked the button!\", \"success\");\r\n  //         this.props.history.push(\"/app/freshlist/banner/bannerList\");\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   };\r\n  handleParentSubmit = (e) => {\r\n    e.preventDefault();\r\n    let SuperAdmin = JSON.parse(localStorage.getItem(\"SuperadminIdByMaster\"));\r\n    let id = SuperAdmin.split(\" \")[0];\r\n    let db = SuperAdmin.split(\" \")[1];\r\n    this.Apicalling(id, db);\r\n  };\r\n  handleDropdownChange = (selectedValue) => {\r\n    localStorage.setItem(\"SuperadminIdByMaster\", JSON.stringify(selectedValue));\r\n  };\r\n  render() {\r\n    if (this.state.Loading) {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"20rem\",\r\n          }}>\r\n          <Spinner\r\n            style={{\r\n              height: \"4rem\",\r\n              width: \"4rem\",\r\n            }}\r\n            color=\"primary\">\r\n            Loading...\r\n          </Spinner>\r\n        </div>\r\n      );\r\n    }\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"mt-2 mx-2 mr-2\">\r\n              <Col lg=\"3\" md=\"3\" sm=\"6\" xs=\"12\">\r\n                <h1 className=\"float-left\" style={{ fontWeight: \"600\" }}>\r\n                  Role List\r\n                </h1>\r\n              </Col>\r\n              {this.state.MasterShow && (\r\n                <Col>\r\n                  <SuperAdminUI\r\n                    onDropdownChange={this.handleDropdownChange}\r\n                    onSubmit={this.handleParentSubmit}\r\n                  />\r\n                </Col>\r\n              )}\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Button\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              backgroundColor: \"#39cccc\",\r\n                              color: \"white\",\r\n                              fontWeight: \"600\",\r\n                            }}\r\n                            className=\" float-right mb-1\"\r\n                            color=\"#39cccc\"\r\n                            onClick={() =>\r\n                              history.push(\"/app/freshlist/account/addRoleNew\")\r\n                            }>\r\n                            <FaPlus size={15} /> Create Role\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                )}\r\n\r\n              {this.state.InsiderPermissions &&\r\n                this.state.InsiderPermissions?.Create && (\r\n                  <Col lg=\"2\" sm=\"2\" md=\"2\" ms=\"12\">\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          style={{\r\n                            cursor: \"pointer\",\r\n                            backgroundColor: \"#39cccc\",\r\n                            color: \"white\",\r\n                            fontWeight: \"600\",\r\n                          }}\r\n                          className=\" float-right\"\r\n                          color=\"#39cccc\"\r\n                          onClick={() =>\r\n                            history.push(\r\n                              \"/app/freshlist/account/CreateHeirarchy\"\r\n                            )\r\n                          }>\r\n                          <FaPlus size={15} /> Hierarchy\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                )}\r\n            </Row>\r\n            <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-1 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}>\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}>\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}>\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}>\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    {/* <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Hub Name\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Order Id\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Phone Number\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"Enter Email\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default RoleList;\r\n"],"sourceRoot":""}