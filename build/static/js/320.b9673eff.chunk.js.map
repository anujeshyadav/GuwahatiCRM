{"version":3,"sources":["../node_modules/reactstrap/es/Alert.js","views/apps/freshlist/customer/HRM/RecPLace/jobForm.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","children","PropTypes","node","className","string","closeClassName","closeAriaLabel","cssModule","color","fade","bool","isOpen","toggle","func","tag","tagPropType","transition","shape","Fade","innerRef","oneOfType","defaultProps","unmountOnExit","Alert","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeClasses","alertTransition","baseClass","timeout","React","createElement","_extends","in","role","type","onClick","JobbForm","useState","jobTitle","branch","jobCategory","numberOfPositions","status","startDate","endDate","skills","jobDescription","jobRequirements","data","setData","history","useHistory","successAlert","setSuccessAlert","errorAlert","setErrorAlert","handleSubmit","e","preventDefault","validateForm","_PostSave","HRM_RECPLACE","resetForm","console","log","values","every","value","trim","handleInputChange","name","onSubmit","md","for","id","onChange","placeholder","map","category","row","sm","size","offset","check","inline","disabled","FormGroup"],"mappings":"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","file":"static/js/320.b9673eff.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import React, { useState } from 'react';\r\nimport { Card, CardBody, Form, FormGroup, Label, Input, Row, Col, Button, Alert } from 'reactstrap';\r\nimport { HRM_RECPLACE } from '../../../../../../ApiEndPoint/Api';\r\nimport { _PostSave } from '../../../../../../ApiEndPoint/ApiCalling';\r\nimport { useHistory } from 'react-router-dom';\r\nconst JobbForm = () => {\r\n  const [data, setData] = useState({\r\n    jobTitle: '',\r\n    branch: '',\r\n    jobCategory: '',\r\n    numberOfPositions: '',\r\n    status: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    skills: '',\r\n    jobDescription: '',\r\n    jobRequirements: '',\r\n  });\r\n const history = useHistory();\r\n  const [successAlert, setSuccessAlert] = useState(false);\r\n  const [errorAlert, setErrorAlert] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      try {\r\n        await _PostSave(HRM_RECPLACE, data);\r\n        setSuccessAlert(true);\r\n        resetForm();\r\n        history.push('/app/ajgroup/HRM/JobList');\r\n      } \r\n      catch (error) {\r\n        console.log(error);\r\n        setErrorAlert(true);\r\n      }\r\n    } else {\r\n      setErrorAlert(true);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    return Object.values(data).every((value) => value.trim() !== '');\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setData({\r\n      jobTitle: '',\r\n      branch: '',\r\n      jobCategory: '',\r\n      numberOfPositions: '',\r\n      status: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      skills: '',\r\n      jobDescription: '',\r\n      jobRequirements: '',\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const jobCategories = ['Marketing', 'Sales', 'Human Resources', 'Finance'];\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h2>Job Form</h2>\r\n        {successAlert && <Alert color=\"success\">Form submitted successfully!</Alert>}\r\n        {errorAlert && <Alert color=\"danger\">Please fill all fields before submitting the form.</Alert>}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"jobTitle\">Job Title</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"jobTitle\"\r\n                  id=\"jobTitle\"\r\n                  value={data.jobTitle}\r\n                  onChange={handleInputChange}\r\n                  placeholder='Enter job Title'\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"branch\">Branch</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"branch\"\r\n                  id=\"branch\"\r\n                  value={data.branch}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"\">Select Branch</option>\r\n                  <option value=\"A\">A</option>\r\n                  <option value=\"B\">B</option>\r\n                  <option value=\"C\">C</option>\r\n                  Add your branch options here\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"jobCategory\">Job Category</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"jobCategory\"\r\n                  id=\"jobCategory\"\r\n                  value={data.jobCategory}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Select job category\"\r\n                >\r\n                  <option value=\"\">Select Job Category</option>\r\n                  <option value=\"A\">A </option>\r\n                  <option value=\"B\">B</option>\r\n                  {jobCategories.map((category) => (\r\n                    <option key={category} value={category}>\r\n                      {category}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"numberOfPositions\">Number of Positions</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"numberOfPositions\"\r\n                  id=\"numberOfPositions\"\r\n                  value={data.numberOfPositions}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter number of positions\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"status\">Status</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"status\"\r\n                  id=\"status\"\r\n                  value={data.status}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"\">Select Status</option>\r\n                  <option value=\"Active\">Active</option>\r\n                  <option value=\"Deactive\">Deactive</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"startDate\">Start Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  id=\"startDate\"\r\n                  value={data.startDate}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Select start date\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"endDate\">End Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"endDate\"\r\n                  id=\"endDate\"\r\n                  value={data.endDate}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Select end date\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"skills\">Skill</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"skills\"\r\n                  id=\"skills\"\r\n                  value={data.skills}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter required skills\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"jobDescription\">Job Description</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"jobDescription\"\r\n                  id=\"jobDescription\"\r\n                  value={data.jobDescription}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter job requirements\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"jobRequirements\">Job Requirement</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"jobRequirements\"\r\n                  id=\"jobRequirements\"\r\n                  value={data.jobRequirements}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter job requirements\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <FormGroup row>\r\n            <Col sm={{ size: 8, offset: 4 }}>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Create\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default JobbForm;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}