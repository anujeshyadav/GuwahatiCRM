{"version":3,"sources":["views/apps/freshlist/accounts/CreateCustomer.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CreateCustomer","useState","CreatAccountView","setCreatAccountView","RoleList","setRoleList","Countries","setCountry","BulkImport","setBulkImport","States","setState","Cities","setCities","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","Context","useContext","UserContext","handleInputChange","e","type","i","target","name","value","checked","test","files","length","useEffect","console","log","userdata","JSON","parse","localStorage","getItem","Get_RoleList","_id","database","then","res","ShowList","Role","filter","item","position","rolename","catch","err","swal","CreateCustomerxmlView","jsonData","xmlJs","xml2json","data","compact","spaces","input","MyDropDown","dropdown","className","render","history","style","cursor","color","onClick","push","onSubmit","preventDefault","formdata","FormData","map","ele","_attributes","append","_text","val","status","navigator","geolocation","getCurrentPosition","Date","timestamp","toLocaleString","coords","latitude","longitude","timeout","enableHighAccuracy","forEach","key","CreateCustomersave","response","lg","md","required","onChange","roleName","sm","label","option","moment","tz","format","phoneinput","inputClass","country","onKeyDown","includes","countryCodeEditable","phone","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","placeholder","dateFormat","UserInformatio","timeZone","number","onWheel","multiple","allimages","Array","from","handleFileChange","marginRight","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/311.2d379b63.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountView,\r\n  CreateCustomersave,\r\n  CreateCustomerxmlView,\r\n  Get_RoleList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nconst CreateCustomer = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [RoleList, setRoleList] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [BulkImport, setBulkImport] = useState({});\r\n\r\n  const [States, setState] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleFileChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    let allimages = Array.from(e.target.files);\r\n    setindex(i);\r\n    setFormData({\r\n      ...formData,\r\n      [name]: allimages,\r\n    });\r\n  };\r\n  const handleChange = () => {\r\n    console.log(\"object\");\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        }\r\n        //  else {\r\n        //   setError(\r\n        //     \"Please enter a valid number with a maximum length of 10 digits\"\r\n        //   );\r\n        // }\r\n      } else if (type == \"file\") {\r\n        // debugger;\r\n        if (e.target.files) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n          });\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    Get_RoleList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let ShowList = res?.Role?.filter(\r\n          (item, i) => item?.position > userdata?.rolename?.position\r\n        );\r\n        setRoleList(ShowList);\r\n        // console.log(ShowList);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Roles List Not found\");\r\n      });\r\n\r\n    console.log(userdata?._id);\r\n    formData[\"created_by\"] = userdata?._id;\r\n  }, []);\r\n  useEffect(() => {\r\n    CreateCustomerxmlView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, {\r\n          compact: true,\r\n          spaces: 2,\r\n        });\r\n        console.log(JSON.parse(jsonData)?.CreateCustomer);\r\n        setCreatAccountView(JSON.parse(jsonData)?.CreateCustomer?.input);\r\n\r\n        setdropdownValue(\r\n          JSON.parse(jsonData)?.CreateCustomer?.MyDropDown?.dropdown\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  }, []);\r\n  console.log(BulkImport);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(CreatAccountView);\r\n    // console.log(dropdownValue);\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let formdata = new FormData();\r\n    CreatAccountView?.map((ele, i) => {\r\n      if (ele?.type?._attributes?.type == \"text\") {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      } else if (ele?.type?._attributes?.type == \"file\") {\r\n        if (ele?.name?._text == \"Shopphoto\") {\r\n          formData[ele?.name?._text]?.map((val, index) => {\r\n            formdata.append(\"file\", formData[ele?.name?._text][index]);\r\n          });\r\n        }\r\n        if (ele?.name?._text == \"photo\") {\r\n          formData[ele?.name?._text]?.map((val, index) => {\r\n            formdata.append(\"files\", formData[ele?.name?._text][index]);\r\n          });\r\n        }\r\n      } else {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      }\r\n    });\r\n    formdata.append(\r\n      `${dropdownValue?.name?._text}`,\r\n      formData[dropdownValue?.name?._text]\r\n    );\r\n    formdata.append(\"status\", formData.status);\r\n    formdata.append(\"created_by\", userdata?._id);\r\n    formdata.append(\"rolename\", userdata?.rolename?._id);\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const date = new Date(position.timestamp);\r\n          const CurentTime = date.toLocaleString();\r\n          formdata.append(\"latitude\", position.coords.latitude);\r\n          formdata.append(\"longitude\", position.coords.longitude);\r\n        },\r\n        (error) => {\r\n          // this.setState({ Error: `Error: ${error}` });\r\n          swal(`Error: ${error}`);\r\n        },\r\n        { timeout: 10000, enableHighAccuracy: true }\r\n      );\r\n    } else {\r\n      swal(`Error: Geolocation not found`);\r\n    }\r\n\r\n    formdata.forEach((value, key) => {\r\n      // console.log(key, value);\r\n    });\r\n    if (error) {\r\n      // swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      CreateCustomersave(formdata)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setFormData({});\r\n          if (res.status) {\r\n            // window.location.goBack();\r\n            swal(\"Customer Created Successfully\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n          swal(\"Please Fill correct details\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Create Customer</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/SoftNumen/CustomerSearch\")\r\n                      }>\r\n                      {\" \"}\r\n                      Back\r\n                      {/* <FaPlus size={15} /> Create User */}\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* <hr /> */}\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"4\" md=\"4\">\r\n                  <FormGroup>\r\n                    <Label className=\"mb-1\">Role List</Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name=\"rolename\"\r\n                      value={formData[\"rolename\"]}\r\n                      onChange={(e) => {\r\n                        setFormData({\r\n                          ...formData,\r\n                          [\"rolename\"]: e.target.value,\r\n                        });\r\n                      }}>\r\n                      <option>--select Role--</option>\r\n                      {RoleList &&\r\n                        RoleList?.length &&\r\n                        RoleList?.map((ele, i) => {\r\n                          return (\r\n                            <option value={ele?._id}>{ele?.roleName}</option>\r\n                          );\r\n                        })}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                {dropdownValue && (\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label className=\"mb-1\">\r\n                        {dropdownValue && dropdownValue?.label?._text}\r\n                      </Label>\r\n                      <CustomInput\r\n                        required\r\n                        type=\"select\"\r\n                        name={dropdownValue?.name?._text}\r\n                        value={formData[dropdownValue?.name?._text]}\r\n                        onChange={handleInputChange}>\r\n                        <option value=\"\">--Select --</option>\r\n                        {dropdownValue?.option?.map((option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}>\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        ))}\r\n                      </CustomInput>\r\n                    </FormGroup>\r\n                  </Col>\r\n                )}\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.map((ele, i) => {\r\n                    {\r\n                      /* console.log(Context?.UserInformatio?.dateFormat); */\r\n                    }\r\n                    // console.log(Countries);\r\n                    // console.log(States);\r\n                    const convertedTime = moment(\"2022-08-05T12:00:00\")\r\n                      .tz(\"America/New_York\")\r\n                      .format(\"D MMM, YYYY HH:mm\");\r\n\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"us\"}\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [ele?.name?._text]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        {\r\n                          /* console.log(ele); */\r\n                        }\r\n                        return (\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Countries}\r\n                                onChange={(country) => {\r\n                                  setCountry(country);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Country\"]: country?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  Countries?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={States}\r\n                                onChange={(State) => {\r\n                                  setState(State);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label className=\"mb-1\">\r\n                                {ele?.label?._text}\r\n                              </Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  States?.countryCode,\r\n                                  States?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Cities}\r\n                                onChange={(City) => {\r\n                                  setCities(City);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            {ele?.type?._attributes?.type == \"date\" ? (\r\n                              <>\r\n                                <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      dateFormat={\r\n                                        Context?.UserInformatio?.dateFormat\r\n                                      }\r\n                                      value={\r\n                                        moment(formData[ele?.name?._text])\r\n                                          .tz(Context?.UserInformatio?.timeZone)\r\n                                          .format(\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          )\r\n                                        // formData[ele?.name?._text]\r\n                                      }\r\n                                      // value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {!!ele?.number ? (\r\n                            <>\r\n                              <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                                <FormGroup key={i}>\r\n                                  <Label className=\"mb-1\">\r\n                                    {ele?.label?._text}\r\n                                  </Label>\r\n\r\n                                  <Input\r\n                                    onWheel={(e) => {\r\n                                      e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                    }}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <Col key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <FormGroup key={i}>\r\n                                {ele?.type?._attributes?.type &&\r\n                                ele?.type?._attributes?.type == \"file\" ? (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      multiple\r\n                                      className=\"form-control\"\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      //   value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleFileChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n\r\n                                {/* <Label className=\"mb-1\">\r\n                                  {ele?.label?._text}\r\n                                </Label>\r\n\r\n                                <Input\r\n                                  className=\"form-control\"\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) => {\r\n                                    // const value = e.target.value;\r\n                                    // // Use regular expression to allow only numbers\r\n                                    // const numericValue = value.replace(\r\n                                    //   /\\D/g,\r\n                                    //   \"\"\r\n                                    // );\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )} */}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n                <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Bulk Import</Label>\r\n\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"file\"\r\n                      placeholder=\"\"\r\n                      name=\"BulkImport\"\r\n                      onChange={(e) => {\r\n                        setBulkImport(e.target.files[0]);\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <hr />\r\n              <Row className=\"mt-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-0\">Status</Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={(e) => {\r\n                      setFormData({\r\n                        ...formData,\r\n                        [\"status\"]: e.target.value,\r\n                      });\r\n                    }}>\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              {/* <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\">\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateCustomer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}