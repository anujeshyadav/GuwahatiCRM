{"version":3,"sources":["views/apps/freshlist/house/AddProduct.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AddProduct","useState","CreatAccountView","setCreatAccountView","categoryList","setcategoryList","UnitList","setUnitList","wareHouseList","setWareHouseList","subcatlist","setsubcatlist","Countries","setCountry","States","setState","Cities","setCities","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","Context","useContext","UserContext","handleInputChange","e","type","i","target","name","value","checked","test","files","length","useEffect","CreateProductXMLView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","console","log","JSON","parse","createProduct","catch","err","pageparmission","localStorage","getItem","AllCategoryList","_id","Category","userData","UnitListView","Unit","CreateWarehouseList","Warehouse","className","render","history","color","onClick","push","onSubmit","preventDefault","formdata","FormData","append","input","map","ele","_attributes","_text","MyDropDown","dropdown","swal","SaveProduct","status","key","lg","md","label","required","placeholder","onChange","selecteddata","filter","subcategories","handlechangeSubcat","cat","includes","whList","WarehouseName","unitQty","primaryUnit","option","moment","tz","format","phoneinput","sm","inputClass","country","onKeyDown","countryCodeEditable","phone","style","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","dateFormat","UserInformatio","timeZone","number","onWheel","handleFileChange","marginRight","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/301.c5747fc5.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  AllCategoryList,\r\n  CreateProductXMLView,\r\n  SaveProduct,\r\n  UnitListView,\r\n  CreateWarehouseList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst AddProduct = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [categoryList, setcategoryList] = useState([]);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [wareHouseList, setWareHouseList] = useState([]);\r\n  const [subcatlist, setsubcatlist] = useState([]);\r\n  const [Countries, setCountry] = useState({});\r\n  const [States, setState] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else if (type == \"file\") {\r\n        // debugger;\r\n        if (e.target.files) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n          });\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const changeHandler1 = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [\"status\"]: e.target.value,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    // console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    CreateProductXMLView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData).createProduct);\r\n        setCreatAccountView(JSON.parse(jsonData)?.createProduct);\r\n        setdropdownValue(JSON.parse(jsonData)?.createProduct);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    AllCategoryList(pageparmission?._id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res?.Category) {\r\n          setcategoryList(res.Category);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    UnitListView(userData?._id)\r\n      .then((res) => {\r\n        console.log(res?.Unit);\r\n        setUnitList(res?.Unit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    CreateWarehouseList(userData?._id)\r\n      .then((res) => {\r\n        console.log(res?.Warehouse);\r\n        setWareHouseList(res?.Warehouse);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const handleFileChange = (e, type, i) => {\r\n    const { name } = e.target;\r\n    setindex(i);\r\n    setFormData({\r\n      ...formData,\r\n      [name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    formdata.append(\"created_by\", userData._id);\r\n    CreatAccountView?.input?.map((ele, i) => {\r\n      if (ele?.type?._attributes?.type == \"text\") {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      } else if (ele?.type?._attributes?.type == \"file\") {\r\n        formdata.append(\"file\", formData[ele?.name?._text]);\r\n      } else {\r\n        formdata.append(`${ele?.name._text}`, formData[ele?.name?._text]);\r\n      }\r\n    });\r\n\r\n    CreatAccountView?.MyDropDown?.map((ele, i) => {\r\n      formdata.append(\r\n        `${ele?.dropdown?.name?._text}`,\r\n        formData[ele?.dropdown?.name?._text]\r\n      );\r\n    });\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveProduct(formdata)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setFormData({});\r\n          if (res.status) {\r\n            // window.location.reload();\r\n            swal(\"Product Created Successfully\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const handlechangeSubcat = (e) => {\r\n    console.log(e.target.value);\r\n    if (e.target.value != \"NA\") {\r\n      let selecteddata = categoryList?.filter(\r\n        (ele, i) => ele?.name == e.target.value\r\n      );\r\n      console.log(selecteddata[0]?.subcategories);\r\n      setsubcatlist(selecteddata[0]?.subcategories);\r\n    } else {\r\n      swal(\"Select Category\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Add Product</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      className=\"btn  float-right\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        history.push(\"/app/freshlist/house/houseProductList\")\r\n                      }>\r\n                      Go back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* <hr /> */}\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {dropdownValue &&\r\n                  dropdownValue?.MyDropDown?.map((ele, i) => {\r\n                    if (ele?.dropdown?.name?._text == \"category\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={(e) => {\r\n                                handleInputChange(e);\r\n                                handlechangeSubcat(e);\r\n                              }}>\r\n                              <option value=\"NA\">--Select Category--</option>\r\n                              {categoryList?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text == \"SubCategory\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}>\r\n                              <option value=\"NA\">--Select SubCategory--</option>\r\n                              {subcatlist?.map((cat) => (\r\n                                <option value={cat?.name} key={cat?._id}>\r\n                                  {cat?.name}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text?.includes(\"arehouse\")) {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1 mt-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select WareHouse\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}>\r\n                              <option value=\"NA\">--Select WareHouse--</option>\r\n\r\n                              {wareHouseList?.map((whList) => (\r\n                                <option\r\n                                  value={whList?.WarehouseName}\r\n                                  key={whList?._id}>\r\n                                  {whList?.WarehouseName}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                    if (ele?.dropdown?.name?._text == \"Unit\") {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"4\" md=\"4\">\r\n                            <Label className=\"mb-1\">\r\n                              {ele?.dropdown?.label?._text}\r\n                            </Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              placeholder=\"Select Category\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}>\r\n                              <option value=\"NA\">--Select Unit--</option>\r\n                              {UnitList &&\r\n                                UnitList?.map((cat) => (\r\n                                  <option value={cat?.unitQty} key={cat?._id}>\r\n                                    {cat?.primaryUnit}\r\n                                  </option>\r\n                                ))}\r\n                            </CustomInput>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <Col lg=\"4\" md=\"4\">\r\n                          <FormGroup>\r\n                            <Label>{ele?.dropdown?.label?._text}</Label>\r\n                            <CustomInput\r\n                              required\r\n                              type=\"select\"\r\n                              name={ele?.dropdown?.name?._text}\r\n                              value={formData[ele?.dropdown?.name?._text]}\r\n                              onChange={handleInputChange}>\r\n                              <option value=\"\">--Select Role--</option>\r\n                              {ele?.dropdown?.option?.map((option, index) => (\r\n                                <option\r\n                                  key={index}\r\n                                  value={option?._attributes?.value}>\r\n                                  {option?._attributes?.value}\r\n                                </option>\r\n                              ))}\r\n                            </CustomInput>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    }\r\n                  })}\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                            ?.name?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n                      {dropdownValue?.CreateAccount?.MyDropdown?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col> */}\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.input?.map((ele, i) => {\r\n                    {\r\n                      /* console.log(Context?.UserInformatio?.dateFormat); */\r\n                    }\r\n                    // console.log(Countries);\r\n                    // console.log(States);\r\n                    const convertedTime = moment(\"2022-08-05T12:00:00\")\r\n                      .tz(\"America/New_York\")\r\n                      .format(\"D MMM, YYYY HH:mm\");\r\n\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"us\"}\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(phone) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [ele?.name?._text]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        console.log(ele);\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Countries}\r\n                                onChange={(country) => {\r\n                                  setCountry(country);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Country\"]: country?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  Countries?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={States}\r\n                                onChange={(State) => {\r\n                                  setState(State);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  States?.countryCode,\r\n                                  States?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Cities}\r\n                                onChange={(City) => {\r\n                                  setCities(City);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            {ele?.type?._attributes?.type == \"date\" ? (\r\n                              <>\r\n                                <Col\r\n                                  className=\"mt-1\"\r\n                                  key={i}\r\n                                  lg=\"4\"\r\n                                  md=\"4\"\r\n                                  sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      dateFormat={\r\n                                        Context?.UserInformatio?.dateFormat\r\n                                      }\r\n                                      value={\r\n                                        moment(formData[ele?.name?._text])\r\n                                          .tz(Context?.UserInformatio?.timeZone)\r\n                                          .format(\r\n                                            Context?.UserInformatio?.dateFormat\r\n                                          )\r\n                                        // formData[ele?.name?._text]\r\n                                      }\r\n                                      // value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Col\r\n                                  className=\"mt-1\"\r\n                                  key={i}\r\n                                  lg=\"4\"\r\n                                  md=\"4\"\r\n                                  sm=\"12\">\r\n                                  <FormGroup key={i}>\r\n                                    <Label>{ele?.label?._text}</Label>\r\n\r\n                                    <Input\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </FormGroup>\r\n                                </Col>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {!!ele?.number ? (\r\n                            <>\r\n                              <Col\r\n                                className=\"mt-1\"\r\n                                key={i}\r\n                                lg=\"4\"\r\n                                md=\"4\"\r\n                                sm=\"12\">\r\n                                <FormGroup key={i}>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n\r\n                                  <Input\r\n                                    onWheel={(e) => {\r\n                                      e.preventDefault(); // Prevent the mouse wheel scroll event\r\n                                    }}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    type={ele?.type?._attributes?.type}\r\n                                    placeholder={ele?.placeholder?._text}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        e,\r\n                                        ele?.type?._attributes?.type,\r\n                                        i\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <Col className=\"mt-1\" key={i} lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <FormGroup key={i}>\r\n                                {ele?.type?._attributes?.type &&\r\n                                ele?.type?._attributes?.type == \"file\" ? (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      //   value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleFileChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <Label className=\"mb-1\">\r\n                                      {ele?.label?._text}\r\n                                    </Label>\r\n\r\n                                    <Input\r\n                                      className=\"form-control\"\r\n                                      onKeyDown={(e) => {\r\n                                        if (\r\n                                          ele?.type?._attributes?.type ==\r\n                                          \"number\"\r\n                                        ) {\r\n                                          [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                            e.key\r\n                                          ) && e.preventDefault();\r\n                                        }\r\n                                      }}\r\n                                      type={ele?.type?._attributes?.type}\r\n                                      placeholder={ele?.placeholder?._text}\r\n                                      name={ele?.name?._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      onChange={(e) => {\r\n                                        // const value = e.target.value;\r\n                                        // // Use regular expression to allow only numbers\r\n                                        // const numericValue = value.replace(\r\n                                        //   /\\D/g,\r\n                                        //   \"\"\r\n                                        // );\r\n                                        handleInputChange(\r\n                                          e,\r\n                                          ele?.type?._attributes?.type,\r\n                                          i\r\n                                        );\r\n                                      }}\r\n                                    />\r\n                                    {index === i ? (\r\n                                      <>\r\n                                        {error && (\r\n                                          <span style={{ color: \"red\" }}>\r\n                                            {error}\r\n                                          </span>\r\n                                        )}\r\n                                      </>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                  </>\r\n                                )}\r\n\r\n                                {/* <Label className=\"mb-1\">\r\n                                  {ele?.label?._text}\r\n                                </Label>\r\n\r\n                                <Input\r\n                                  className=\"form-control\"\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) => {\r\n                                    // const value = e.target.value;\r\n                                    // // Use regular expression to allow only numbers\r\n                                    // const numericValue = value.replace(\r\n                                    //   /\\D/g,\r\n                                    //   \"\"\r\n                                    // );\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )} */}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n              </Row>\r\n\r\n              <hr />\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                  <Label className=\"mb-0\">Status</Label>\r\n                  <div className=\"form-label-group\" onChange={changeHandler1}>\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      // value={formData[\"status\"]}\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\">\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddProduct;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}