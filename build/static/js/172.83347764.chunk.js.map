{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/Container.js","../../../src/index.tsx","../node_modules/reactstrap/es/InputGroupAddon.js","assets/img/svg/google.svg","views/pages/authentication/login/LoginFirebase.js","views/pages/authentication/login/LoginJWT.js","views/pages/authentication/login/Login.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","InputGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","InputGroupText","fluid","oneOfType","bool","Container","containerClass","isStyleObject","obj","OTPInput","_a","_b","_c","numInputs","onPaste","renderInput","_d","shouldAutoFocus","_e","inputType","renderSeparator","placeholder","containerStyle","inputStyle","_f","skipDefaultStyles","useState","activeInput","setActiveInput","inputRefs","useRef","getOTPValue","toString","split","isInputNum","useEffect","current","slice","focus","getPlaceholderValue","length","console","error","isInputValueValid","isNaN","Number","trim","handleChange","event","target","changeCodeAtFocus","focusInput","handleInputChange","nativeEvent","data","preventDefault","handleBlur","handleKeyDown","otp","code","key","includes","index","Math","max","min","select","handleOTPChange","otpValue","join","handlePaste","nextActiveInput","pastedData","clipboardData","getData","some","pos","shift","style","Object","assign","display","alignItems","undefined","Array","from","_","map","Fragment","ref","element","onFocus","handleFocus","onBlur","onKeyDown","autoComplete","maxLength","width","textAlign","inputMode","onInput","addonType","oneOf","isRequired","children","node","InputGroupAddon","module","exports","LoginFirebase","state","email","password","remember","handleLogin","e","submitLoginWithFireBase","handleRemember","setState","CardBody","Form","action","onSubmit","FormGroup","Input","required","Label","to","Button","Ripple","loginWithFB","loginWithTwitter","stroke","loginWithGoogle","src","googleSvg","alt","height","loginWithGithub","connect","values","auth","login","LoginJWT","loginWithJWT","i","Login","handlechange","name","loginOTPHandler","emailotp","Opt","username","UserOTPVerify","then","response","basicinfor","user","newinfor","user1","allinfor","log","token","status","context","setUserInformatio","localStorage","setItem","JSON","stringify","setTimeout","history","push","swal","buttons","ok","text","catch","err","handleUserLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","CurentTime","Date","timestamp","toLocaleString","Location","latitude","coords","longitude","Error","message","timeout","enableHighAccuracy","loginHandler","UserLogin","res","title","dangerMode","changepassword","formdata","FormData","append","axiosConfig","post","resetpassword","Otp","preventBackButton","getLocationAndUpdateState","window","pushState","location","href","popstateHandler","go","addEventListener","allowBackButton","removeEventListener","UserCredential","Row","Col","sm","xl","lg","md","Card","logo","CardHeader","CardTitle","OtpScreen","parse","gmail","whatsapp","whatsappotp","sms","smsotp","TabContent","activeTab","TabPane","tabId","border","cursor","outline","contextType","UserContext","row","check","inline"],"mappings":"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","file":"static/js/172.83347764.chunk.js","sourcesContent":["import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"size\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import React from 'react';\n\ntype AllowedInputTypes = 'password' | 'text' | 'number' | 'tel';\n\ntype InputProps = Required<\n  Pick<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    | 'value'\n    | 'onChange'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onKeyDown'\n    | 'onPaste'\n    | 'aria-label'\n    | 'maxLength'\n    | 'autoComplete'\n    | 'style'\n    | 'inputMode'\n    | 'onInput'\n  > & {\n    ref: React.RefCallback<HTMLInputElement>;\n    placeholder: string | undefined;\n    className: string | undefined;\n    type: AllowedInputTypes;\n  }\n>;\n\ninterface OTPInputProps {\n  /** Value of the OTP input */\n  value?: string;\n  /** Number of OTP inputs to be rendered */\n  numInputs?: number;\n  /** Callback to be called when the OTP value changes */\n  onChange: (otp: string) => void;\n  /** Callback to be called when pasting content into the component */\n  onPaste?: (event: React.ClipboardEvent<HTMLDivElement>) => void;\n  /** Function to render the input */\n  renderInput: (inputProps: InputProps, index: number) => React.ReactNode;\n  /** Whether the first input should be auto focused */\n  shouldAutoFocus?: boolean;\n  /** Placeholder for the inputs */\n  placeholder?: string;\n  /** Function to render the separator */\n  renderSeparator?: ((index: number) => React.ReactNode) | React.ReactNode;\n  /** Style for the container */\n  containerStyle?: React.CSSProperties | string;\n  /** Style for the input */\n  inputStyle?: React.CSSProperties | string;\n  /** The type that will be passed to the input being rendered */\n  inputType?: AllowedInputTypes;\n  /** Do not apply the default styles to the inputs, will be removed in future versions */\n  skipDefaultStyles?: boolean; // TODO: Remove in next major release\n}\n\nconst isStyleObject = (obj: unknown) => typeof obj === 'object' && obj !== null;\n\nconst OTPInput = ({\n  value = '',\n  numInputs = 4,\n  onChange,\n  onPaste,\n  renderInput,\n  shouldAutoFocus = false,\n  inputType = 'text',\n  renderSeparator,\n  placeholder,\n  containerStyle,\n  inputStyle,\n  skipDefaultStyles = false,\n}: OTPInputProps) => {\n  const [activeInput, setActiveInput] = React.useState(0);\n  const inputRefs = React.useRef<Array<HTMLInputElement | null>>([]);\n\n  const getOTPValue = () => (value ? value.toString().split('') : []);\n\n  const isInputNum = inputType === 'number' || inputType === 'tel';\n\n  React.useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, numInputs);\n  }, [numInputs]);\n\n  React.useEffect(() => {\n    if (shouldAutoFocus) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [shouldAutoFocus]);\n\n  const getPlaceholderValue = () => {\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n    return undefined;\n  };\n\n  const isInputValueValid = (value: string) => {\n    const isTypeValid = isInputNum ? !isNaN(Number(value)) : typeof value === 'string';\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (isInputValueValid(value)) {\n      changeCodeAtFocus(value);\n      focusInput(activeInput + 1);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { nativeEvent } = event;\n    if (!isInputValueValid(event.target.value)) {\n      // @ts-expect-error - This was added previosly to handle and edge case\n      // for dealing with keyCode \"229 Unidentified\" on Android. Check if this is\n      // still needed.\n      if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n        event.preventDefault();\n        changeCodeAtFocus('');\n        focusInput(activeInput - 1);\n      }\n      // Clear the input if it's not valid value because firefox allows\n      // pasting non-numeric characters in a number type input\n      event.target.value = '';\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => (index: number) => {\n    setActiveInput(index);\n    event.target.select();\n  };\n\n  const handleBlur = () => {\n    setActiveInput(activeInput - 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const otp = getOTPValue();\n    if ([event.code, event.key].includes('Backspace')) {\n      event.preventDefault();\n      changeCodeAtFocus('');\n      focusInput(activeInput - 1);\n    } else if (event.code === 'Delete') {\n      event.preventDefault();\n      changeCodeAtFocus('');\n    } else if (event.code === 'ArrowLeft') {\n      event.preventDefault();\n      focusInput(activeInput - 1);\n    } else if (event.code === 'ArrowRight') {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    }\n    // React does not trigger onChange when the same value is entered\n    // again. So we need to focus the next input manually in this case.\n    else if (event.key === otp[activeInput]) {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    } else if (\n      event.code === 'Spacebar' ||\n      event.code === 'Space' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    }\n  };\n\n  const focusInput = (index: number) => {\n    const activeInput = Math.max(Math.min(numInputs - 1, index), 0);\n\n    if (inputRefs.current[activeInput]) {\n      inputRefs.current[activeInput]?.focus();\n      inputRefs.current[activeInput]?.select();\n      setActiveInput(activeInput);\n    }\n  };\n\n  const changeCodeAtFocus = (value: string) => {\n    const otp = getOTPValue();\n    otp[activeInput] = value[0];\n    handleOTPChange(otp);\n  };\n\n  const handleOTPChange = (otp: Array<string>) => {\n    const otpValue = otp.join('');\n    onChange(otpValue);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    const otp = getOTPValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = event.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Prevent pasting if the clipboard data contains non-numeric values for number inputs\n    if (isInputNum && pastedData.some((value) => isNaN(Number(value)))) {\n      return;\n    }\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift() ?? '';\n        nextActiveInput++;\n      }\n    }\n\n    focusInput(nextActiveInput);\n    handleOTPChange(otp);\n  };\n\n  return (\n    <div\n      style={Object.assign({ display: 'flex', alignItems: 'center' }, isStyleObject(containerStyle) && containerStyle)}\n      className={typeof containerStyle === 'string' ? containerStyle : undefined}\n      onPaste={onPaste}\n    >\n      {Array.from({ length: numInputs }, (_, index) => index).map((index) => (\n        <React.Fragment key={index}>\n          {renderInput(\n            {\n              value: getOTPValue()[index] ?? '',\n              placeholder: getPlaceholderValue()?.[index] ?? undefined,\n              ref: (element) => (inputRefs.current[index] = element),\n              onChange: handleChange,\n              onFocus: (event) => handleFocus(event)(index),\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              onPaste: handlePaste,\n              autoComplete: 'off',\n              maxLength: 1,\n              'aria-label': `Please enter OTP character ${index + 1}`,\n              style: Object.assign(\n                !skipDefaultStyles ? ({ width: '1em', textAlign: 'center' } as const) : {},\n                isStyleObject(inputStyle) ? inputStyle : {}\n              ),\n              className: typeof inputStyle === 'string' ? inputStyle : undefined,\n              type: inputType,\n              inputMode: isInputNum ? 'numeric' : 'text',\n              onInput: handleInputChange,\n            },\n            index\n          )}\n          {index < numInputs - 1 && (typeof renderSeparator === 'function' ? renderSeparator(index) : renderSeparator)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport type { OTPInputProps, InputProps, AllowedInputTypes };\nexport default OTPInput;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","module.exports = __webpack_public_path__ + \"static/media/google.73cbaa09.svg\";","import React from \"react\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check, Facebook, Twitter, GitHub } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport googleSvg from \"../../../../assets/img/svg/google.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  submitLoginWithFireBase,\r\n  loginWithFB,\r\n  loginWithTwitter,\r\n  loginWithGoogle,\r\n  loginWithGithub,\r\n} from \"../../../../redux/actions/auth/loginActions\";\r\n\r\nclass LoginFirebase extends React.Component {\r\n  state = {\r\n    email: \"demo@demo.com\",\r\n    password: \"demodemo\",\r\n    remember: false,\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.submitLoginWithFireBase(\r\n      this.state.email,\r\n      this.state.password,\r\n      this.state.remember\r\n    );\r\n  };\r\n\r\n  handleRemember = (e) => {\r\n    this.setState({\r\n      remember: e.target.checked,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form action=\"/\" onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {/* <Button.Ripple\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => {\r\n                  history.push(\"/pages/register\");\r\n                }}\r\n              >\r\n                Register\r\n              </Button.Ripple> */}\r\n              <Button.Ripple color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button.Ripple>\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n        <div className=\"auth-footer\">\r\n          <div className=\"divider\">\r\n            <div className=\"divider-text\">OR</div>\r\n          </div>\r\n          <div className=\"footer-btn\">\r\n            <Button.Ripple\r\n              className=\"btn-facebook\"\r\n              color=\"\"\r\n              onClick={() => {\r\n                this.props.loginWithFB();\r\n              }}\r\n            >\r\n              <Facebook size={14} />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-twitter\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithTwitter}\r\n            >\r\n              <Twitter size={14} stroke=\"white\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-google\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithGoogle}\r\n            >\r\n              <img src={googleSvg} alt=\"google\" height=\"15\" width=\"15\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-github\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithGithub}\r\n            >\r\n              <GitHub size={14} stroke=\"white\" />\r\n            </Button.Ripple>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitLoginWithFireBase,\r\n  loginWithFB,\r\n  loginWithTwitter,\r\n  loginWithGoogle,\r\n  loginWithGithub,\r\n})(LoginFirebase);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"../../../../history\";\r\n\r\nclass LoginJWT extends React.Component {\r\n  state = {\r\n    email: \"admin@gmail.com\",\r\n    password: \"12345\",\r\n    remember: false,\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.loginWithJWT(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form action=\"/\" onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {/* <Button.Ripple\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => {\r\n                  history.push(\"/pages/register\");\r\n                }}\r\n              >\r\n                Register\r\n              </Button.Ripple> */}\r\n              <Button.Ripple color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button.Ripple>\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  CardTitle,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardHeader,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  TabContent,\r\n  TabPane,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport { FaBeer } from \"react-icons/fa\";\r\nimport logo from \"../../../../assets/img/logo/mainLogo1.png\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\nimport { history } from \"../../../../history\";\r\nimport LoginAuth0 from \"./LoginAuth0\";\r\nimport LoginFirebase from \"./LoginFirebase\";\r\nimport LoginJWT from \"./LoginJWT\";\r\nimport { connect } from \"react-redux\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { UserLogin, UserOTPVerify } from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\n\r\nclass Login extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      Otp: \"\",\r\n      Location: { latitude: \"\", longitude: \"\", timestamp: \"\" },\r\n      Error: \"\",\r\n      Otp: \"\",\r\n      emailotp: \"\",\r\n      type: \"password\",\r\n      whatsappotp: \"\",\r\n      smsotp: \"\",\r\n      OtpScreen: false,\r\n      UserCredential: {},\r\n      password: \"\",\r\n      resetpassword: false,\r\n    };\r\n  }\r\n  // async componentDidMount() {\r\n  //   this.preventBackButton();\r\n  //   await this.handleUserLocation();\r\n  // }\r\n  async getLocationAndUpdateState() {\r\n    try {\r\n      await this.handleUserLocation();\r\n      // Additional logic after obtaining location, if needed\r\n    } catch (error) {\r\n      console.error(\"Error obtaining location:\", error);\r\n      // Handle the error or update state accordingly\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    this.preventBackButton();\r\n    await this.getLocationAndUpdateState();\r\n  }\r\n  preventBackButton() {\r\n    window.history.pushState(null, null, window.location.href);\r\n    this.popstateHandler = function () {\r\n      window.history.go(1);\r\n    };\r\n    window.addEventListener(\"popstate\", this.popstateHandler);\r\n  }\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  componentWillUnmount() {\r\n    this.allowBackButton();\r\n  }\r\n  allowBackButton() {\r\n    window.removeEventListener(\"popstate\", this.popstateHandler);\r\n  }\r\n  loginOTPHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.emailotp?.length == 6) {\r\n      let Opt = { otp: this.state.emailotp, username: this.state.email };\r\n\r\n      await UserOTPVerify(Opt)\r\n        .then((response) => {\r\n          let basicinfor = response?.user;\r\n          let newinfor = response?.user?.user1;\r\n          let allinfor = { ...basicinfor, ...newinfor };\r\n          console.log(response?.user?.token);\r\n          if (response?.status) {\r\n            this.context?.setUserInformatio(allinfor);\r\n            localStorage.setItem(\"userData\", JSON.stringify(allinfor));\r\n            localStorage.setItem(\r\n              \"userToken\",\r\n              JSON.stringify(response?.user?.token)\r\n            );\r\n\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/dashboard\");\r\n            }, 1500);\r\n            swal(\r\n              \"Sucessfully login\",\r\n              \"You are LoggedIn!\",\r\n\r\n              {\r\n                buttons: {\r\n                  ok: { text: \"Ok\", value: \"ok\" },\r\n                },\r\n              }\r\n            ).then((value) => {\r\n              switch (value) {\r\n                case \"ok\":\r\n                  break;\r\n                default:\r\n              }\r\n            });\r\n          } else {\r\n            swal(\"Something Went Wrong\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n          swal(\r\n            `Error`,\r\n            `${err.response?.data.error} Please Enter correct Details`\r\n          );\r\n        });\r\n    } else {\r\n      swal(\"Please Enter OTP\");\r\n      // swal({\r\n      //   title: \"Are you sure?\",\r\n      //   text: \"Are you sure that you want to leave this page?\",\r\n      //   icon: \"warning\",\r\n      //   dangerMode: true,\r\n      // }).then((willDelete) => {\r\n      //   if (willDelete) {\r\n      //     swal(\"Deleted!\", \"Your imaginary file has been deleted!\", \"success\");\r\n      //   }\r\n      // });\r\n    }\r\n  };\r\n  handleUserLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const date = new Date(position.timestamp);\r\n            const CurentTime = date.toLocaleString();\r\n\r\n            this.state.Location.latitude = position.coords.latitude;\r\n            this.state.Location.longitude = position.coords.longitude;\r\n            this.state.Location.timestamp = CurentTime;\r\n            // this.setState((prevState) => ({\r\n            //   Location: {\r\n            //     ...prevState.Location,\r\n            //     latitude: position.coords.latitude,\r\n            //     longitude: position.coords.longitude,\r\n            //     timestamp: currentTime,\r\n            //   },\r\n            //   Error: null, // Reset error if successful\r\n            // }));\r\n\r\n            resolve(); // Resolve the promise when location is obtained\r\n          },\r\n          (error) => {\r\n            this.setState({ Error: `Error: ${error.message}` });\r\n            reject(error); // Reject the promise if there's an error\r\n          },\r\n          { timeout: 10000, enableHighAccuracy: true }\r\n        );\r\n      } else {\r\n        this.setState({\r\n          Error: \"Geolocation is not supported by this browser.\",\r\n        });\r\n        reject(new Error(\"Geolocation is not supported by this browser.\"));\r\n      }\r\n    });\r\n  };\r\n  // handleUserLocation = () => {\r\n  //   if (navigator.geolocation) {\r\n  //     navigator.geolocation.getCurrentPosition(\r\n  //       (position) => {\r\n  //         const date = new Date(position.timestamp);\r\n  //         const CurentTime = date.toLocaleString();\r\n\r\n  //         this.state.Location.latitude = position.coords.latitude;\r\n  //         this.state.Location.longitude = position.coords.longitude;\r\n  //         this.state.Location.timestamp = CurentTime;\r\n  //       },\r\n  //       (error) => {\r\n  //         this.setState({ Error: `Error: ${error}` });\r\n  //       },\r\n  //       { timeout: 10000, enableHighAccuracy: true }\r\n  //     );\r\n  //   } else {\r\n  //     this.setState({\r\n  //       Error: \"Geolocation is not supported by this browser.\",\r\n  //     });\r\n  //   }\r\n  // };\r\n  loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    // await this.handleUserLocation();\r\n    // this.props.history.push(\"/dashboard\");\r\n    let data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      // latitude: this.state.Location.latitude,\r\n      // longitude: this.state.Location?.longitude,\r\n      // currentAddress: response.data.display_name,\r\n    };\r\n    await UserLogin(data)\r\n      .then((res) => {\r\n        let basicinfor = res?.user;\r\n        localStorage.setItem(\"userData\", JSON.stringify(basicinfor));\r\n        this.context?.setUserInformatio(basicinfor);\r\n\r\n        swal(\r\n          \"Success\",\r\n          \"You are LoggedIn!\",\r\n\r\n          {\r\n            buttons: {\r\n              ok: { text: \"Ok\", value: \"ok\" },\r\n            },\r\n          }\r\n        ).then((value) => {\r\n          switch (value) {\r\n            case \"ok\":\r\n              break;\r\n            default:\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/dashboard\");\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response?.data.message);\r\n\r\n        if (err.response?.data.message == \"Incorrect password\") {\r\n          swal({\r\n            title: \"Some Error Occurred\",\r\n            text: `Incorrect Password`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        } else if (err.response?.data.message == \"Incorrect Email\") {\r\n          // swal(\"Error\", \"Please Enter Correct Password\");\r\n          swal({\r\n            title: \"Some Error Occurred\",\r\n            text: `Incorrect Email`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        } else {\r\n          swal({\r\n            title: \"Please Enter Correct Username\",\r\n            text: `Incorrect username`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        }\r\n      });\r\n    // console.log(this.state.Location);\r\n    // if (this.state.Location.latitude && this.state.Location?.longitude) {\r\n    //   try {\r\n    //     const apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${this.state.Location.latitude}&lon=${this.state.Location?.longitude}`;\r\n    //     const response = await axios.get(apiUrl);\r\n    //     // console.log(response);\r\n    //     if (response.data.display_name) {\r\n    //       // setAddress(response.data.display_name);\r\n    //       let data = {\r\n    //         email: this.state.email,\r\n    //         password: this.state.password,\r\n    //         latitude: this.state.Location.latitude,\r\n    //         longitude: this.state.Location?.longitude,\r\n    //         currentAddress: response.data.display_name,\r\n    //       };\r\n    //       await UserLogin(data)\r\n    //         .then((res) => {\r\n    //           let basicinfor = res?.user;\r\n    //           localStorage.setItem(\"userData\", JSON.stringify(basicinfor));\r\n    //           this.context?.setUserInformatio(basicinfor);\r\n\r\n    //           swal(\r\n    //             \"Sucessfully login\",\r\n    //             \"You are LoggedIn!\",\r\n    //             \"Success\",\r\n\r\n    //             {\r\n    //               buttons: {\r\n    //                 ok: { text: \"Ok\", value: \"ok\" },\r\n    //               },\r\n    //             }\r\n    //           ).then((value) => {\r\n    //             switch (value) {\r\n    //               case \"ok\":\r\n    //                 break;\r\n    //               default:\r\n    //             }\r\n    //           });\r\n    //           setTimeout(() => {\r\n    //             this.props.history.push(\"/dashboard\");\r\n    //           }, 2000);\r\n    //         })\r\n    //         .catch((err) => {\r\n    //           console.log(err.response?.data.message);\r\n\r\n    //           if (err.response?.data.message == \"Incorrect password\") {\r\n    //             swal({\r\n    //               title: \"Some Error Occurred\",\r\n    //               text: `Incorrect Password`,\r\n    //               icon: \"warning\",\r\n    //               dangerMode: false,\r\n    //             });\r\n    //           } else if (err.response?.data.message == \"Incorrect Email\") {\r\n    //             // swal(\"Error\", \"Please Enter Correct Password\");\r\n    //             swal({\r\n    //               title: \"Some Error Occurred\",\r\n    //               text: `Incorrect Email`,\r\n    //               icon: \"warning\",\r\n    //               dangerMode: false,\r\n    //             });\r\n    //           } else {\r\n    //             swal({\r\n    //               title: \"Please Enter Correct Username\",\r\n    //               text: `Incorrect username`,\r\n    //               icon: \"warning\",\r\n    //               dangerMode: false,\r\n    //             });\r\n    //           }\r\n    //         });\r\n    //     } else {\r\n    //       // setAddress(\"No address found\");\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(\"Error fetching geo-Location data:\", error);\r\n    //   }\r\n    // } else {\r\n    //   swal(\"Please Give Persmission of your Current Location\");\r\n    // }\r\n\r\n    // const fromdata = new FormData();\r\n    // fromdata.append(\"username\", this.state.email);\r\n    // fromdata.append(\"password\", this.state.password);\r\n    // axiosConfig\r\n    //   .post(\"/usersign\", fromdata)\r\n    //   .then((response) => {\r\n    //     let msg = response.data?.success;\r\n    //     if (msg) {\r\n    //       localStorage.setItem(\"userData\", JSON.stringify(response.data?.data));\r\n    //       setTimeout(() => {\r\n    //         this.props.history.push(\"/dashboard\");\r\n    //       }, 2000);\r\n    //       swal(\r\n    //         \"Sucessfully login\",\r\n    //         \"You are LoggedIn!\",\r\n    //         \"Success\",\r\n\r\n    //         {\r\n    //           buttons: {\r\n    //             ok: { text: \"Ok\", value: \"ok\" },\r\n    //           },\r\n    //         }\r\n    //       ).then((value) => {\r\n    //         switch (value) {\r\n    //           case \"ok\":\r\n    //             break;\r\n    //           default:\r\n    //         }\r\n    //       });\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     let msg = error.response?.data.success;\r\n    //     if (!msg) {\r\n    //       swal(\"Error\", \"Invalid Username or Password\");\r\n    //     }\r\n    //   });\r\n  };\r\n  changepassword = (e) => {\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    formdata.append(\"email\", this.state.email);\r\n    formdata.append(\"base_url\", \"this.state.password\");\r\n    axiosConfig\r\n      .post(\"/forgetPasswordEmailVerify\", formdata)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({ resetpassword: false });\r\n        swal(\"Email has been sent to Your Mail id\", \"Please Check and verify\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  // handleChangeOTP = (otp) => {\r\n  //   // console.log(otp);\r\n  //   this.setState({ emailotp: otp });\r\n  // };\r\n\r\n  render() {\r\n    const { UserCredential } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row className=\"m-0 justify-content-center\">\r\n          <Col\r\n            sm=\"5\"\r\n            xl=\"5\"\r\n            lg=\"5\"\r\n            md=\"5\"\r\n            className=\"d-flex justify-content-center\">\r\n            <Card className=\"bg-authentication login-card rounded-0 mb-0 w-100\">\r\n              <Row className=\"m-0\">\r\n                <Col lg=\"12\" md=\"12\" className=\"p-1\">\r\n                  <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\r\n                    <div className=\"logo-box text-center p-2\">\r\n                      <img\r\n                        src={logo}\r\n                        alt=\"loginImg\"\r\n                        width=\"100%\"\r\n                        height=\"110px\"\r\n                      />\r\n                    </div>\r\n\r\n                    {this.state.resetpassword ? (\r\n                      <>\r\n                        <CardHeader className=\"pb-1\">\r\n                          <CardTitle>\r\n                            <h4 className=\"mb-0\">\r\n                              <strong>Email Verification</strong>\r\n                            </h4>\r\n                          </CardTitle>\r\n                        </CardHeader>\r\n                        <p className=\"px-2 auth-title mb-2\">\r\n                          Welcome , Please Enter details.\r\n                        </p>\r\n                        <Form onSubmit={this.changepassword}>\r\n                          <Label>Email</Label>\r\n                          <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"email\"\r\n                              placeholder=\"Username\"\r\n                              value={this.state.email}\r\n                              onChange={this.handlechange}\r\n                              // required\r\n                            />\r\n                          </FormGroup>\r\n                          <div className=\"d-flex justify-content-center\">\r\n                            <Button.Ripple color=\"primary\" type=\"submit\">\r\n                              Submit\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </Form>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <>\r\n                          {this.state.OtpScreen && this.state.OtpScreen ? (\r\n                            <>\r\n                              <CardHeader className=\"\">\r\n                                <CardTitle>\r\n                                  <h4 className=\"mb-0\">\r\n                                    <strong>Login</strong>\r\n                                  </h4>\r\n                                </CardTitle>\r\n                              </CardHeader>\r\n                              <p className=\"px-2 auth-title\">\r\n                                Welcome , Enter OTP to Login your Account.\r\n                              </p>\r\n                              <p className=\"px-2 auth-title\">\r\n                                {this.state.Error}{\" \"}\r\n                                {\r\n                                  (this.state.Location.latitude,\r\n                                  this.state.Location.longitude,\r\n                                  this.state.Location.timestamp)\r\n                                }\r\n                              </p>\r\n                              <Form onSubmit={this.loginOTPHandler}>\r\n                                <FormGroup className=\"otpscreeen d-flex justify-content-center\"></FormGroup>\r\n                                <div className=\"py-1 d-flex justify-content-center\">\r\n                                  {JSON.parse(UserCredential?.gmail) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">\r\n                                        Email OTP\r\n                                      </p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.emailotp}\r\n                                        name=\"emailotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ emailotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                  {JSON.parse(UserCredential?.whatsapp) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">\r\n                                        Whatsapp OTP\r\n                                      </p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.whatsappotp}\r\n                                        name=\"whatsappotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ whatsappotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                  {JSON.parse(UserCredential?.sms) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">SMS OTP</p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.smsotp}\r\n                                        name=\"smsotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ smsotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                  {/* <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      this.setState({ resetpassword: true });\r\n                                    }}\r\n                                    // onClick={() => {\r\n                                    //   history.push(\"/pages/reset-password\");\r\n                                    // }}\r\n                                  >\r\n                                    Forget Password\r\n                                  </Button.Ripple> */}\r\n                                  <Button.Ripple\r\n                                    width=\"80%\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\">\r\n                                    Login\r\n                                  </Button.Ripple>\r\n                                  <TabContent activeTab={this.state.activeTab}>\r\n                                    <TabPane tabId=\"1\">\r\n                                      <LoginJWT />\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"2\">\r\n                                      <LoginFirebase />\r\n                                    </TabPane>\r\n                                  </TabContent>\r\n                                </div>\r\n                              </Form>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <CardHeader className=\"pb-1\">\r\n                                <CardTitle>\r\n                                  <h4 className=\"mb-0\">\r\n                                    <strong>Login</strong>\r\n                                  </h4>\r\n                                </CardTitle>\r\n                              </CardHeader>\r\n                              <p className=\"px-2 auth-title mb-2\">\r\n                                Welcome back, Please login to your account.\r\n                              </p>\r\n                              <Form onSubmit={this.loginHandler}>\r\n                                {/* <Label>UserName</Label> */}\r\n                                <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                  <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      username\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"email\"\r\n                                      placeholder=\"User Name\"\r\n                                      value={this.state.email}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                  </InputGroup>\r\n                                </FormGroup>\r\n\r\n                                {/* <Label>Password</Label> */}\r\n                                <FormGroup className=\"passwordlogin form-label-group position-relative has-icon-left\">\r\n                                  <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      Password\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type={this.state.type}\r\n                                      name=\"password\"\r\n                                      placeholder=\"Password\"\r\n                                      value={this.state.password}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                    <button\r\n                                      style={{ width: \"34px\", border: \"none\" }}\r\n                                      className=\"viewbuttonheading\">\r\n                                      <span\r\n                                        className=\"eyeviewpassword\"\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          cursor: \"pointer\",\r\n                                        }}>\r\n                                        {this.state.type == \"text\" ? (\r\n                                          <>\r\n                                            <AiFillEyeInvisible\r\n                                              onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                this.setState({\r\n                                                  type: \"password\",\r\n                                                });\r\n                                              }}\r\n                                              size=\"25px\"\r\n                                              style={{\r\n                                                color: \"#00c0ef\",\r\n                                              }}\r\n                                            />\r\n                                          </>\r\n                                        ) : (\r\n                                          <>\r\n                                            <AiFillEye\r\n                                              onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                this.setState({ type: \"text\" });\r\n                                              }}\r\n                                              size=\"25px\"\r\n                                              style={{\r\n                                                color: \"#00c0ef\",\r\n                                              }}\r\n                                            />\r\n                                          </>\r\n                                        )}\r\n                                      </span>\r\n                                    </button>\r\n                                  </InputGroup>\r\n                                  {/* <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      Password\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type={this.state.type}\r\n                                      name=\"password\"\r\n                                      placeholder=\"Password\"\r\n                                      value={this.state.password}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                    <span\r\n                                      className=\"eyeviewpassword\"\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        cursor: \"pointer\",\r\n                                      }}\r\n                                    >\r\n                                      {this.state.type == \"text\" ? (\r\n                                        <>\r\n                                          {\" \"}\r\n                                          <AiFillEyeInvisible\r\n                                            onClick={() =>\r\n                                              this.setState({\r\n                                                type: \"password\",\r\n                                              })\r\n                                            }\r\n                                            size=\"25px\"\r\n                                            color=\"blue\"\r\n                                          />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <AiFillEye\r\n                                            onClick={() =>\r\n                                              this.setState({ type: \"text\" })\r\n                                            }\r\n                                            size=\"25px\"\r\n                                            color=\"blue\"\r\n                                          />\r\n                                        </>\r\n                                      )}\r\n                                    </span>\r\n                                  </InputGroup> */}\r\n                                </FormGroup>\r\n\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                  <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      this.setState({ resetpassword: true });\r\n                                    }}\r\n                                    // onClick={() => {\r\n                                    //   history.push(\"/pages/reset-password\");\r\n                                    // }}\r\n                                  >\r\n                                    Forget Password\r\n                                  </Button.Ripple>\r\n                                  <Button.Ripple color=\"primary\" type=\"submit\">\r\n                                    Login\r\n                                  </Button.Ripple>\r\n                                  <TabContent activeTab={this.state.activeTab}>\r\n                                    <TabPane tabId=\"1\">\r\n                                      <LoginJWT />\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"2\">\r\n                                      <LoginFirebase />\r\n                                    </TabPane>\r\n                                  </TabContent>\r\n                                </div>\r\n                              </Form>\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      </>\r\n                    )}\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}