{"version":3,"sources":["views/apps/freshlist/order/CreatePayment.js"],"names":["CreatePayment","args","useState","error","PaymentType","setPaymentType","PartyList","setPartyList","PartyId","setPartyId","UserInfo","setUserInfo","AllData","setAllData","productId","availableQty","qty","price","Size","unitType","totalprice","History","useHistory","Params","useParams","useEffect","console","log","id","userdata","JSON","parse","localStorage","getItem","CreateCustomerList","_id","database","then","res","value","Customer","length","catch","err","userInfo","handleChange","e","target","name","className","render","history","color","size","onClick","goBack","onSubmit","preventDefault","payload","created_by","paymentType","paymentMode","Paymentmode","partyId","amount","Amount","instrumentNo","InstrumentNumber","note","Note","title","Title","type","swal","_PostSave","Create_Receipt","lg","md","sm","required","onChange","selectionLimit","isObject","options","onSelect","selectedList","selectedItem","handleSelectionParty","onRemove","removedItem","index","displayValue","placeholder","Date","Ripple"],"mappings":"qXAiVeA,UAjTO,SAACC,GACrB,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KACZ,GADsB,KACgBD,mBAAS,KAAG,mBAA3CE,EAAW,KAAEC,EAAc,KAClC,EAAkCH,mBAAS,IAAG,mBAAvCI,EAAS,KAAEC,EAAY,KAC9B,EAA8BL,mBAAS,IAAG,mBAAnCM,EAAO,KAAEC,EAAU,KAC1B,EAA0CP,mBAAS,GAAE,mBACrD,GADoB,KAAkB,KACNA,mBAAS,KAAG,mBAArCQ,EAAQ,KAAEC,EAAW,KAC5B,EAA8BT,mBAAS,IAAG,mBAAnCU,EAAO,KAAEC,EAAU,KAC1B,EAA8BX,mBAAS,CACrC,CACEY,UAAW,GACXC,aAAc,GACdC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,WAAY,MAEd,mBACEC,GAXU,KAAY,KAWZC,eACVC,EAASC,cAMbC,qBAAU,WACRC,QAAQC,IAAU,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAQK,IACpB,IAAIC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aAE/CC,YAA2B,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUM,IAAa,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUO,UACzCC,MAAK,SAACC,GACL,IAAIC,EAAW,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,UACR,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOE,SACTlC,EAAagC,MAGhBG,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,QAEf,IACHlB,qBAAU,WACR,IAAMmB,EAAWd,KAAKC,MAAMC,aAAaC,QAAQ,aACjDtB,EAAYiC,KACX,IAgDHlB,QAAQC,IAAIf,GAEZ,IAAMiC,EAAe,SAACC,GACpB,MAAsBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMT,EAAK,EAALA,MACZ1B,EAAW,2BAAKD,GAAO,kBAAGoC,EAAOT,MAEnC,OACE,6BACE,6BACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACU,UAAU,OACb,kBAAC,IAAG,CAACA,UAAU,IACb,6BACE,wBAAIA,UAAU,IAAG,oBAGrB,kBAAC,IAAG,KACF,kBAAC,IAAK,CACJC,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLF,UAAU,kBACVG,MAAM,SACNC,KAAK,KACLC,QAAS,kBAAMH,EAAQI,WAAU,aAQ3C,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACN,UAAU,MAAMO,SA9EV,SAACV,GACrBA,EAAEW,iBACF/B,QAAQC,IAAIf,GAEZ,IAAM8C,EAAU,CACdC,WAAoB,OAARjD,QAAQ,IAARA,OAAQ,EAARA,EAAUyB,IACtByB,YAAoB,OAAPhD,QAAO,IAAPA,OAAO,EAAPA,EAASR,YACtByD,YAAoB,OAAPjD,QAAO,IAAPA,OAAO,EAAPA,EAASkD,YACtBC,QAASvD,GAAoB,KAC7BwD,QAAe,OAAPpD,QAAO,IAAPA,OAAO,EAAPA,EAASqD,QAAgB,OAAPrD,QAAO,IAAPA,OAAO,EAAPA,EAASqD,OAAS,KAC5CC,cAAqB,OAAPtD,QAAO,IAAPA,OAAO,EAAPA,EAASuD,kBACZ,OAAPvD,QAAO,IAAPA,OAAO,EAAPA,EAASuD,iBACT,KACJC,MAAa,OAAPxD,QAAO,IAAPA,OAAO,EAAPA,EAASyD,MAAc,OAAPzD,QAAO,IAAPA,OAAO,EAAPA,EAASyD,KAAO,KACtCC,OAAc,OAAP1D,QAAO,IAAPA,OAAO,EAAPA,EAAS2D,OAAe,OAAP3D,QAAO,IAAPA,OAAO,EAAPA,EAAS2D,MAAQ,KACzCnC,SAAkB,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,SACpBoC,KAAM,WAEJrE,EACFsE,IAAK,wCAELC,aAAUC,IAAgBjB,GACvBrB,MAAK,SAACC,GACLmC,IAAK,sBACLpD,EAAQkC,YAETb,OAAM,SAACC,GACN8B,IAAK,uBACL/C,QAAQC,IAAIgB,QAmDR,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACM,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,sBACP,kBAAC,IAAW,CACVC,UAAQ,EACRxC,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASkD,YAChBd,KAAK,cACLgC,SAAUnC,EACV2B,KAAK,UACL,gCAAQ,cACR,4BAAQjC,MAAM,QAAO,QACrB,4BAAQA,MAAM,QAAO,UAGzB,kBAAC,IAAG,CAACU,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,uBACP,kBAAC,IAAW,CACVC,UAAQ,EACRxC,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASR,YAChB4C,KAAK,cACLgC,SAAU,SAAClC,GACTzC,EAAeyC,EAAEC,OAAOR,OACxBM,EAAaC,IAEf0B,KAAK,UACL,gCAAQ,cACR,4BAAQjC,MAAM,gBAAe,iBAC7B,4BAAQA,MAAM,gBAAe,oBAIlCnC,GAA8B,gBAAfA,GACd,kBAAC,IAAG,KACF,kBAAC,IAAG,CAAC6C,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,yBAAK7B,UAAU,IACb,kBAAC,IAAK,KAAC,gBACP,kBAAC,IAAW,CACV8B,UAAQ,EACRE,eAAgB,EAChBC,SAAS,QACTC,QAAS7E,EACT8E,SAAU,SAACC,EAAcC,GAAY,OAhJ9B,SAACD,EAAcC,GAC1C7E,EAAuB,OAAZ6E,QAAY,IAAZA,OAAY,EAAZA,EAAcnD,KAgJHoD,CAAqBF,EAAcC,IAErCE,SAhFJ,SAACH,EAAcI,EAAaC,GAC5ChE,QAAQC,IAAI0D,IAgFQM,aAAa,iBAIX,OAAP/E,QAAO,IAAPA,OAAO,EAAPA,EAASkD,cAAuC,SAAjB,OAAPlD,QAAO,IAAPA,OAAO,EAAPA,EAASkD,cAChC,kBAAC,IAAG,CAACb,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,2BACP,kBAAC,IAAK,CACJC,UAAQ,EACRa,YAAY,0BACZpB,KAAK,OACLjC,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASuD,iBAChBnB,KAAK,mBACLgC,SAAUnC,KAIhB,kBAAC,IAAG,CAACI,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,UACP,kBAAC,IAAK,CACJC,UAAQ,EACRa,YAAY,eACZpB,KAAK,SACLjC,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASqD,OAChBjB,KAAK,SACLgC,SAAUnC,KAGd,kBAAC,IAAG,CAACI,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,QACP,kBAAC,IAAK,CACJC,UAAQ,EACRP,KAAK,OACLjC,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASiF,KAChB7C,KAAK,OACLgC,SAAUnC,KAGd,kBAAC,IAAG,CAACI,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,UACP,8BACEC,UAAQ,EACRP,KAAK,OACLoB,YAAY,kBACZ3C,UAAU,eACVV,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASyD,KAChBrB,KAAK,OACLgC,SAAUnC,MAKjBzC,GAA8B,gBAAfA,GACd,oCACE,kBAAC,IAAG,KACF,kBAAC,IAAG,CAAC6C,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,SACP,kBAAC,IAAK,CACJC,UAAQ,EACRP,KAAK,OACLoB,YAAY,eACZ5C,KAAK,QACLT,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAAS2D,MAChBS,SAAUnC,MAGN,OAAPjC,QAAO,IAAPA,OAAO,EAAPA,EAASkD,cAAuC,SAAjB,OAAPlD,QAAO,IAAPA,OAAO,EAAPA,EAASkD,cAChC,kBAAC,IAAG,CAACb,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,2BACP,kBAAC,IAAK,CACJC,UAAQ,EACRa,YAAY,0BACZpB,KAAK,OACLjC,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASuD,iBAChBnB,KAAK,mBACLgC,SAAUnC,KAIhB,kBAAC,IAAG,CAACI,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,UACP,kBAAC,IAAK,CACJC,UAAQ,EACRP,KAAK,SACLoB,YAAY,eACZrD,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASqD,OAChBjB,KAAK,SACLgC,SAAUnC,KAGd,kBAAC,IAAG,CAACI,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,QACP,kBAAC,IAAK,CACJC,UAAQ,EACRP,KAAK,OACLjC,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASiF,KAChB7C,KAAK,OACLgC,SAAUnC,KAGd,kBAAC,IAAG,CAACI,UAAU,OAAO2B,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACrC,kBAAC,IAAK,KAAC,UACP,8BACEC,UAAQ,EACRP,KAAK,OACLoB,YAAY,gBACZ3C,UAAU,eACVV,MAAc,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASyD,KAChBrB,KAAK,OACLgC,SAAUnC,OAOpB,kBAAC,IAAG,KACF,kBAAC,IAAG,KACF,yBAAKI,UAAU,iCACb,kBAAC,IAAO6C,OAAM,CACZ1C,MAAM,UACNoB,KAAK,SACLvB,UAAU,QAAO","file":"static/js/474.93288054.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route, useHistory, useParams } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  SaveOrder,\r\n  CreateCustomerList,\r\n  _Get,\r\n  _Post,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Create_Receipt } from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst CreatePayment = (args) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [PaymentType, setPaymentType] = useState(\"\");\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [AllData, setAllData] = useState({});\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      totalprice: \"\",\r\n    },\r\n  ]);\r\n  let History = useHistory();\r\n  let Params = useParams();\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem) => {\r\n    setPartyId(selectedItem?._id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(Params?.id);\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    CreateCustomerList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let value = res?.Customer;\r\n        if (value?.length) {\r\n          setPartyList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(AllData);\r\n\r\n    const payload = {\r\n      created_by: UserInfo?._id,\r\n      paymentType: AllData?.PaymentType,\r\n      paymentMode: AllData?.Paymentmode,\r\n      partyId: PartyId ? PartyId : null,\r\n      amount: AllData?.Amount ? AllData?.Amount : null,\r\n      instrumentNo: AllData?.InstrumentNumber\r\n        ? AllData?.InstrumentNumber\r\n        : null,\r\n      note: AllData?.Note ? AllData?.Note : null,\r\n      title: AllData?.Title ? AllData?.Title : null,\r\n      database: UserInfo?.database,\r\n      type: \"Payment\",\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      _PostSave(Create_Receipt, payload)\r\n        .then((res) => {\r\n          swal(\"Added Successfully\");\r\n          History.goBack();\r\n        })\r\n        .catch((err) => {\r\n          swal(\"Somthing went Wrong\");\r\n          console.log(err);\r\n        });\r\n      //   SaveOrder(payload)\r\n      //     .then((res) => {\r\n      //       console.log(res);\r\n      //       swal(\"Order Created Successfully\");\r\n      //       history.goBack();\r\n      //       //  history.push(\"/app/softnumen/order/orderList\")\r\n      //     })\r\n      //     .catch((err) => {\r\n      //       console.log(err);\r\n      //     });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n  };\r\n  console.log(AllData);\r\n\r\n  const handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    setAllData({ ...AllData, [name]: value });\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Payment</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => history.goBack()}>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <Label>Choose Paymen Mode</Label>\r\n                  <CustomInput\r\n                    required\r\n                    value={AllData?.Paymentmode}\r\n                    name=\"Paymentmode\"\r\n                    onChange={handleChange}\r\n                    type=\"select\">\r\n                    <option>--Select--</option>\r\n                    <option value=\"Cash\">Cash</option>\r\n                    <option value=\"Bank\">Bank</option>\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <Label>Choose Payment Type</Label>\r\n                  <CustomInput\r\n                    required\r\n                    value={AllData?.PaymentType}\r\n                    name=\"PaymentType\"\r\n                    onChange={(e) => {\r\n                      setPaymentType(e.target.value);\r\n                      handleChange(e);\r\n                    }}\r\n                    type=\"select\">\r\n                    <option>--Select--</option>\r\n                    <option value=\"partyPayment\">Party Payment</option>\r\n                    <option value=\"otherPayment\">Other Payment</option>\r\n                  </CustomInput>\r\n                </Col>\r\n              </Row>\r\n              {PaymentType && PaymentType == \"partyPayment\" && (\r\n                <Row>\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Choose Party</Label>\r\n                      <Multiselect\r\n                        required\r\n                        selectionLimit={1}\r\n                        isObject=\"false\"\r\n                        options={PartyList}\r\n                        onSelect={(selectedList, selectedItem) =>\r\n                          handleSelectionParty(selectedList, selectedItem)\r\n                        }\r\n                        onRemove={onRemove1}\r\n                        displayValue=\"OwnerName\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  {AllData?.Paymentmode && AllData?.Paymentmode == \"Bank\" && (\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Instrument/Trx Number *</Label>\r\n                      <Input\r\n                        required\r\n                        placeholder=\"Enter Instrument Number\"\r\n                        type=\"text\"\r\n                        value={AllData?.InstrumentNumber}\r\n                        name=\"InstrumentNumber\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                  )}\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label>Amount</Label>\r\n                    <Input\r\n                      required\r\n                      placeholder=\"Enter Amount\"\r\n                      type=\"number\"\r\n                      value={AllData?.Amount}\r\n                      name=\"Amount\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label>Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      value={AllData?.Date}\r\n                      name=\"Date\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <Label>Note :</Label>\r\n                    <textarea\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Notes ...\"\r\n                      className=\"form-control\"\r\n                      value={AllData?.Note}\r\n                      name=\"Note\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n              {PaymentType && PaymentType == \"otherPayment\" && (\r\n                <>\r\n                  <Row>\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Title</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Title \"\r\n                        name=\"Title\"\r\n                        value={AllData?.Title}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                    {AllData?.Paymentmode && AllData?.Paymentmode == \"Bank\" && (\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <Label>Instrument/Trx Number *</Label>\r\n                        <Input\r\n                          required\r\n                          placeholder=\"Enter Instrument Number\"\r\n                          type=\"text\"\r\n                          value={AllData?.InstrumentNumber}\r\n                          name=\"InstrumentNumber\"\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Col>\r\n                    )}\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Amount</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Amount\"\r\n                        value={AllData?.Amount}\r\n                        name=\"Amount\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        value={AllData?.Date}\r\n                        name=\"Date\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                      <Label>Note :</Label>\r\n                      <textarea\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Note...\"\r\n                        className=\"form-control\"\r\n                        value={AllData?.Note}\r\n                        name=\"Note\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatePayment;\r\n"],"sourceRoot":""}