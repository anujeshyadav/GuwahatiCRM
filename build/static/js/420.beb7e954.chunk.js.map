{"version":3,"sources":["views/apps/freshlist/order/CreateOrder.js"],"names":["GrandTotal","SelectedITems","CreateOrder","args","useState","setIndex","index","ProductList","setProductList","PartyList","setPartyList","UnitList","setUnitList","setPriceTotal","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","productId","availableQty","qty","price","totalprice","partyId","DateofDelivery","unitQty","product","setProduct","handleRequredQty","e","avalaibleSize","target","value","name","list","length","map","val","handleUnit","unt","console","log","subtotal","reduce","acc","tax","discountAmount","Grandtotals","useEffect","ProductListView","then","res","Product","catch","err","CreatePartyList","Party","BaseUnitListView","PrimaryUnit","userInfo","JSON","parse","localStorage","getItem","addMoreProduct","removeMoreProduct","i","newFormValues","splice","amt","a","b","setGrandTotalAmt","onRemove1","selectedList","removedItem","className","render","history","color","size","onClick","push","onSubmit","preventDefault","fullname","firstName","lastName","ObjOrder","userId","_id","fullName","address","currentAddress","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","prevProductList","updatedProductList","updatedProduct","handleSelectionParty","onRemove","displayValue","type","onChange","key","Product_MRP","Size","ele","indextotal","handleSelection","disabled","placeholder","autocomplete","primaryUnit","Ripple"],"mappings":"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","file":"static/js/420.beb7e954.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  BaseUnitListView,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { set } from \"date-fns\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst CreateOrder = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      totalprice: \"\", //no\r\n      partyId: \"\", //no\r\n      DateofDelivery: \"\", //no\r\n      unitQty: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    if (avalaibleSize >= e.target.value) {\r\n      setIndex(index);\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      list[index][name] = value;\r\n\r\n      if (list.length > 0) {\r\n        let totalPrice = list?.map(val => {\r\n          list[index][\"totalprice\"] = val.qty * val.price;\r\n          return val.qty * val.price;\r\n        });\r\n      }\r\n      setProduct(list);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const handleUnit = (e, index) => {\r\n    let unt = [...product];\r\n    unt[index].unitQty = e.target.value;\r\n    console.log(unt);\r\n    setProduct(unt);\r\n  };\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    debugger;\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] };\r\n      updatedProduct.partyId = selectedItem?._id;\r\n      updatedProductList[index] = updatedProduct;\r\n      // return updatedProductList;\r\n    });\r\n    console.log(product);\r\n  };\r\n\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      debugger;\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b, 0);\r\n      setPriceTotal(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  let subtotal = product?.reduce((acc, product) => acc + product.price, 0);\r\n  console.log(product);\r\n  let taxRate = 0.1; // 10%\r\n  let tax = subtotal * taxRate;\r\n  let discountRate = 0.2;\r\n  let discountAmount = subtotal * discountRate;\r\n  let Grandtotals = subtotal + tax;\r\n  useEffect(() => {\r\n    ProductListView()\r\n      .then(res => {\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreatePartyList()\r\n      .then(res => {\r\n        setPartyList(res.Party);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    BaseUnitListView()\r\n      .then(res => {\r\n        setUnitList(res.PrimaryUnit);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        DateofDelivery: \"\",\r\n        partyId: \"\",\r\n        unitQty: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const fullname = UserInfo?.firstName + \" \" + UserInfo?.lastName;\r\n    const ObjOrder = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.currentAddress,\r\n      grandTotal: Grandtotals,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n    };\r\n    console.log(ObjOrder);\r\n    // if (error) {\r\n    //   swal(\"Error occured while Entering Details\");\r\n    // } else {\r\n    //   SaveOrder(ObjOrder)\r\n    //     .then(res => {\r\n    //      swal(\"Order Created Successfully\");\r\n\r\n    //     })\r\n    //     .catch(err => {\r\n    //       console.log(err);\r\n    //     });\r\n    // }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Order</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softnumen/order/orderList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1}\r\n                      displayValue=\"firstName\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={e => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"availableQty\"\r\n                          placeholder=\"AvailableSize\"\r\n                          value={product?.availableQty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          required\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <Label>Choose Unit</Label>\r\n                      <CustomInput\r\n                        type=\"select\"\r\n                        placeholder=\"Select Type\"\r\n                        name=\"type\"\r\n                        value={product.unitQty}\r\n                        onChange={e => handleUnit(e, index)}\r\n                      >\r\n                        <option value=\"None\">None</option>\r\n                        {UnitList?.map(val => {\r\n                          return (\r\n                            <option value={val.primaryUnit}>\r\n                              {val.primaryUnit}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </CustomInput>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          disabled\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          disabled\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.price * product?.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          SubTotal:\r\n                          <strong>\r\n                            {subtotal && subtotal?.length >= 0 ? subtotal : 0}\r\n                          </strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost : <strong>RS {subtotal}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS {tax}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Discount : <strong>RS {discountAmount}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :<strong>{Grandtotals}</strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateOrder;\r\n"],"sourceRoot":""}