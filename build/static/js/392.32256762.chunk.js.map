{"version":3,"sources":["views/apps/freshlist/customer/HRM/Time-sheet/leaveform.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["LeaveForm","useState","employee","setEmployee","leaveType","setLeaveType","startDate","setStartDate","endDate","setEndDate","reason","setReason","remark","setRemark","style","width","marginLeft","onSubmit","e","preventDefault","console","log","form","md","for","type","name","id","value","onChange","target","color","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/392.32256762.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button, CardBody, Card } from 'reactstrap';\r\n\r\nconst LeaveForm = () => {\r\n    const [employee, setEmployee] = useState('');\r\n    const [leaveType, setLeaveType] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [reason, setReason] = useState('');\r\n    const [remark, setRemark] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Handle form submission here\r\n        console.log(\"Form submitted!\");\r\n    };\r\n\r\n    return (\r\n        <Card style={{ width: '60%', marginLeft: '20%' }}>\r\n            <CardBody>\r\n                <h2>Create New Leave</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <Form onSubmit={handleSubmit}>\r\n\r\n\r\n                            <Row form>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"employee\">Employee</Label>\r\n                                        <Input type=\"select\" name=\"employee\" id=\"employee\" value={employee} onChange={(e) => setEmployee(e.target.value)}>\r\n                                            <option>Select Employee</option>\r\n                                            {/* Add options for employees */}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"leaveType\">Leave Type</Label>\r\n                                        <Input type=\"select\" name=\"leaveType\" id=\"leaveType\" value={leaveType} onChange={(e) => setLeaveType(e.target.value)}>\r\n                                            <option>Select Leave Type</option>\r\n                                            {/* Add options for leave types */}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row form>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"startDate\">Start Date</Label>\r\n                                        <Input type=\"date\" name=\"startDate\" id=\"startDate\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"endDate\">End Date</Label>\r\n                                        <Input type=\"date\" name=\"endDate\" id=\"endDate\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <FormGroup>\r\n                                <Label for=\"reason\">Leave Reason</Label>\r\n                                <Input type=\"textarea\" name=\"reason\" id=\"reason\" value={reason} onChange={(e) => setReason(e.target.value)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"remark\">Remark</Label>\r\n                                <Input type=\"text\" name=\"remark\" id=\"remark\" value={remark} onChange={(e) => setRemark(e.target.value)} />\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default LeaveForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}