{"version":3,"sources":["views/apps/freshlist/accounts/CreateHeirarchy.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["CreateHeirarchy","EditOneData","useState","Positon","setPositon","CreatedBy","setCreatedBy","dropdownValue","setdropdownValue","dropdownValuesecond","setdropdownValueSecond","Parent","setParent","Error","setError","Child","setChild","useContext","UserContext","console","log","useEffect","swal","userdata","JSON","parse","localStorage","getItem","Get_RoleList","_id","database","then","res","Role","catch","err","className","render","history","style","cursor","color","onClick","goBack","onSubmit","e","preventDefault","payload","createdBy","position","rank","Update_Role_list","lg","md","required","type","name","onChange","selectedName","target","options","selectedIndex","getAttribute","createdBY","split","Position","Number","handleChangeOne","value","Secondary","filter","ele","i","length","map","data-name","roleName","placeholder","Ripple","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/313.8cfd52da.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport { Route } from \"react-router-dom\";\r\n// import DummyTestHeirarchy from \"./DummyTestHeirarchy\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  Get_RoleList,\r\n  Update_Role_list,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { setOptions } from \"leaflet\";\r\n\r\nconst CreateHeirarchy = ({ EditOneData }) => {\r\n  const [Positon, setPositon] = useState(0);\r\n  const [CreatedBy, setCreatedBy] = useState(\"\");\r\n  const [hierarchy, setHierarchy] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [dropdownValuesecond, setdropdownValueSecond] = useState({});\r\n  const [Parent, setParent] = useState(\"Parent\");\r\n  const [Error, setError] = useState(\"\");\r\n  const [Child, setChild] = useState(\"Child\");\r\n  const [formValues, setFormValues] = useState([{ Parent: \"\", Child: \"\" }]);\r\n\r\n  const Context = useContext(UserContext);\r\n  console.log(Positon);\r\n  // let handleChange = (i, e) => {\r\n  //   let newFormValues = [...formValues];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setFormValues(newFormValues);\r\n  // };\r\n\r\n  // above latest code//\r\n\r\n  useEffect(() => {\r\n    if (Parent == Child) {\r\n      swal(\"You Can not Select Same in Parent and Child\");\r\n      setError(\"Select Different Values in Parent and Child\");\r\n    }\r\n  }, [Parent, Child]);\r\n\r\n  useEffect(() => {\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    Get_RoleList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        setdropdownValue(res?.Role);\r\n        setdropdownValueSecond(res?.Role);\r\n        console.log(res?.Role);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Roles List Not found\");\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(EditOneData);\r\n    console.log(Child);\r\n\r\n    console.log(CreatedBy);\r\n    console.log(Parent);\r\n    console.log(dropdownValue);\r\n    console.log(Positon);\r\n    debugger;\r\n\r\n    let payload = {\r\n      createdBy: CreatedBy,\r\n      position: Positon,\r\n      rank: Positon,\r\n    };\r\n    Update_Role_list(Child, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // if (localStorage.getItem(\"Herirarchy_postion\")) {\r\n    //   let current_position = localStorage.getItem(\"Herirarchy_postion\");\r\n\r\n    //   localStorage.setItem(\"Herirarchy_postion\", current_position + 1);\r\n    // } else {\r\n    //   localStorage.setItem(\"Herirarchy_postion\", 0);\r\n    // }\r\n  };\r\n  // console.log(formValues);\r\n  console.log(dropdownValue);\r\n  const handleChangeOne = (e) => {\r\n    const selectedName =\r\n      e.target.options[e.target.selectedIndex].getAttribute(\"data-name\");\r\n    console.log(selectedName);\r\n    let createdBY = selectedName?.split(\" \")[0];\r\n    let Position = Number(selectedName?.split(\" \")[1]);\r\n    setCreatedBy(createdBY);\r\n    setPositon(Position + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Create Hierarchy</h1>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.goBack()}>\r\n                      {\" \"}\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {/* <hr /> */}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <span style={{ color: \"red\" }}>\r\n              {Error && Error ? <>{Error}</> : null}\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"container\">\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"3\" md=\"3\">\r\n                  <FormGroup>\r\n                    <Label>Select Parent</Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name=\"rolename\"\r\n                      onChange={(e) => {\r\n                        handleChangeOne(e);\r\n                        setParent(e.target.value);\r\n                        let Secondary = dropdownValuesecond?.filter(\r\n                          (ele, i) => ele?._id !== e.target.value\r\n                        );\r\n                        console.log(Secondary);\r\n                        setdropdownValueSecond(Secondary);\r\n                      }}>\r\n                      <option value=\"Parent\">--Select Parent--</option>\r\n                      {dropdownValue &&\r\n                        dropdownValue?.length &&\r\n                        dropdownValue?.map((ele, i) => {\r\n                          return (\r\n                            <option\r\n                              data-name={`${ele?._id} ${ele?.position}`}\r\n                              value={ele?._id}>\r\n                              {ele?.roleName} (Position-{ele?.position})\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"3\" md=\"3\">\r\n                  <FormGroup>\r\n                    <Label>Select Child</Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name=\"rolename\"\r\n                      onChange={(e) => setChild(e.target.value)}>\r\n                      <option value=\"Child\">--Select Child--</option>\r\n                      {dropdownValuesecond &&\r\n                        dropdownValuesecond?.length &&\r\n                        dropdownValuesecond?.map((ele, i) => {\r\n                          return (\r\n                            <option value={ele?._id}>{ele?.roleName}</option>\r\n                          );\r\n                        })}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"3\" md=\"3\">\r\n                  <FormGroup>\r\n                    <label>Position/rank</label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"Position\"\r\n                      value={Positon}\r\n                      placeholder=\"1 or 2 or 3...\"\r\n                      onChange={(e) => setPositon(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <hr />\r\n\r\n              {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <Label className=\"mb-0\">Status</Label>\r\n              <div\r\n                className=\"form-label-group\"\r\n                // onChange={(e) => {\r\n                //   setFormData({\r\n                //     ...formData,\r\n                //     [\"status\"]: e.target.value,\r\n                //   });\r\n                // }}\r\n              >\r\n                <input\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Active\"\r\n                />\r\n                <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                <input\r\n                  // checked={status == \"Inactive\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Deactive\"\r\n                />\r\n                <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n              </div>\r\n            </Col> */}\r\n              <Row>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mt-2 mx-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateHeirarchy;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}