{"version":3,"sources":["views/apps/freshlist/customer/HRM/jobcreate.js"],"names":["JobTitleForm","useState","jobTitle","branch","jobCategory","numPositions","status","startDate","endDate","skills","jobDescription","jobRequirements","formData","setFormData","handleChange","e","target","name","value","className","onSubmit","preventDefault","console","log","htmlFor","type","id","onChange","required","min"],"mappings":"uMA6IeA,UA3IM,WACnB,MAAgCC,mBAAS,CACvCC,SAAU,GACVC,OAAQ,GACRC,YAAa,GACbC,aAAc,EACdC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,eAAgB,GAChBC,gBAAiB,KACjB,mBAXKC,EAAQ,KAAEC,EAAW,KAatBC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdL,EAAY,2BAAKD,GAAQ,kBAAGK,EAAOC,MAQrC,OACE,yBAAKC,UAAU,wBACb,4BAAI,gBACJ,0BAAMC,SARW,SAACL,GACpBA,EAAEM,iBACFC,QAAQC,IAAI,kBAAmBX,KAO3B,2BAAOY,QAAQ,YAAW,cAC1B,2BACEC,KAAK,OACLC,GAAG,WACHT,KAAK,WACLC,MAAON,EAASV,SAChByB,SAAUb,EACVc,UAAQ,IAIV,2BAAOJ,QAAQ,UAAS,WACxB,4BACEE,GAAG,SACHT,KAAK,SACLC,MAAON,EAAST,OAChBwB,SAAUb,GAEV,4BAAQI,MAAM,IAAG,iBAInB,2BAAOM,QAAQ,eAAc,iBAC7B,4BACEE,GAAG,cACHT,KAAK,cACLC,MAAON,EAASR,YAChBuB,SAAUb,GAEV,4BAAQI,MAAM,IAAG,iBAInB,2BAAOM,QAAQ,gBAAe,wBAC9B,2BACEC,KAAK,SACLC,GAAG,eACHT,KAAK,eACLY,IAAI,IACJX,MAAON,EAASP,aAChBsB,SAAUb,IAGZ,2BAAOU,QAAQ,UAAS,WACxB,4BACEE,GAAG,SACHT,KAAK,SACLC,MAAON,EAASN,OAChBqB,SAAUb,GAEV,4BAAQI,MAAM,UAAS,UACvB,4BAAQA,MAAM,YAAW,aAG3B,2BAAOM,QAAQ,aAAY,eAC3B,2BACEC,KAAK,OACLC,GAAG,YACHT,KAAK,YACLC,MAAON,EAASL,UAChBoB,SAAUb,IAGZ,2BAAOU,QAAQ,WAAU,aACzB,2BACEC,KAAK,OACLC,GAAG,UACHT,KAAK,UACLC,MAAON,EAASJ,QAChBmB,SAAUb,IAGZ,2BAAOU,QAAQ,UAAS,WACxB,2BACEC,KAAK,OACLC,GAAG,SACHT,KAAK,SACLC,MAAON,EAASH,OAChBkB,SAAUb,IAGZ,2BAAOU,QAAQ,kBAAiB,oBAChC,8BACEE,GAAG,iBACHT,KAAK,iBACLC,MAAON,EAASF,eAChBiB,SAAUb,IAGZ,2BAAOU,QAAQ,mBAAkB,qBACjC,8BACEE,GAAG,kBACHT,KAAK,kBACLC,MAAON,EAASD,gBAChBgB,SAAUb,IAIZ,4BAAQW,KAAK,UAAS","file":"static/js/509.33ac8e19.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst JobTitleForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    jobTitle: '',\r\n    branch: '',\r\n    jobCategory: '',\r\n    numPositions: 1,\r\n    status: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    skills: '',\r\n    jobDescription: '',\r\n    jobRequirements: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Form submitted:', formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-create-container\">\r\n      <h1> Create Job </h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"jobTitle\">Job Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"jobTitle\"\r\n          name=\"jobTitle\"\r\n          value={formData.jobTitle}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n\r\n        <label htmlFor=\"branch\">Branch:</label>\r\n        <select\r\n          id=\"branch\"\r\n          name=\"branch\"\r\n          value={formData.branch}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">-- Select --</option>\r\n\r\n        </select>\r\n\r\n        <label htmlFor=\"jobCategory\">Job Category:</label>\r\n        <select\r\n          id=\"jobCategory\"\r\n          name=\"jobCategory\"\r\n          value={formData.jobCategory}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">-- Select --</option>\r\n\r\n        </select>\r\n\r\n        <label htmlFor=\"numPositions\">Number of Positions:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"numPositions\"\r\n          name=\"numPositions\"\r\n          min=\"1\"\r\n          value={formData.numPositions}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label htmlFor=\"status\">Status:</label>\r\n        <select\r\n          id=\"status\"\r\n          name=\"status\"\r\n          value={formData.status}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"active\">Active</option>\r\n          <option value=\"inactive\">Inactive</option>\r\n        </select>\r\n\r\n        <label htmlFor=\"startDate\">Start Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"startDate\"\r\n          name=\"startDate\"\r\n          value={formData.startDate}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label htmlFor=\"endDate\">End Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"endDate\"\r\n          name=\"endDate\"\r\n          value={formData.endDate}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label htmlFor=\"skills\">Skills:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"skills\"\r\n          name=\"skills\"\r\n          value={formData.skills}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label htmlFor=\"jobDescription\">Job Description:</label>\r\n        <textarea\r\n          id=\"jobDescription\"\r\n          name=\"jobDescription\"\r\n          value={formData.jobDescription}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n\r\n        <label htmlFor=\"jobRequirements\">Job Requirements:</label>\r\n        <textarea\r\n          id=\"jobRequirements\"\r\n          name=\"jobRequirements\"\r\n          value={formData.jobRequirements}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n\r\n\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n\r\n      {/* <div className=\"action-buttons\">\r\n        <button onClick={() => console.log('Add clicked')}>Add</button>\r\n        <button onClick={() => console.log('Edit clicked')}>Edit</button>\r\n        <button onClick={() => console.log('View clicked')}>View</button>\r\n        <button onClick={() => console.log('Delete clicked')}>Delete</button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobTitleForm;\r\n"],"sourceRoot":""}