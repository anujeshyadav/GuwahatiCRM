{"version":3,"sources":["views/apps/freshlist/accounts/CreateTarget.js"],"names":["GrandTotal","SelectedITems","CreateTarget","args","useState","setIndex","targetStartDate","settargetStartDate","targetEndDate","settargetEndDate","error","ProductList","setProductList","Salesperson","setSalesperson","setGrandTotalAmt","totalPrice","setTotalPrice","UserInfo","setUserInfo","setSalesPersonList","UserList","setUserList","product","productId","availableQty","qty","price","totalprice","Salespersonname","targetstartDate","setProduct","handleQuantity","e","index","target","name","value","list","amt","length","map","val","reduce","a","b","handleRemoveSelected","selectedList","selectedItem","splice","ele","i","console","log","Product_MRP","indextotal","handleSelection","push","prevProductList","updatedProductList","updatedProduct","_id","grandTTl","useEffect","JSON","parse","localStorage","getItem","userData","CreateAccountList","database","then","res","adminDetails","catch","err","Create_Sales_personList","SalesPerson","userdata","ProductListView","Product","userInfo","addMoreProduct","removeMoreProduct","newFormValues","className","render","history","style","cursor","color","onClick","goBack","onSubmit","preventDefault","Allproduct","qtyAssign","Number","payload","startDate","endDate","grandTotal","salesPersonId","products","created_by","swal","Create_Targetsave","lg","md","sm","required","selectionLimit","isObject","options","onSelect","onRemove","removedItem","displayValue","type","onChange","key","min","autoComplete","placeholder","readOnly","Ripple"],"mappings":"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","file":"static/js/406.14ae871f.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  CreateAccountList,\r\n  CreatePartyList,\r\n  Create_Sales_personList,\r\n  Create_Targetsave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst CreateTarget = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [targetStartDate, settargetStartDate] = useState(\"\");\r\n  const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n\r\n  const [SalesPersonList, setSalesPersonList] = useState([]);\r\n  const [UserList, setUserList] = useState([]);\r\n\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\", //\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1, //\r\n      price: \"\", //\r\n      totalprice: \"\", //\r\n      Salespersonname: \"\",\r\n      targetstartDate: \"\",\r\n      targetEndDate: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleQuantity = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n    // console.log(GrandTotal);\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map(val => {\r\n        // console.log(val.qty * val.price);\r\n        GrandTotal[index] = val.qty * val.price;\r\n\r\n        list[index][\"totalprice\"] = val.qty * val.price;\r\n        return val.qty * val.price;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n      // console.log(\"GrandTotal\", amt);\r\n    }\r\n    setProduct(list);\r\n    setTotalPrice(amt);\r\n  };\r\n\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    if (amt) {\r\n      setTotalPrice(amt);\r\n    } else {\r\n      setTotalPrice(0);\r\n    }\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] };\r\n      updatedProduct.price = selectedItem?.Product_MRP;\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProductList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setTotalPrice(amt);\r\n      updatedProduct.totalprice = amt;\r\n      return updatedProductList;\r\n    });\r\n\r\n    const listprice = [...product];\r\n\r\n    const grandTTl = listprice.map(val => {\r\n      val.totalprice * totalPrice;\r\n    });\r\n    setGrandTotalAmt(grandTTl);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    CreateAccountList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        setUserList(res?.adminDetails);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    Create_Sales_personList()\r\n      .then((res) => {\r\n        setSalesPersonList(res?.SalesPerson);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1, //\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Salespersonname: \"\",\r\n        targetstartDate: \"\",\r\n        targetEndDate: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setTotalPrice(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    let Allproduct = product?.map((ele, i) => {\r\n      return {\r\n        productId: ele?.productId,\r\n        qtyAssign: Number(ele?.qty),\r\n        price: ele?.price,\r\n        totalPrice: ele?.totalprice,\r\n      };\r\n    });\r\n    if (Salesperson?._id) {\r\n      let payload = {\r\n        startDate: targetStartDate,\r\n        endDate: targetEndDate,\r\n        grandTotal: totalPrice,\r\n        salesPersonId: Salesperson?._id,\r\n        products: Allproduct,\r\n        created_by: UserInfo?._id,\r\n      };\r\n      if (error) {\r\n        swal(\"Error occured while Entering Details\");\r\n      } else {\r\n        Create_Targetsave(payload)\r\n          .then(res => {\r\n            swal(\"Target Created Successfully\");\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    } else {\r\n      swal(\"Error\", \"Choose Sales Person First\");\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem) => {\r\n    debugger;\r\n    setSalesperson(selectedItem);\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Target</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.goBack()}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Sales Person</Label>\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={UserList}\r\n                      onSelect={onSelect1}\r\n                      onRemove={onRemove1}\r\n                      displayValue=\"firstName\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Start date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"targetEndDate\"\r\n                      value={targetStartDate}\r\n                      onChange={(e) => settargetStartDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>End Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"targetstartDate\"\r\n                      value={targetEndDate}\r\n                      onChange={(e) => settargetEndDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Product Name</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            handleRemoveSelected(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            );\r\n                          }}\r\n                          displayValue=\"Product_Title\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Quantity Assign</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          min={0}\r\n                          autoComplete=\"off\"\r\n                          placeholder=\"Req_Qty\"\r\n                          value={product?.qty}\r\n                          onChange={(e) => handleQuantity(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.price * product?.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            onClick={() => removeMoreProduct(index)}>\r\n                            - Remove\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addMoreProduct()}>\r\n                          + Add\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total : <strong>{totalPrice}</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateTarget;\r\n"],"sourceRoot":""}