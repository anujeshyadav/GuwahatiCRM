{"version":3,"sources":["views/forms/form-elements/datepicker/Timepicker.js","views/forms/form-elements/datepicker/Datepickers.js","views/forms/form-elements/datepicker/Pickers.js","views/apps/freshlist/Production/productionprocesspage.js"],"names":["Timepickers","state","basic","Date","timeLimit","preloaded","this","className","md","sm","value","options","enableTime","noCalendar","dateFormat","onChange","date","setState","minTime","maxTime","defaultDate","React","Component","Datepickers","basicPicker","dateTimePicker","humanFriendly","minMax","disabledRange","multipleDates","rangePicker","weekNum","inlinePicker","Card","CardHeader","CardTitle","CardBody","Row","Col","minDate","altInput","altFormat","data-enable-time","maxDate","fp_incr","disable","from","to","mode","preloadRange","weekNumbers","inline","Pickers","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Timepicker","GrandTotal","SelectedITems","ProductionProcess","args","useState","Other_Expenses","GSTApplied","Other_charges","discount","ExtraCharges","setExtraCharges","setIndex","ProductList","setProductList","ProductinProduct","setProductionProduct","grandTotalAmt","setGrandTotalAmt","setUnitList","setUserInfo","setWarehouseList","handleExtraCharge","e","target","name","product","productId","selecetedUnit","AvailaleQty","availableQty","transferQty","RequiredQty","price","totalprice","Size","unitType","stockTrxDate","targetEndDate","Shipping","tax","grandTotal","setProduct","handleProductChangeProductTwo","index","list","handleProductChangeProductone","Number","amt","length","map","val","reduce","a","b","console","log","toFixed","handleRemoveSelected","selectedList","selectedItem","splice","ele","i","qty","Product_MRP","indextotal","useEffect","userData","JSON","parse","localStorage","getItem","Warehouse_Temporarlylist","_id","then","res","adminDetails","catch","err","UnitListView","database","Unit","userdata","ProductListView","Product","userInfo","addMoreProduct","removeMoreProduct","newFormValues","lg","render","history","style","cursor","color","onClick","goBack","onSubmit","preventDefault","Allproduct","unit","totalPrice","payload","created_by","product_name","productItems","miscellaneousExpennses","gstApplied","otherCharges","_PostSave","Save_Producton_Process","swal","required","selectionLimit","isObject","onSelect","onRemove","removedItem","displayValue","type","Totalamount","key","push","prevProductList","updatedProductList","updatedProduct","split","handleSelectionProduct","for","placeholder","id","readOnly","aria-readonly","min","step","Ripple"],"mappings":"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","file":"static/js/211.69502944.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\"\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Timepickers extends React.Component{\r\n  state ={\r\n    basic : new Date(),\r\n    timeLimit : new Date(),\r\n    preloaded : new Date()\r\n  }\r\n\r\n  render(){\r\n    let { basic, timeLimit } = this.state\r\n    return(\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Timepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic 24hrs</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basic}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ basic : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Limit</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={timeLimit}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  minTime: \"16:00\",\r\n                  maxTime: \"22:30\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ timeLimit : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  defaultDate: \"13:45\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ preloaded : date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timepickers","import React from \"react\";\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Datepickers extends React.Component {\r\n  state = {\r\n    basicPicker: new Date(),\r\n    dateTimePicker: new Date(),\r\n    humanFriendly: new Date(),\r\n    minMax: new Date(),\r\n    disabledRange: new Date(),\r\n    multipleDates: new Date(),\r\n    rangePicker: new Date(),\r\n    weekNum: new Date(),\r\n    inlinePicker: new Date(),\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      basicPicker,\r\n      dateTimePicker,\r\n      humanFriendly,\r\n      minMax,\r\n      disabledRange,\r\n      multipleDates,\r\n      rangePicker,\r\n      weekNum,\r\n      inlinePicker,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Datepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basicPicker}\r\n                onChange={(date) => {\r\n                  this.setState({ basicPicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Date & Time</h5>\r\n              <Flatpickr\r\n                options={{\r\n                  minDate: \"today\",\r\n                  altInput: true,\r\n                  // altFormat: \"j-m-Y H:i:S\",\r\n                  altFormat: \"m-j-Y H:i:S\",\r\n                }}\r\n                className=\"form-control\"\r\n                data-enable-time\r\n                value={dateTimePicker}\r\n                onChange={(date) => {\r\n                  this.setState({ dateTimePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Human Friendly</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={humanFriendly}\r\n                options={{\r\n                  altInput: true,\r\n                  altFormat: \"F j, Y\",\r\n                  dateFormat: \"Y-m-d\",\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ humanFriendly: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Min & Max Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={minMax}\r\n                options={{ minDate: \"today\", maxDate: new Date().fp_incr(14) }}\r\n                onChange={(date) => {\r\n                  this.setState({ minMax: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Disabled Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={disabledRange}\r\n                options={{\r\n                  dateFormat: \"Y-m-d\",\r\n                  disable: [\r\n                    {\r\n                      from: \"2020-02-01\",\r\n                      to: \"2020-02-10\",\r\n                    },\r\n                    {\r\n                      from: \"2020-02-20\",\r\n                      to: \"2020-02-25\",\r\n                    },\r\n                  ],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ disabledRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Multiple Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={multipleDates}\r\n                options={{ mode: \"multiple\" }}\r\n                onChange={(date) => {\r\n                  this.setState({ multipleDates: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Range</h5>\r\n              <Flatpickr\r\n                value={rangePicker}\r\n                className=\"form-control\"\r\n                options={{ mode: \"range\" }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  mode: \"range\",\r\n                  defaultDate: [\"2020-02-01\", \"2020-02-15\"],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ preloadRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-md-0 mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Week Numbers</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={weekNum}\r\n                options={{ weekNumbers: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ weekNum: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Inline</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={inlinePicker}\r\n                options={{ inline: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ inlinePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datepickers;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Datepickers from \"./Datepickers\";\r\nimport Timepickers from \"./Timepicker\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\";\r\n\r\nclass Pickers extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Date & Time Picker\"\r\n          breadCrumbParent=\"Form Elements\"\r\n          breadCrumbActive=\"Date & Time Picker\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Datepickers />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Timepickers />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Pickers;\r\n// import { useState, useRef } from \"react\";\r\n// import Tesseract from \"tesseract.js\";\r\n\r\n// function anuj() {\r\n//   const [imagePath, setImagePath] = useState(\"\");\r\n//   const [text, setText] = useState(\"aa\");\r\n\r\n//   const handleChange = (event) => {\r\n//     setImage(URL.createObjectURL(event.target.files[0]));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <main className=\"App-main\">\r\n//         <h3>Actual image uploaded</h3>\r\n//         {/* <img src={imagePath} className=\"App-logo\" alt=\"logo\" /> */}\r\n\r\n//         <h3>Extracted text</h3>\r\n//         <div className=\"text-box\">\r\n//           <p> {text} </p>\r\n//         </div>\r\n//         <input type=\"file\" onChange={handleChange} />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default anuj;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { BsFillChatDotsFill, BsWhatsapp } from \"react-icons/bs\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { FiSend } from \"react-icons/fi\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  CreatePartyList,\r\n  Create_Sales_personList,\r\n  Create_Targetsave,\r\n  CreateWarehouseList,\r\n  UnitListView,\r\n  StocktrxFtoW,\r\n  WarehousetoWareHouseTrx,\r\n  Warehouse_Temporarlylist,\r\n  _Post,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport Timepickers from \"../../../forms/form-elements/datepicker/Timepicker\";\r\nimport Pickers from \"../../../forms/form-elements/datepicker/Pickers\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Save_Producton_Process } from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst ProductionProcess = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [ExtraCharges, setExtraCharges] = useState({\r\n    Other_Expenses: 100,\r\n    GSTApplied: 18,\r\n    Other_charges: 50,\r\n    discount: 10,\r\n  });\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [StockTrxdate, setStockTrxDate] = useState(\"\");\r\n  const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [ProductWTWList, setProductWTWList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [ProductinProduct, setProductionProduct] = useState({});\r\n  const [WareHousetwo, setWareHousetwo] = useState([]);\r\n  const [TypeOfTrx, setTypeOfTrx] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [items, setItems] = useState(\"\");\r\n  const [audit, setAudit] = useState(false);\r\n  const [WareHouselist, setWarehouseList] = useState([]);\r\n  const toggle = (item) => {\r\n    setItems(item);\r\n    setModal(!modal);\r\n  };\r\n  const audittoggle = () => {\r\n    setAudit(!audit);\r\n    // setModal(!modal);\r\n  };\r\n  const handleopentoggle = (iteam) => {\r\n    toggle(iteam);\r\n  };\r\n  const handleExtraCharge = (e) => {\r\n    let { name, value } = e.target;\r\n    setExtraCharges({\r\n      ...ExtraCharges,\r\n      [name]: value,\r\n    });\r\n    // let AllTotal = grandTotalAmt;\r\n  };\r\n  const handleHistory = () => {\r\n    audittoggle();\r\n  };\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      selecetedUnit: \"\",\r\n      AvailaleQty: null,\r\n      availableQty: \"\",\r\n      transferQty: 1,\r\n      RequiredQty: \"\",\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      stockTrxDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index, avalaibleSize) => {\r\n    if (avalaibleSize >= Number(e.target.value)) {\r\n      setIndex(index);\r\n      console.log(product);\r\n\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      if (name.includes(\"transferQty\")) {\r\n        // list[index][\"Size\"] = Number(value);\r\n        let available = Number(list[index][\"AvailaleQty\"]);\r\n        let Askingfor = Number(value);\r\n        if (available >= Askingfor) {\r\n          list[index][name] = Askingfor;\r\n        } else {\r\n          swal(\"Can not Transfer More then Stock\");\r\n          list[index][name] = available - 1;\r\n        }\r\n      } else {\r\n        list[index][name] = value;\r\n      }\r\n      console.log(GrandTotal);\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map((val) => {\r\n          GrandTotal[index] = val.Size * val.price * val.transferQty;\r\n          list[index][\"totalprice\"] = val.Size * val.price * val.transferQty;\r\n          return val.Size * val.price * val.transferQty;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      // console.log(list)\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const handleProductChangeProductTwo = (e, index) => {\r\n    setIndex(index);\r\n\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n    setProduct(list);\r\n  };\r\n  const handleSubmitCharges = (e) => {\r\n    e.preventDefault();\r\n    debugger;\r\n    const list = [...product];\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        return val?.price * val?.RequiredQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n    }\r\n    debugger;\r\n\r\n    let Totalamount =\r\n      amt +\r\n      ExtraCharges?.Other_Expenses +\r\n      (amt * ExtraCharges?.GSTApplied) / 100 +\r\n      ExtraCharges?.Other_charges -\r\n      ExtraCharges?.discount;\r\n\r\n    setGrandTotalAmt(Totalamount.toFixed(2));\r\n  };\r\n  const handleProductChangeProductone = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n\r\n    list[index][name] = Number(value);\r\n\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        GrandTotal[index] = val.price * val.RequiredQty;\r\n        list[index][\"totalprice\"] = val.price * val.RequiredQty;\r\n        return val?.price * val?.RequiredQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n      console.log(\"GrandTotal\", amt);\r\n    }\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt.toFixed(2));\r\n  };\r\n  console.log(ExtraCharges);\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(selectedItem); // removed item\r\n    // console.log(product);\r\n    // console.log(index);\r\n    // console.log(SelectedITems);\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleRemoveSelectedone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.Size * ele?.price * SelectedSize[i]?.unitQty);\r\n      let indextotal = ele?.Size * SelectedSize[i]?.unitQty;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    // product[index][\"AvailaleQty\"] = myproduct?.Size;\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?.productId?._id;\r\n      updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionProduct = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProduct.discount = selectedItem?.discount;\r\n      if (selectedItem?.unitType) {\r\n        updatedProduct.unitType = selectedItem?.unitType.split(\" \")[1];\r\n      }\r\n      // updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem?.unitQty; // Update the price of the copied product\r\n      updatedProduct.unitType = selectedItem?.primaryUnit;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty);\r\n        let indextotal =\r\n          ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // handleInputChange;\r\n  // useEffect(() => {\r\n  //   console.log(window);\r\n  //   console.log(product);\r\n  //   console.log(GrandTotal);\r\n  //   console.log(Salesperson);\r\n  //   console.log(StockTrxdate);\r\n  //   console.log(targetEndDate);\r\n  // }, [product, targetEndDate]);\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    Warehouse_Temporarlylist(userData?._id)\r\n      .then((res) => {\r\n        console.log(res?.adminDetails);\r\n        // let myWarehouse = res?.adminDetails?.filter((ele, i) =>\r\n        //   ele?.rolename?.roleName\r\n        //     ?.split(\" \")\r\n        //     .join(\"\")\r\n        //     .toLowerCase()\r\n        //     .includes(\"warehouse\")\r\n        // );\r\n\r\n        setWarehouseList(res?.adminDetails);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // CreateWarehouseList(userData._id)\r\n    //   .then((res) => {\r\n    //     console.log(res?.Warehouse);\r\n    //     setWarehouseList(res?.Warehouse);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    UnitListView(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        console.log(res?.Unit);\r\n        setUnitList(res?.Unit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        console.log(res.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n    // CreateOrder_ID()\r\n    //   .then((res) => {\r\n    //     const lastElement = res?.Order[res?.Order?.length - 1].id;\r\n    //     const prefix = lastElement?.substring(0, 5);\r\n    //     const number = parseInt(lastElement?.match(/\\d+$/)[0], 10) + 1;\r\n    //     const concatenatedString = prefix + number;\r\n    //     setOrderID(concatenatedString);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    // CreateOrder_ViewData()\r\n    //   .then((res) => {\r\n    //     const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n    //     setCreatAccountView(JSON.parse(jsonData));\r\n    //     setStatusDropDown(\r\n    //       JSON.parse(jsonData)?.createOrder.CurrentStatus?.MyDropDown?.dropdown\r\n    //     );\r\n    //     setdropdownValue(JSON.parse(jsonData));\r\n    //     setPartDetails(JSON.parse(jsonData)?.createOrder.PartDetails);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        selecetedUnit: \"\",\r\n        AvailaleQty: null,\r\n        availableQty: \"\",\r\n        transferQty: 1, //\r\n        RequiredQty: \"\",\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Size: \"\",\r\n        unitType: \"\",\r\n        stockTrxDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n  // let handlePartChange = (i, e) => {\r\n  //   let newFormValues = [...part];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setPart(newFormValues);\r\n  // };\r\n\r\n  const WareHousetoWareHouse = (e) => {\r\n    e.preventDefault();\r\n    // body: warehouse, productId, Size, unitType, transferQty, price, totalPrice;\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        unitType: ele?.unitType,\r\n        price: ele?.price,\r\n        Size: ele?.Size,\r\n        transferQty: ele?.transferQty,\r\n        totalPrice: ele?.totalprice,\r\n        currentStock: ele?.transferQty * ele?.Size,\r\n      };\r\n    });\r\n    let payload = {\r\n      productItems: Allproduct,\r\n      warehouseToId: WareHousetwo[0]?._id,\r\n      warehouseFromId: ProductinProduct[0]?._id,\r\n      stockTransferDate: StockTrxdate,\r\n      grandTotal: grandTotalAmt,\r\n      transferStatus: \"InProcess\",\r\n      created_by: userdata?._id,\r\n    };\r\n    console.log(payload);\r\n    WarehousetoWareHouseTrx(payload)\r\n      .then((res) => {\r\n        //   window.location.reload();\r\n        // history.goBack();\r\n        swal(\"Stock transerffered is Initiated\");\r\n\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n\r\n      return {\r\n        productId: ele?.productId,\r\n        unit: ele?.unitType,\r\n        price: ele?.price,\r\n        qty: ele?.RequiredQty,\r\n        unitType: ele?.unitType,\r\n        totalPrice: ele?.price * ele?.RequiredQty,\r\n      };\r\n    });\r\n\r\n    let payload = {\r\n      created_by: userdata?._id,\r\n      product_name: ProductinProduct?._id,\r\n      productItems: Allproduct,\r\n      miscellaneousExpennses: ExtraCharges?.Other_Expenses,\r\n      gstApplied: ExtraCharges?.GSTApplied,\r\n      otherCharges: ExtraCharges?.Other_charges,\r\n      discount: ExtraCharges?.discount,\r\n      grandTotal: grandTotalAmt,\r\n    };\r\n    debugger;\r\n    _PostSave(Save_Producton_Process, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\"Production Process is Created\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList[0]);\r\n    setProductionProduct(selectedList[0]);\r\n    // setProductList(selectedList[0].productItems);\r\n  };\r\n  const onSelectone = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n\r\n    setProductionProduct(selectedList);\r\n    // const list = [...product];\r\n    let MySelectedwarehouseProduct = selectedList[0].productItems?.map(\r\n      (ele, i) => {\r\n        let myproduct = ele?.productId;\r\n        ele[\"Product_Title\"] = myproduct?.Product_Title;\r\n        ele[\"Product_id\"] = myproduct?._id;\r\n        ele[\"Product_MRP\"] = myproduct?.Product_MRP;\r\n        ele[\"discount\"] = myproduct?.discount;\r\n        ele[\"transferQty\"] = myproduct?.transferQty;\r\n        ele[\"MIN_stockalert\"] = myproduct?.MIN_stockalert;\r\n      }\r\n    );\r\n\r\n    console.log(selectedList[0]?.productItems);\r\n\r\n    setProductWTWList(selectedList[0]?.productItems);\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onRemoveone = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  const onSelect2 = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n    setWareHousetwo(selectedList);\r\n  };\r\n  const onRemove2 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n          <Col lg=\"8\" md=\"8\" sm=\"8\" className=\"mb-2 mt-1\">\r\n            <div>\r\n              <h1 className=\"\">Start Production Process</h1>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"float-right\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"float-right mr-1\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.goBack()}>\r\n                    {\" \"}\r\n                    Back\r\n                    {/* <FaPlus size={15} /> Create User */}\r\n                  </Button>\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form className=\"m-1\" onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Choose Production Product </Label>\r\n\r\n                  <Multiselect\r\n                    required\r\n                    selectionLimit={1}\r\n                    // showCheckbox=\"true\"\r\n                    isObject=\"false\"\r\n                    options={ProductList} // Options to display in the dropdown\r\n                    // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                    onSelect={onSelect1} // Function will trigger on select event\r\n                    onRemove={onRemove1} // Function will trigger on remove event\r\n                    displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Miscellaneous Expennses </Label>\r\n\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"Other_Expenses\"\r\n                    value={ExtraCharges?.Other_Expenses}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>GST Applied </Label>\r\n\r\n                  <CustomInput\r\n                    className=\"form-control\"\r\n                    name=\"GSTApplied\"\r\n                    value={ExtraCharges?.GSTApplied}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"select\">\r\n                    <option>--select--</option>\r\n                    <option value={18}>18</option>\r\n                    <option value={9}>9</option>\r\n                  </CustomInput>\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Other Charges </Label>\r\n\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"Other_charges\"\r\n                    value={ExtraCharges?.Other_charges}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Discount </Label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    value={ExtraCharges?.discount}\r\n                    name=\"discount\"\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\" mt-2\">\r\n                  <Button color=\"primary\" onClick={handleSubmitCharges}>\r\n                    Add Charges\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            {product &&\r\n              product?.map((product, index) => (\r\n                <Row className=\"\" key={index}>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Choose item *</Label>\r\n                      <Multiselect\r\n                        required\r\n                        selectionLimit={1}\r\n                        // showCheckbox=\"true\"\r\n                        isObject=\"false\"\r\n                        options={ProductList}\r\n                        // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                        onSelect={(selectedList, selectedItem) =>\r\n                          handleSelectionProduct(\r\n                            selectedList,\r\n                            selectedItem,\r\n                            index\r\n                          )\r\n                        }\r\n                        onRemove={(selectedList, selectedItem) => {\r\n                          handleRemoveSelected(\r\n                            selectedList,\r\n                            selectedItem,\r\n                            index\r\n                          );\r\n                        }}\r\n                        displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <label for=\"unit\">Select Unit</label>\r\n                      <select\r\n                        required\r\n                        className=\"form-control\"\r\n                        name=\"selecetedUnit\"\r\n                        placeholder=\"selecetedUnit\"\r\n                        value={product?.selecetedUnit}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProductTwo(e, index)\r\n                        }\r\n                        id=\"unit\">\r\n                        <option value=\"\">--select Unit--</option>\r\n                        <option value=\"kg\">Kilogram (kg)</option>\r\n                        <option value=\"Pcs\">Pieces (Pcs)</option>\r\n                        <option value=\"g\">Gram (g)</option>\r\n                        <option value=\"tonne\">Metric Ton (tonne)</option>\r\n                        <option value=\"m\">Meter (m)</option>\r\n                        <option value=\"cm\">Centimeter (cm)</option>\r\n                        <option value=\"mm\">Millimeter (mm)</option>\r\n                        <option value=\"in\">Inch (in)</option>\r\n                        <option value=\"ft\">Foot (ft)</option>\r\n                        <option value=\"m3\">Cubic Meter (m³)</option>\r\n                        <option value=\"L\">Liter (L)</option>\r\n                        <option value=\"ml\">Milliliter (ml)</option>\r\n                        <option value=\"s\">Second (s)</option>\r\n                        <option value=\"min\">Minute (min)</option>\r\n                        <option value=\"hr\">Hour (hr)</option>\r\n                        <option value=\"°C\">Celsius (°C)</option>\r\n                        <option value=\"°F\">Fahrenheit (°F)</option>\r\n                        <option value=\"Pa\">Pascal (Pa)</option>\r\n                        <option value=\"bar\">Bar (bar)</option>\r\n                        <option value=\"m/s\">Meters per Second (m/s)</option>\r\n                        <option value=\"km/h\">Kilometers per Hour (km/h)</option>\r\n                        <option value=\"A\">Ampere (A)</option>\r\n                        <option value=\"V\">Volt (V)</option>\r\n                        <option value=\"W\">Watt (W)</option>\r\n                        <option value=\"kW\">Kilowatt (kW)</option>\r\n                      </select>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>\r\n                        Price{product?.unitType && product?.unitType}\r\n                      </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"price\"\r\n                        readOnly\r\n                        aria-readonly\r\n                        onChange={(e) =>\r\n                          handleProductChangeProductone(e, index)\r\n                        }\r\n                        placeholder=\"Price\"\r\n                        value={product.price}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Req_Qty</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        min={0}\r\n                        step=\"any\"\r\n                        name=\"RequiredQty\"\r\n                        placeholder=\"Req_Qty\"\r\n                        value={product?.RequiredQty}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProductone(e, index)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Discount</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"discount\"\r\n                        readOnly\r\n                        placeholder=\"Discount\"\r\n                        value={product.discount}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Total Price</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"totalprice\"\r\n                        readOnly\r\n                        placeholder=\"TtlPrice\"\r\n                        value={product?.price * product?.RequiredQty}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"btnStyle\">\r\n                      {index ? (\r\n                        <Button\r\n                          type=\"button\"\r\n                          color=\"danger\"\r\n                          className=\"button remove \"\r\n                          onClick={() => removeMoreProduct(index)}>\r\n                          - Remove\r\n                        </Button>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"btnStyle\">\r\n                      <Button\r\n                        className=\"ml-1 mb-1\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => addMoreProduct()}>\r\n                        + Add\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n            <Row>\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Discount</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"discount\"\r\n                          readOnly\r\n                          placeholder=\"Dissct\"\r\n                          value={product.discount}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Shipping Cost</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"Shipcst\"\r\n                          readOnly\r\n                          placeholder=\"Shipcst\"\r\n                          value={product.Shipping}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Tax</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"tax\"\r\n                          readOnly\r\n                          placeholder=\"Tax\"\r\n                          value={product.tax}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                <div className=\" d-flex justify-content-end\">\r\n                  <Label className=\"pr-5\">\r\n                    Grand Total :{\" \"}\r\n                    <stron>\r\n                      {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                        ? 0\r\n                        : grandTotalAmt}{\" \"}\r\n                    </stron>\r\n                  </Label>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductionProcess;\r\n"],"sourceRoot":""}