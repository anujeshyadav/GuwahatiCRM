{"version":3,"sources":["views/apps/freshlist/order/CreateOrder.js"],"names":["i","GrandTotal","SelectedITems","SelectedSize","CreateOrder","args","useState","setIndex","error","ProductList","setProductList","PartyList","setPartyList","PartyId","setPartyId","UnitList","setUnitList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","productId","availableQty","qty","price","Size","unitType","totalprice","product","setProduct","handleRequredQty","e","index","avalaibleSize","target","name","value","Number","list","amt","length","map","val","reduce","a","b","handleSelection","selectedList","selectedItem","JSON","parse","localStorage","getItem","push","URl","WareHouse_Current_Stock","warehouse","_Get","_id","then","res","console","log","currentStock","Stock","catch","err","swal","prevProductList","updatedProductList","updatedProduct","Product_MRP","acc","useEffect","userdata","ProductListView","database","Product","filter","ele","addProductType","CreateCustomerList","Customer","UnitListView","Unit","userInfo","addMoreProduct","unitQty","removeMoreProduct","newFormValues","splice","onRemove1","removedItem","className","render","history","color","size","onClick","onSubmit","preventDefault","fullname","firstName","lastName","payload","userId","fullName","address","currentAddress","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","SaveOrder","lg","md","sm","required","selectionLimit","isObject","options","onSelect","handleSelectionParty","onRemove","displayValue","type","onChange","key","disabled","placeholder","min","autocomplete","updatedUnitList","primaryUnit","indextotal","handleSelectionUnit","Ripple"],"mappings":"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","file":"static/js/473.cab93b78.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n  BaseUnitListView,\r\n  CreateCustomerList,\r\n  _Get,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { WareHouse_Current_Stock } from \"../../../../ApiEndPoint/Api\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst CreateOrder = (args) => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      totalprice: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    const { name, value } = e.target;\r\n    if (Number(value) <= avalaibleSize) {\r\n      if (Number(value != 0)) {\r\n        setIndex(index);\r\n        const list = [...product];\r\n        list[index][name] = Number(value);\r\n\r\n        let amt = 0;\r\n        if (list.length > 0) {\r\n          const x = list?.map((val) => {\r\n            GrandTotal[index] = val.Size * val.qty * val.price;\r\n            list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n            return val.Size * val.qty * val.price;\r\n          });\r\n          amt = x.reduce((a, b) => a + b);\r\n        }\r\n        setProduct(list);\r\n        setGrandTotalAmt(amt);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem._id);\r\n  };\r\n\r\n  const handleSelection = async (selectedList, selectedItem, index) => {\r\n    const userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    SelectedITems.push(selectedItem);\r\n    // console.log(selectedItem?.warehouse);\r\n    // console.log(selectedItem?._id);\r\n    // console.log(userdata?._id, userdata?.database);\r\n    let URl = `${WareHouse_Current_Stock}${selectedItem?.warehouse}/`;\r\n    var Stock;\r\n    await _Get(URl, selectedItem?._id)\r\n      .then((res) => {\r\n        console.log(res?.currentStock);\r\n        Stock = res?.currentStock;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"something went Wrong\");\r\n      });\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = Stock?.currentStock;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  const handleSelectionUnit = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedUnitList = [...prevProductList];\r\n      const updatedProduct = { ...updatedUnitList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem.unitQty;\r\n      updatedProduct.unitType = selectedItem.primaryUnit;\r\n      updatedUnitList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        updatedUnitList[index][\"totalprice\"] =\r\n          ele?.qty * ele.price * SelectedSize[i]?.unitQty;\r\n        let indextotal = ele?.price * ele.qty * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedUnitList; // Return the updated product list\r\n    });\r\n  };\r\n  let subtotal = product?.reduce((acc, product) => acc + product.totalprice, 0);\r\n  let taxRate = 0.1; // 10%\r\n  let tax = subtotal * taxRate;\r\n  let discountRate = 0.2;\r\n  let discountAmount = subtotal * discountRate;\r\n  let Grandtotals = subtotal + tax;\r\n\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let product = res?.Product?.filter(\r\n          (ele) => ele?.addProductType == \"Product\"\r\n        );\r\n        setProductList(product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    CreateCustomerList(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        let value = res?.Customer;\r\n        if (value?.length) {\r\n          setPartyList(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    UnitListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        unitQty: \"\",\r\n        unitType: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const fullname = UserInfo?.firstName + \" \" + UserInfo?.lastName;\r\n    const payload = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.currentAddress,\r\n      grandTotal: grandTotalAmt + grandTotalAmt * 0.05 + grandTotalAmt * 0.18,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveOrder(payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"Order Created Successfully\");\r\n          //  history.push(\"/app/softnumen/order/orderList\")\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Sales Order</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softnumen/order/orderList\")\r\n                    }>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1}\r\n                      displayValue=\"OwnerName\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={(e) => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          disabled\r\n                          name=\"availableQty\"\r\n                          placeholder=\"AvailableSize\"\r\n                          value={product?.availableQty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          min={0}\r\n                          placeholder=\"Req_Qty\"\r\n                          required\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={(e) =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Choose Unit</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionUnit(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"primaryUnit\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          disabled\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          disabled\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.Size * product.price * product.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}>\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}>\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total:\r\n                          <span className=\"p-2\">\r\n                            {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                              ? 0\r\n                              : grandTotalAmt}\r\n                          </span>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost :{\" \"}\r\n                          <strong>RS {grandTotalAmt * 0.05}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS {grandTotalAmt * 0.18}</strong>\r\n                        </Label>\r\n                      </li>\r\n\r\n                      <li>\r\n                        {\" \"}\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :{\" \"}\r\n                          <strong>\r\n                            {grandTotalAmt +\r\n                              grandTotalAmt * 0.05 +\r\n                              grandTotalAmt * 0.18}\r\n                          </strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\">\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateOrder;\r\n"],"sourceRoot":""}