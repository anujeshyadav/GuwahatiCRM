{"version":3,"sources":["views/apps/freshlist/accounts/GoodDispatchView.js","views/apps/freshlist/accounts/GoodDispatchEdit.js","views/apps/freshlist/accounts/WarehouseDispatchlist.js","assets/img/profile/pages/logomain.png","../node_modules/reactstrap/es/FormGroup.js","views/apps/freshlist/house/CheckPermission.js"],"names":["GoodDispatchView","ViewOneData","useState","CreatAccountView","setCreatAccountView","dropdownValue","setdropdownValue","formData","setFormData","index","setindex","error","setError","useContext","UserContext","useEffect","console","log","GoodDispatchxmlView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","GoodDispatch","input","catch","err","className","map","ele","i","type","_attributes","key","lg","md","sm","label","_text","disabled","placeholder","name","value","style","color","src","alt","width","height","MyDropdown","dropdown","required","onChange","e","target","checked","test","length","AssignDeliveryBoy","GoodDispatchEdit","EditOneData","handleInputChange","files","_id","onSubmit","preventDefault","formdata","FormData","el","append","EditGoodDispatch","swal","option","marginRight","Ripple","SelectedColums","GoodDispatchList","props","toggleModal","setState","prevState","modalOne","LookupviewStart","modal","toggleDropdown","isOpen","onGridReady","params","gridApi","api","gridColumnApi","columnApi","gridRef","current","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleChangeHeader","push","delindex","findIndex","headerName","splice","exportToPDF","csvData","getDataAsCsv","processCellCallback","processCell","parseCsv","parsedData","generatePDF","exportToExcel","CsvData","convertCsvToExcel","blob","downloadExcelFile","convertCSVtoExcel","Papa","complete","result","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","shiftElementUp","currentIndex","state","Arrindex","myArrayCopy","SelectedcolumnDefs","elementToMove","shiftElementDown","convertCsvToXml","rows","xmlString","forEach","row","cell","Blob","link","document","createElement","href","URL","createObjectURL","download","click","HandleSetVisibleField","setColumnDefs","columnDefs","rowData","localStorage","setItem","stringify","HeadingRightShift","updatedSelectedColumnDefs","Set","item","handleLeftShift","SelectedCols","slice","React","createRef","setMySelectedarr","InsiderPermissions","paginationPageSize","valueGetter","field","filter","View","render","history","size","onClick","Delete","cellRendererFramework","status","toLowerCase","includes","resizable","Create","cursor","title","pathname","fill","fullName","MobileNo","address","grandTotal","taxAmount","partyId","firstName","orderItems","AllcolumnDefs","defaultColDef","sortable","enablePivot","enableValue","suppressMenu","this","context","UserInformatio","InsidePermissions","CheckPermission","userId","getItem","OrderDisPatchList","database","Invoice","userHeading","id","buttons","cancel","text","DeleteAccount","selectedData","getSelectedRows","updateRowData","remove","Promise","resolve","reject","header","skipEmptyLines","Error","pdfsize","Object","keys","doc","jsPDF","setTextColor","tableData","values","addImage","Logo","date","Date","setCreationDate","autoTable","head","body","startY","save","dynamicTyping","worksheet","workbook","excelBuffer","bookType","url","window","a","appendChild","revokeObjectURL","EditOneUserView","ViewOneUserView","fontWeight","position","zIndex","border","backgroundColor","exportDataAsCsv","marginTop","tag","right","Consumer","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","ref","domLayout","toggle","maxWidth","xl","xs","class","element","createdAt","split","responsive","scope","productId","Product_Title","Product_MRP","Size","unitType","qty","Component","contextType","module","exports","_excluded","propTypes","children","PropTypes","node","bool","check","inline","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","defaultProps","pageparmission","newparmisson","rolename","rolePermission","find","pagename","permission","Edit","Download"],"mappings":"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","file":"static/js/178.6ab1f98f.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport {\r\n  GoodDispatchxmlView,\r\n  Get_RoleList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst GoodDispatchView = ({ ViewOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    console.log(ViewOneData);\r\n    setFormData(ViewOneData);\r\n  }, []);\r\n  useEffect(() => {\r\n    GoodDispatchxmlView()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        // console.log(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setCreatAccountView(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setdropdownValue(JSON.parse(jsonData)?.GoodDispatch);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\">\r\n            <Row className=\"mb-2\">\r\n              {CreatAccountView &&\r\n                CreatAccountView?.map((ele, i) => {\r\n                  if (ele?.type?._attributes?.type == \"text\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            disabled\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else if (ele?.type?._attributes?.type == \"file\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label className=\"m-2\">{ele?.label?._text}</Label>\r\n                          <img\r\n                            // className=\"form-control\"\r\n                            src={`http://64.227.162.41:5000/Images/${\r\n                              formData[ele?.name?._text]\r\n                            }`}\r\n                            alt=\"image\"\r\n                            width={50}\r\n                            height={50}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            disabled\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                })}\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.label?._text}\r\n                  </Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name={dropdownValue?.MyDropdown?.dropdown?.name?._text}\r\n                    value={\r\n                      formData[dropdownValue?.MyDropdown?.dropdown?.name?._text]\r\n                    }\r\n                    disabled\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <option value=\"\">{formData.AssignDeliveryBoy}</option>\r\n                    {/* <option value=\"\">--DeliveryAuthentication--</option> */}\r\n                    {/* {dropdownValue?.MyDropdown?.dropdown?.option.map(\r\n                      (option, index) => (\r\n                        <option key={index} value={option?._attributes?.value}>\r\n                          {option?._attributes?.value}\r\n                        </option>\r\n                      )\r\n                    )} */}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoodDispatchView;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport {\r\n  GoodDispatchxmlView,\r\n  EditGoodDispatch,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst GoodDispatchEdit = ({ EditOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (type == \"text\") {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    } else if (type == \"file\") {\r\n      console.log(e.target.name);\r\n      setFormData({\r\n        ...formData,\r\n        [name]: files[0],\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    console.log(EditOneData?._id);\r\n    setFormData(EditOneData);\r\n  }, []);\r\n  useEffect(() => {\r\n    GoodDispatchxmlView()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setCreatAccountView(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setdropdownValue(JSON.parse(jsonData)?.GoodDispatch);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    console.log(EditOneData?._id);\r\n    const formdata = new FormData();\r\n    CreatAccountView.map(el => {\r\n      if (el?.name?._text == \"CNUpload\") {\r\n        formdata.append(`${el?.name?._text}`, formData[el?.name?._text]);\r\n      }\r\n      if (el?.name?._text == \"FetchSalesInvoice\") {\r\n        formdata.append(`${el?.name?._text}`, formData[el?.name?._text]);\r\n      }\r\n    });\r\n    EditGoodDispatch(formdata, EditOneData?._id)\r\n      .then(res => {\r\n        // setFormData({});\r\n        console.log(res);\r\n        //   if (res.status) {\r\n        // window.location.reload();\r\n        swal(\"Good Dispatch Updated Successfully\");\r\n        //   }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\" onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                <h2> Edit Dispatch</h2>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                {\" \"}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-2\">\r\n              {CreatAccountView &&\r\n                CreatAccountView?.map((ele, i) => {\r\n                  if (ele?.type?._attributes?.type == \"text\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                            onChange={e => {\r\n                              handleInputChange(\r\n                                e,\r\n                                ele?.type?._attributes?.type,\r\n                                i\r\n                              );\r\n                            }}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else if (ele?.type?._attributes?.type == \"file\") {\r\n                    console.log(\"file\", ele?.name?._text);\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label className=\"\">{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            name={ele?.name?._text}\r\n                            // value={formData[ele?.name?._text]}\r\n                            onChange={e => {\r\n                              handleInputChange(\r\n                                e,\r\n                                ele?.type?._attributes?.type,\r\n                                i\r\n                              );\r\n                            }}\r\n                          />\r\n\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                })}\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.label?._text}\r\n                  </Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name={dropdownValue?.MyDropdown?.dropdown?.name?._text}\r\n                    value={\r\n                      formData[dropdownValue?.MyDropdown?.dropdown?.name?._text]\r\n                    }\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <option value=\"\">--Assign Delivery Boy--</option>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.option.map(\r\n                      (option, index) => (\r\n                        <option key={index} value={option?._attributes?.value}>\r\n                          {option?._attributes?.value}\r\n                        </option>\r\n                      )\r\n                    )}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <Label className=\"mb-0\">Status</Label>\r\n              <div\r\n                className=\"form-label-group\"\r\n                onChange={e => {\r\n                  setFormData({\r\n                    ...formData,\r\n                    [\"status\"]: e.target.value,\r\n                  });\r\n                }}\r\n              >\r\n                <input\r\n                  checked={formData[\"status\"] == \"Active\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Active\"\r\n                />\r\n                <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                <input\r\n                  // checked={status == \"Inactive\"}\r\n                  checked={formData[\"status\"] == \"Deactive\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Deactive\"\r\n                />\r\n                <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n              </div>\r\n            </Col>\r\n            <Row>\r\n              <Button.Ripple\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"mr-1 mt-2 mx-2\"\r\n              >\r\n                Submit\r\n              </Button.Ripple>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoodDispatchEdit;\r\n","import React, { useRef } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { ImDownload } from \"react-icons/im\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport GoodDispatchEdit from \"./GoodDispatchEdit\";\r\nimport GoodDispatchView from \"../accounts/GoodDispatchView\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport Logo from \"../../../../assets/img/profile/pages/logomain.png\";\r\nimport Papa from \"papaparse\";\r\nimport { Eye, Trash2, ChevronDown, Edit } from \"react-feather\";\r\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  FaArrowAltCircleLeft,\r\n  FaArrowAltCircleRight,\r\n  FaFilter,\r\n  FaPlus,\r\n  FaTruck,\r\n  FaTruckLoading,\r\n} from \"react-icons/fa\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  GoodDispatchListView,\r\n  GoodDispatchxmlView,\r\n  DeleteAccount,\r\n  OrderDisPatchList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  BsCloudDownloadFill,\r\n  BsFillArrowDownSquareFill,\r\n  BsFillArrowUpSquareFill,\r\n} from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CheckPermission } from \"../house/CheckPermission\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\nconst SelectedColums = [];\r\n\r\nclass GoodDispatchList extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridRef = React.createRef();\r\n    this.gridApi = null;\r\n    this.state = {\r\n      isOpen: false,\r\n      Arrindex: \"\",\r\n      rowData: [],\r\n      setMySelectedarr: [],\r\n      InsiderPermissions: {},\r\n      modal: false,\r\n      ViewOneData: {},\r\n      SelectedCols: [],\r\n      paginationPageSize: 5,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      columnDefs: [\r\n        {\r\n          headerName: \"S.No\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          width: 80,\r\n          filter: true,\r\n        },\r\n        // {\r\n        //   headerName: \"Add Bills\",\r\n        //   width: 160,\r\n        //   filter: true,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n        //         <div>\r\n        //           <span>\r\n        //             <input\r\n        //               type=\"checkbox\"\r\n        //               className=\"customcheckbox\"\r\n        //               onClick={(e) => {\r\n        //                 this.handleMultipleBillsAdd(\r\n        //                   params?.data,\r\n        //                   e.target.checked\r\n        //                 );\r\n        //                 // console.log(e.target.checked);\r\n        //               }}\r\n        //             />\r\n        //             {/* <AiOutlineDownload\r\n        //               onClick={() => this.handleBillDownload(params.data)}\r\n        //               fill=\"green\"\r\n        //               size=\"30px\"\r\n        //             /> */}\r\n        //           </span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"sortorder\",\r\n          field: \"transactions\",\r\n          width: 190,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.View && (\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Eye\r\n                          className=\"mr-50\"\r\n                          size=\"25px\"\r\n                          color=\"green\"\r\n                          onClick={() => {\r\n                            this.setState({ ViewOneData: params?.data });\r\n                            this.toggleModal();\r\n                            console.log(params?.data);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                {/* {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.Edit && (\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Edit\r\n                          className=\"mr-50\"\r\n                          size=\"25px\"\r\n                          color=\"blue\"\r\n                          onClick={() => {\r\n                            // this.handleChangeEdit(params.data, \"Editable\");\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  )} */}\r\n\r\n                {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.Delete && (\r\n                    <Route\r\n                      render={() => (\r\n                        <Trash2\r\n                          className=\"mr-50\"\r\n                          size=\"25px\"\r\n                          color=\"red\"\r\n                          onClick={() => {\r\n                            // this.runthisfunction(params?.data?._id);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Status\",\r\n          field: \"order_status\",\r\n          filter: true,\r\n          width: 140,\r\n          cellRendererFramework: (params) => {\r\n            return params.data?.status?.toLowerCase()?.includes(\"completed\") ? (\r\n              <div className=\"badge badge-pill bg-success\">Completed</div>\r\n            ) : params.data?.status === \"pending\" ? (\r\n              <div className=\"badge badge-pill badge-warning\">\r\n                {params.data?.status}\r\n              </div>\r\n            ) : params.data?.status === \"return\" ? (\r\n              <div className=\"badge badge-pill bg-danger\">Returned</div>\r\n            ) : params.data?.status === \"cancelled\" ? (\r\n              <div className=\"badge badge-pill bg-danger\">\r\n                {params.data.status}\r\n              </div>\r\n            ) : params.data?.status === \"Inprocess\" ? (\r\n              <div className=\"badge badge-pill bg-success\">\r\n                {params.data.status}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"badge badge-pill bg-warning\">\r\n                  {params.data.status}\r\n                </div>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Orderid\",\r\n          field: \"_id\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 210,\r\n          cellRendererFramework: (params) => {\r\n            // console.log(params.data?.order_id);\r\n\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div>\r\n                  {/* <select\r\n                  // className=\"form-control\"\r\n                  defaultValue={params.data?.order_status}\r\n                  onChange={(e) => {\r\n                    // console.log(e.target.value);\r\n                    let data = new FormData();\r\n                    data.append(\"order_id\", params.data?.order_id);\r\n                    data.append(\"order_status\", e.target.value);\r\n                    axiosConfig\r\n                      .post(`/change_order_status`, data)\r\n                      .then((res) => {\r\n                        console.log(res?.data.message);\r\n                        if (res?.data.message) {\r\n                          this.componentDidMount();\r\n                          swal(\"status Updated Succesfully\");\r\n                        }\r\n                      })\r\n                      .catch((err) => {\r\n                        console.log(err);\r\n                      });\r\n                  }}\r\n                  name=\"changestatus\"\r\n                  id=\"changeStatus\"\r\n                >\r\n                  <option value={params.data?.order_status}>\r\n                    {params.data?.order_status}\r\n                  </option>\r\n                  <option value=\"Pending\">--UpdateStatus--</option>\r\n                  <option value=\"Pending\">Pending</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                  <option value=\"Rejected\">Rejected</option>\r\n                  <option value=\"Cancelled\">Cancelled</option>\r\n                </select> */}\r\n                  <span>{params?.data?._id}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Dispatch\",\r\n          field: \"Dispatch\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 140,\r\n          cellRendererFramework: (params) => {\r\n            // console.log(params?.data?.status);\r\n\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  {this.state.InsiderPermissions &&\r\n                    this.state.InsiderPermissions?.Create && (\r\n                      <>\r\n                        {params.data?.status === \"Inprocess\" ||\r\n                        params.data?.status\r\n                          ?.toLowerCase()\r\n                          ?.includes(\"cancelled\") ||\r\n                        params.data?.status\r\n                          ?.toLowerCase()\r\n                          ?.includes(\"completed\") ? (\r\n                          <>\r\n                            {params.data?.status\r\n                              ?.toLowerCase()\r\n                              ?.includes(\"completed\") ? (\r\n                              <div className=\"badge badge-pill bg-success\">\r\n                                Completed\r\n                              </div>\r\n                            ) : params.data?.status === \"pending\" ? (\r\n                              <div className=\"badge badge-pill badge-warning\">\r\n                                {params.data?.status}\r\n                              </div>\r\n                            ) : params.data?.status === \"return\" ? (\r\n                              <div className=\"badge badge-pill bg-danger\">\r\n                                Returned\r\n                              </div>\r\n                            ) : params.data?.status === \"cancelled\" ? (\r\n                              <div className=\"badge badge-pill bg-danger\">\r\n                                {params.data.status}\r\n                              </div>\r\n                            ) : params.data?.status === \"Inprocess\" ? (\r\n                              <div className=\"badge badge-pill bg-success\">\r\n                                {params.data.status}\r\n                              </div>\r\n                            ) : (\r\n                              <>\r\n                                <div className=\"badge badge-pill bg-warning\">\r\n                                  {params.data.status}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <Route\r\n                              render={({ history }) => (\r\n                                <FaTruck\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  title=\"Dispatch Now\"\r\n                                  onClick={() =>\r\n                                    history.push({\r\n                                      pathname: `/app/AjGroup/dispatch/CreateDispach/${params?.data?._id}`,\r\n                                      state: { data: params?.data },\r\n                                    })\r\n                                  }\r\n                                  // onClick={() => this.MergeBillNow(params.data)}\r\n                                  fill=\"green\"\r\n                                  size=\"30px\"\r\n                                />\r\n                              )}\r\n                            />\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  {/* {params?.data?.status == \"completed\" ? (\r\n                    <>\r\n                    </>\r\n                  ) : (\r\n                    \"NA\"\r\n                  )} */}\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"FullName\",\r\n          field: \"fullName\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 150,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.fullName}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"MobileNo\",\r\n          field: \"MobileNo\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 160,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.MobileNo}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Address\",\r\n          field: \"address\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 200,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.address}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"GrandTotal\",\r\n          field: \"grandTotal\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 150,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.grandTotal}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Tax Amount\",\r\n          field: \"taxAmount\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 150,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center justify-content-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params?.data?.taxAmount}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Party Name\",\r\n          field: \"partyId.firstName\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 210,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params.data?.partyId?.firstName}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"Total Product\",\r\n          field: \"params?.data?.orderItems?.length\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 180,\r\n          cellRendererFramework: (params) => {\r\n            // console.log(params.data);\r\n            return (\r\n              <div className=\"d-flex cursor-pointer\">\r\n                <div>{params?.data?.orderItems?.length} Products</div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        // {\r\n        //   headerName: \"total\",\r\n        //   field: \"total\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 160,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div>\r\n        //           <Badge color=\"success\">{params.data?.total}</Badge>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n        // {\r\n        //   headerName: \"brandname \",\r\n        //   field: \"brand_name\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 180,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div>\r\n        //           <span>{params.data?.brand_name}</span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n        // {\r\n        //   headerName: \"city\",\r\n        //   field: \"city\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 160,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div>\r\n        //           <span>{params.data?.city}</span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n        // {\r\n        //   headerName: \"order Creation date\",\r\n        //   field: \"order_date\",\r\n        //   filter: true,\r\n        //   resizable: true,\r\n        //   width: 230,\r\n        //   cellRendererFramework: (params) => {\r\n        //     return (\r\n        //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n        //         <div>\r\n        //           <span>{params.data?.order_date}</span>\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n      ],\r\n      AllcolumnDefs: [],\r\n      SelectedcolumnDefs: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        enablePivot: true,\r\n        enableValue: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modalOne: !prevState.modalOne,\r\n    }));\r\n  };\r\n  LookupviewStart = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  // handleChangeEdit = (data, types) => {\r\n  //   let type = types;\r\n  //   if (type == \"readonly\") {\r\n  //     this.setState({ ViewOneUserView: true });\r\n  //     this.setState({ ViewOneData: data });\r\n  //   } else {\r\n  //     this.setState({ EditOneUserView: true });\r\n  //     this.setState({ EditOneData: data });\r\n  //   }\r\n  // };\r\n\r\n  async componentDidMount() {\r\n    const UserInformation = this.context?.UserInformatio;\r\n    const InsidePermissions = CheckPermission(\"Dispatch details\");\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"));\r\n    await OrderDisPatchList(userId?._id, userId?.database)\r\n      .then((res) => {\r\n        console.log(res?.Invoice);\r\n        this.setState({ rowData: res?.Invoice });\r\n        this.setState({ AllcolumnDefs: this.state.columnDefs });\r\n\r\n        let userHeading = JSON.parse(\r\n          localStorage.getItem(\"DispatchDetailList\")\r\n        );\r\n        if (userHeading?.length) {\r\n          this.setState({ columnDefs: userHeading });\r\n          this.gridApi.setColumnDefs(userHeading);\r\n          this.setState({ SelectedcolumnDefs: userHeading });\r\n        } else {\r\n          this.setState({ columnDefs: this.state.columnDefs });\r\n          this.setState({ SelectedcolumnDefs: this.state.columnDefs });\r\n        }\r\n        this.setState({ SelectedCols: this.state.columnDefs });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  toggleDropdown = () => {\r\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          DeleteAccount(id)\r\n            .then((res) => {\r\n              let selectedData = this.gridApi.getSelectedRows();\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridRef.current = params.api;\r\n\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleChangeHeader = (e, value, index) => {\r\n    let check = e.target.checked;\r\n    if (check) {\r\n      SelectedColums?.push(value);\r\n    } else {\r\n      const delindex = SelectedColums?.findIndex(\r\n        (ele) => ele?.headerName === value?.headerName\r\n      );\r\n\r\n      SelectedColums?.splice(delindex, 1);\r\n    }\r\n  };\r\n  parseCsv(csvData) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: (result) => {\r\n          if (result.data && result.data.length > 0) {\r\n            resolve(result.data);\r\n          } else {\r\n            reject(new Error(\"No data found in the CSV\"));\r\n          }\r\n        },\r\n        error: (error) => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  generatePDF(parsedData) {\r\n    let pdfsize = [Object.keys(parsedData[0])][0].length;\r\n    let size = pdfsize > 15 ? \"a1\" : pdfsize < 14 > 10 ? \"a3\" : \"a4\";\r\n\r\n    const doc = new jsPDF(\"landscape\", \"mm\", size, false);\r\n    doc.setTextColor(5, 87, 97);\r\n    const tableData = parsedData.map((row) => Object.values(row));\r\n    doc.addImage(Logo, \"JPEG\", 10, 10, 50, 30);\r\n    let date = new Date();\r\n    doc.setCreationDate(date);\r\n    doc.text(\"UserAccount\", 14, 51);\r\n    doc.autoTable({\r\n      head: [Object.keys(parsedData[0])],\r\n      body: tableData,\r\n      startY: 60,\r\n    });\r\n\r\n    doc.save(\"UserList.pdf\");\r\n  }\r\n\r\n  exportToPDF = async () => {\r\n    const csvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    try {\r\n      const parsedData = await this.parseCsv(csvData);\r\n      this.generatePDF(parsedData);\r\n    } catch (error) {\r\n      console.error(\"Error parsing CSV:\", error);\r\n    }\r\n  };\r\n  processCell = (params) => {\r\n    return params.value;\r\n  };\r\n\r\n  convertCsvToExcel(csvData) {\r\n    return new Promise((resolve) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        complete: function (result) {\r\n          const worksheet = XLSX.utils.json_to_sheet(result.data);\r\n          const workbook = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n          const excelBuffer = XLSX.write(workbook, {\r\n            bookType: \"xlsx\",\r\n            type: \"array\",\r\n          });\r\n          const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          resolve(blob);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  downloadExcelFile(blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"Userlist.xlsx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  exportToExcel = async (e) => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    const blob = await this.convertCsvToExcel(CsvData);\r\n    this.downloadExcelFile(blob);\r\n  };\r\n\r\n  convertCSVtoExcel = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: (result) => {\r\n        const ws = XLSX.utils.json_to_sheet(result.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelType = \"xls\";\r\n        XLSX.writeFile(wb, `UserList.${excelType}`);\r\n      },\r\n    });\r\n  };\r\n\r\n  shiftElementUp = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex > 0) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex - 1 });\r\n      myArrayCopy.splice(currentIndex - 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n\r\n  shiftElementDown = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex < this.state.SelectedcolumnDefs.length - 1) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex + 1 });\r\n      myArrayCopy.splice(currentIndex + 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n  convertCsvToXml = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: (result) => {\r\n        const rows = result.data;\r\n\r\n        // Create XML\r\n        let xmlString = \"<root>\\n\";\r\n\r\n        rows.forEach((row) => {\r\n          xmlString += \"  <row>\\n\";\r\n          row.forEach((cell, index) => {\r\n            xmlString += `    <field${index + 1}>${cell}</field${index + 1}>\\n`;\r\n          });\r\n          xmlString += \"  </row>\\n\";\r\n        });\r\n\r\n        xmlString += \"</root>\";\r\n\r\n        // setXmlData(xmlString);\r\n\r\n        // Create a download link\r\n        const blob = new Blob([xmlString], { type: \"text/xml\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"output.xml\";\r\n        link.click();\r\n      },\r\n    });\r\n  };\r\n\r\n  HandleSetVisibleField = (e) => {\r\n    e.preventDefault();\r\n    this.gridApi.setColumnDefs(this.state.SelectedcolumnDefs);\r\n    this.setState({ columnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ SelectedcolumnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ rowData: this.state.rowData });\r\n    localStorage.setItem(\r\n      \"DispatchDetailList\",\r\n      JSON.stringify(this.state.SelectedcolumnDefs)\r\n    );\r\n    this.LookupviewStart();\r\n  };\r\n\r\n  HeadingRightShift = () => {\r\n    const updatedSelectedColumnDefs = [\r\n      ...new Set([\r\n        ...this.state.SelectedcolumnDefs.map((item) => JSON.stringify(item)),\r\n        ...SelectedColums.map((item) => JSON.stringify(item)),\r\n      ]),\r\n    ].map((item) => JSON.parse(item));\r\n    this.setState({\r\n      SelectedcolumnDefs: [...new Set(updatedSelectedColumnDefs)], // Update the state with the combined array\r\n    });\r\n  };\r\n  handleLeftShift = () => {\r\n    let SelectedCols = this.state.SelectedcolumnDefs.slice();\r\n    let delindex = this.state.Arrindex; /* Your delete index here */\r\n\r\n    if (SelectedCols && delindex >= 0) {\r\n      const splicedElement = SelectedCols.splice(delindex, 1); // Remove the element\r\n\r\n      this.setState({\r\n        SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n      SelectedcolumnDefs,\r\n      isOpen,\r\n      SelectedCols,\r\n      InsiderPermissions,\r\n      AllcolumnDefs,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Col className=\"app-user-list\">\r\n          {this.state.EditOneUserView && this.state.EditOneUserView ? (\r\n            <Row className=\"card\">\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end p-1\">\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({ EditOneUserView: false });\r\n                    }}\r\n                    color=\"danger\">\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              <GoodDispatchEdit EditOneData={this.state.EditOneData} />\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {this.state.ViewOneUserView && this.state.ViewOneUserView ? (\r\n                <>\r\n                  <Row className=\"card\">\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-end p-1\">\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.setState({ ViewOneUserView: false });\r\n                          }}\r\n                          color=\"danger\">\r\n                          Back\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <GoodDispatchView ViewOneData={this.state.ViewOneData} />\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col sm=\"12\">\r\n                    <Card>\r\n                      <Row className=\"ml-2 mr-2 mt-2\">\r\n                        <Col>\r\n                          <h1\r\n                            className=\"float-left\"\r\n                            style={{ fontWeight: \"600\" }}>\r\n                            Good Dispatch List\r\n                          </h1>\r\n                        </Col>\r\n\r\n                        {InsiderPermissions && InsiderPermissions?.View && (\r\n                          <Col>\r\n                            <span className=\"mx-1\">\r\n                              <FaFilter\r\n                                style={{ cursor: \"pointer\" }}\r\n                                title=\"filter coloumn\"\r\n                                size=\"35px\"\r\n                                onClick={this.LookupviewStart}\r\n                                color=\"#39cccc\"\r\n                                className=\"float-right\"\r\n                              />\r\n                            </span>\r\n                            <span className=\"mx-1\">\r\n                              <div className=\"dropdown-container float-right\">\r\n                                <ImDownload\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  title=\"download file\"\r\n                                  size=\"35px\"\r\n                                  className=\"dropdown-button \"\r\n                                  color=\"#39cccc\"\r\n                                  onClick={this.toggleDropdown}\r\n                                />\r\n                                {isOpen && (\r\n                                  <div\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      zIndex: \"1\",\r\n                                      border: \"1px solid #39cccc\",\r\n                                      backgroundColor: \"white\",\r\n                                    }}\r\n                                    className=\"dropdown-content dropdownmy\">\r\n                                    <h5\r\n                                      onClick={() => this.exportToPDF()}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive mt-1\">\r\n                                      .PDF\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.gridApi.exportDataAsCsv()\r\n                                      }\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\">\r\n                                      .CSV\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={this.convertCSVtoExcel}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\">\r\n                                      .XLS\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={this.exportToExcel}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\">\r\n                                      .XLSX\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={() => this.convertCsvToXml()}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\">\r\n                                      .XML\r\n                                    </h5>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </span>\r\n                            {/* <span>\r\n                              <Route\r\n                                render={({ history }) => (\r\n                                  <Button\r\n                                    style={{\r\n                                      cursor: \"pointer\",\r\n                                      backgroundColor: \"#39cccc\",\r\n                                      color: \"white\",\r\n                                      fontWeight: \"600\",\r\n                                    }}\r\n                                    className=\"float-right mr-1\"\r\n                                    color=\"#39cccc\"\r\n                                    onClick={() =>\r\n                                      history.push(\r\n                                        \"/app/AjGroup/dispatch/CreateDispach/:id\"\r\n                                      )\r\n                                    }>\r\n                                    <FaPlus size={15} /> Create Dispatch\r\n                                  </Button>\r\n                                )}\r\n                              />\r\n                            </span> */}\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                      <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n                        {this.state.rowData === null ? null : (\r\n                          <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                            <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                              <div className=\"mb-1\">\r\n                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                  <DropdownToggle tag=\"div\">\r\n                                    {this.gridApi\r\n                                      ? this.state.currenPageSize\r\n                                      : \"\" * this.state.getPageSize -\r\n                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {this.state.rowData.length -\r\n                                      this.state.currenPageSize *\r\n                                        this.state.getPageSize >\r\n                                    0\r\n                                      ? this.state.currenPageSize *\r\n                                        this.state.getPageSize\r\n                                      : this.state.rowData.length}{\" \"}\r\n                                    of {this.state.rowData.length}\r\n                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu right>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(5)}>\r\n                                      5\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(20)}>\r\n                                      20\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(50)}>\r\n                                      50\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(100)}>\r\n                                      100\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(134)}>\r\n                                      134\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap justify-content-end mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                  <Input\r\n                                    placeholder=\"search Item here...\"\r\n                                    onChange={(e) =>\r\n                                      this.updateSearchQuery(e.target.value)\r\n                                    }\r\n                                    value={this.state.value}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ContextLayout.Consumer className=\"ag-theme-alpine\">\r\n                              {(context) => (\r\n                                <AgGridReact\r\n                                  id=\"myAgGrid\"\r\n                                  // gridOptions={{\r\n                                  //   domLayout: \"autoHeight\",\r\n                                  //   // or other layout options\r\n                                  // }}\r\n                                  gridOptions={this.gridOptions}\r\n                                  rowSelection=\"multiple\"\r\n                                  defaultColDef={defaultColDef}\r\n                                  columnDefs={columnDefs}\r\n                                  rowData={rowData}\r\n                                  // onGridReady={(params) => {\r\n                                  //   this.gridApi = params.api;\r\n                                  //   this.gridColumnApi = params.columnApi;\r\n                                  //   this.gridRef.current = params.api;\r\n\r\n                                  //   this.setState({\r\n                                  //     currenPageSize:\r\n                                  //       this.gridApi.paginationGetCurrentPage() +\r\n                                  //       1,\r\n                                  //     getPageSize:\r\n                                  //       this.gridApi.paginationGetPageSize(),\r\n                                  //     totalPages:\r\n                                  //       this.gridApi.paginationGetTotalPages(),\r\n                                  //   });\r\n                                  // }}\r\n                                  onGridReady={this.onGridReady}\r\n                                  colResizeDefault={\"shift\"}\r\n                                  animateRows={true}\r\n                                  floatingFilter={false}\r\n                                  pagination={true}\r\n                                  paginationPageSize={\r\n                                    this.state.paginationPageSize\r\n                                  }\r\n                                  pivotPanelShow=\"always\"\r\n                                  enableRtl={context.state.direction === \"rtl\"}\r\n                                  ref={this.gridRef} // Attach the ref to the grid\r\n                                  domLayout=\"autoHeight\" // Adjust layout as needed\r\n                                />\r\n                              )}\r\n                            </ContextLayout.Consumer>\r\n                          </div>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.LookupviewStart}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}>\r\n          <ModalHeader toggle={this.LookupviewStart}>Change Fileds</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"12\" xl=\"4\" xs=\"12\">\r\n                <h4>Avilable Columns</h4>\r\n                <div className=\"mainshffling\">\r\n                  <div class=\"ex1\">\r\n                    {AllcolumnDefs &&\r\n                      AllcolumnDefs?.map((ele, i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              onClick={(e) =>\r\n                                this.handleChangeHeader(e, ele, i)\r\n                              }\r\n                              key={i}\r\n                              className=\"mycustomtag mt-1\">\r\n                              <span className=\"mt-1\">\r\n                                <h5\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"allfields\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    // checked={check && check}\r\n                                    className=\"mx-1\"\r\n                                  />\r\n\r\n                                  {ele?.headerName}\r\n                                </h5>\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"12\" xl=\"2\" xs=\"12\" className=\"colarrowbtn\">\r\n                <div className=\"mainarrowbtn\">\r\n                  <div style={{ cursor: \"pointer\" }}>\r\n                    <FaArrowAltCircleRight\r\n                      onClick={this.HeadingRightShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ cursor: \"pointer\" }} className=\"my-2\">\r\n                    <FaArrowAltCircleLeft\r\n                      onClick={this.handleLeftShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\" xl=\"6\" xs=\"12\">\r\n                <Row>\r\n                  <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n                    <h4>Visible Columns</h4>\r\n                    <div className=\"mainshffling\">\r\n                      <div class=\"ex1\">\r\n                        {SelectedcolumnDefs &&\r\n                          SelectedcolumnDefs?.map((ele, i) => {\r\n                            return (\r\n                              <>\r\n                                <div key={i} className=\"mycustomtag mt-1\">\r\n                                  <span className=\"mt-1\">\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.setState({ Arrindex: i })\r\n                                      }\r\n                                      style={{\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor: `${\r\n                                          this.state.Arrindex === i\r\n                                            ? \"#1877f2\"\r\n                                            : \"\"\r\n                                        }`,\r\n                                      }}\r\n                                      className=\"allfields\">\r\n                                      <IoMdRemoveCircleOutline\r\n                                        onClick={() => {\r\n                                          const SelectedCols =\r\n                                            this.state.SelectedcolumnDefs.slice();\r\n                                          const delindex =\r\n                                            SelectedCols.findIndex(\r\n                                              (element) =>\r\n                                                element?.headerName ==\r\n                                                ele?.headerName\r\n                                            );\r\n\r\n                                          if (SelectedCols && delindex >= 0) {\r\n                                            const splicedElement =\r\n                                              SelectedCols.splice(delindex, 1); // Remove the element\r\n                                            // splicedElement contains the removed element, if needed\r\n\r\n                                            this.setState({\r\n                                              SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n                                            });\r\n                                          }\r\n                                          // const delindex =\r\n                                          //   SelectedCols.findIndex(\r\n                                          //     (element) =>\r\n                                          //       element?.headerName ==\r\n                                          //       ele?.headerName\r\n                                          //   );\r\n\r\n                                          // SelectedCols?.splice(delindex, 1);\r\n                                          // this.setState({\r\n                                          //   SelectedcolumnDefs: SelectedCols,\r\n                                          // });\r\n                                        }}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        size=\"25px\"\r\n                                        color=\"red\"\r\n                                        className=\"mr-1\"\r\n                                      />\r\n\r\n                                      {ele?.headerName}\r\n                                    </h5>\r\n                                  </span>\r\n                                </div>\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"updownbtn justify-content-center\">\r\n                      <div>\r\n                        <BsFillArrowUpSquareFill\r\n                          className=\"arrowassign mb-1\"\r\n                          size=\"30px\"\r\n                          onClick={this.shiftElementUp}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillArrowDownSquareFill\r\n                          onClick={this.shiftElementDown}\r\n                          className=\"arrowassign\"\r\n                          size=\"30px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button onClick={this.HandleSetVisibleField} color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.modalOne}\r\n          toggle={this.toggleModal}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}>\r\n          <ModalHeader toggle={this.toggleModal}>View Order</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"container\">\r\n              <Row>\r\n                <Col>\r\n                  <Label>Party Name :</Label>\r\n                  <h5 className=\"mx-1\">\r\n                    {this.state.ViewOneData &&\r\n                      this.state.ViewOneData?.partyId?.firstName}\r\n                  </h5>\r\n                </Col>\r\n                <Col>\r\n                  <Label>Date Created :</Label>\r\n                  <h5>\r\n                    {this.state.ViewOneData &&\r\n                      this.state.ViewOneData?.createdAt?.split(\"T\")[0]}\r\n                  </h5>\r\n                </Col>\r\n                <Col>\r\n                  <Label>Address :</Label>\r\n                  <h5>\r\n                    <strong>\r\n                      {this.state.ViewOneData &&\r\n                        this.state.ViewOneData?.address}{\" \"}\r\n                    </strong>\r\n                  </h5>\r\n                </Col>\r\n                <Col>\r\n                  <Label>Grand Total :</Label>\r\n                  <h5>\r\n                    <strong>\r\n                      {this.state.ViewOneData &&\r\n                        this.state.ViewOneData?.grandTotal}{\" \"}\r\n                    </strong>\r\n                    Rs/-\r\n                  </h5>\r\n                </Col>\r\n\r\n                {/* <Col>\r\n                <Label>Download Invoice :</Label>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <FaDownload\r\n                    onClick={this.handleStockTrxInvoiceShow}\r\n                    color=\"#00c0e\"\r\n                    fill=\"#00c0e\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    size={20}\r\n                  />\r\n                </div>\r\n              </Col> */}\r\n              </Row>\r\n              <Row className=\"p-2\">\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <h4>Product Details</h4>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Table style={{ cursor: \"pointer\" }} responsive>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Product Name</th>\r\n                        <th>Price</th>\r\n                        <th>Size</th>\r\n                        <th>Unit</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.ViewOneData?.orderItems &&\r\n                        this.state.ViewOneData?.orderItems?.map((ele, i) => (\r\n                          <>\r\n                            <tr>\r\n                              <th scope=\"row\">{i + 1}</th>\r\n                              <td>{ele?.productId?.Product_Title}</td>\r\n                              <td>{ele?.productId?.Product_MRP}</td>\r\n                              <td>{ele?.Size}</td>\r\n                              <td>{ele?.unitType}</td>\r\n                              <td>{ele?.qty}</td>\r\n                              <td>\r\n                                {ele?.productId?.Product_MRP *\r\n                                  ele?.Size *\r\n                                  ele?.qty}\r\n                              </td>\r\n                            </tr>\r\n                          </>\r\n                        ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default GoodDispatchList;\r\n","module.exports = __webpack_public_path__ + \"static/media/logomain.cee4d0c2.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n    Download: newparmisson?.permission.includes(\"Download\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n"],"sourceRoot":""}