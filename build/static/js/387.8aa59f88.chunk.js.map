{"version":3,"sources":["views/apps/freshlist/customer/HRM/Setrule/ruleForm.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["i","Ruleform","useState","title","setTitle","amount","setAmount","handleSubmit","e","preventDefault","console","log","sm","md","size","offset","onSubmit","for","type","name","id","value","onChange","target","placeholder","color","_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":";6RACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQA4DeC,UAzDE,WACb,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAA4BF,mBAAS,IAAG,mBAAjCG,EAAM,KAAEC,EAAS,KAElBC,EAAY,uCAAG,WAAOC,GAAC,iEACzBA,EAAEC,iBAEFC,QAAQC,IAAI,SAAUR,GACtBO,QAAQC,IAAI,UAAWN,GAAQ,2CAClC,gBALiB,sCAOlB,OACI,kBAAC,IAAI,KACD,kBAAC,IAAQ,KACL,kBAAC,IAAG,KACA,kBAAC,IAAG,CAACO,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAChC,kBAAC,IAAI,CAACC,SAAUT,GACZ,4BAAI,qBACJ,kBAAC,IAAS,KACN,kBAAC,IAAK,CAACU,IAAI,iBAAgB,SAC3B,kBAAC,IAAK,CACFC,KAAK,SACLC,KAAK,QACLC,GAAG,gBACHC,MAAOlB,EACPmB,SAAU,SAACd,GAAC,OAAKJ,EAASI,EAAEe,OAAOF,SAEnC,4BAAQA,MAAM,IAAG,UACjB,4BAAQA,MAAM,YAAW,YACzB,4BAAQA,MAAM,YAAW,cAKjC,kBAAC,IAAS,KACN,kBAAC,IAAK,CAACJ,IAAI,eAAc,UACzB,kBAAC,IAAK,CACFC,KAAK,SACLC,KAAK,SACLC,GAAG,cACHC,MAAOhB,EACPmB,YAAY,eACZF,SAAU,SAACd,GAAC,OAAKF,EAAUE,EAAEe,OAAOF,WAI5C,kBAAC,IAAM,CAACI,MAAM,UAAUP,KAAK,UAAS,iB,iCClDlE,2EAEIQ,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBC,IAAKF,IAAUG,KACfC,MAAOJ,IAAUG,KACjBE,OAAQL,IAAUG,KAClBG,SAAUN,IAAUG,KACpBI,IAAKC,cACLC,UAAWT,IAAUU,OACrBC,UAAWX,IAAUY,QAMnBC,EAAY,SAAmBC,GACjC,IAAIL,EAAYK,EAAML,UAClBE,EAAYG,EAAMH,UAClBT,EAAMY,EAAMZ,IACZI,EAAWQ,EAAMR,SACjBF,EAAQU,EAAMV,MACdC,EAASS,EAAMT,OACfU,EAAMD,EAAMP,IACZS,EAAaC,YAA8BH,EAAOjB,GAElDqB,EAAUC,0BAAgBC,IAAWX,IAAWP,GAAM,MAAeE,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBK,GAMtM,MAJY,aAARI,IACFC,EAAWV,SAAWA,GAGJe,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEP,UAAWS,MAIfL,EAAUf,UAAYA,EACtBe,EAAUW,aA1BS,CACjBjB,IAAK,OA0BQM","file":"static/js/387.8aa59f88.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Button, Card, CardBody, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\r\n\r\nconst Ruleform = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log('Title:', title);\r\n        console.log('Amount:', amount);\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <Row>\r\n                    <Col sm='12' md={{ size: 6, offset: 3 }}>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <h1> Manage Rule Form</h1>\r\n                            <FormGroup>\r\n                                <Label for=\"titleDropdown\">Title</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"title\"\r\n                                    id=\"titleDropdown\"\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">Select</option>\r\n                                    <option value=\"Option 1\">Option 1</option>\r\n                                    <option value=\"Option 2\">Option 2</option>\r\n                                    {/* Add more options as needed */}\r\n                                </Input>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"amountInput\">Amount</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"amount\"\r\n                                    id=\"amountInput\"\r\n                                    value={amount}\r\n                                    placeholder='Enter Amount'\r\n                                    onChange={(e) => setAmount(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Ruleform;\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}