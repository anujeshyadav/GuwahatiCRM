{"version":3,"sources":["views/apps/freshlist/house/LedgerPdf.js","views/apps/freshlist/Production/productionprocesspage.js"],"names":["GenericPdfDownloader","rootElementId","downloadFileName","useState","Loader","setLoader","color","className","onClick","input","document","getElementById","canvas","createElement","width","scrollWidth","height","scrollHeight","window","scrollY","html2canvas","scale","then","capturedCanvas","imgData","toDataURL","pdf","jsPDF","imgWidth","internal","pageSize","getWidth","imgHeight","addImage","save","GrandTotal","SelectedITems","ProductionProcess","args","Other_Expenses","GSTApplied","Other_charges","discount","ExtraCharges","setExtraCharges","setIndex","ProductList","setProductList","itemList","setitemList","ProductinProduct","setProductionProduct","grandTotalAmt","setGrandTotalAmt","setUnitList","setUserInfo","setWarehouseList","modalOne","setModalOne","toggleOne","handleExtraCharge","e","target","name","value","product","productId","selecetedUnit","WasteUnit","AvailaleQty","Waste_Qty","WastePrice","availableQty","transferQty","RequiredQty","price","totalprice","Size","unitType","stockTrxDate","targetEndDate","Shipping","tax","grandTotal","setProduct","handleProductChangeProductTwo","index","list","handleProductChangeProductone","Number","amt","length","map","val","reduce","a","b","console","log","toFixed","handleRemoveSelected","selectedList","selectedItem","splice","ele","i","qty","Product_MRP","indextotal","useEffect","userData","JSON","parse","localStorage","getItem","Warehouse_Temporarlylist","_id","res","adminDetails","catch","err","UnitListView","database","Unit","userdata","ProductListView","Product","Items","filter","addProductType","Products","userInfo","addMoreProduct","removeMoreProduct","newFormValues","lg","md","sm","render","history","style","cursor","goBack","onSubmit","preventDefault","required","selectionLimit","isObject","options","onSelect","onRemove","removedItem","displayValue","key","push","prevProductList","updatedProductList","updatedProduct","split","handleSelectionProduct","for","placeholder","onChange","id","type","readOnly","aria-readonly","min","step","Ripple","maxWidth","isOpen","toggle","Allproduct","unit","totalPrice","AllWastagematerial","ALL","payload","created_by","product_name","productItems","wastageItems","miscellaneousExpennses","gstApplied","otherCharges","_PostSave","Save_Producton_Process","swal"],"mappings":"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","file":"static/js/320.bb203134.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst GenericPdfDownloader = ({ rootElementId, downloadFileName }) => {\r\n  const [Loader, setLoader] = useState(false);\r\n  const downloadPdfDocument = () => {\r\n    setLoader(true);\r\n    const input = document.getElementById(rootElementId);\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = input.scrollWidth; // Capture entire width\r\n    canvas.height = input.scrollHeight + window.scrollY;\r\n    html2canvas(input, { canvas, scale: 1 }).then((capturedCanvas) => {\r\n      const imgData = capturedCanvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF();\r\n\r\n      const imgWidth = pdf.internal.pageSize.getWidth();\r\n      const imgHeight =\r\n        (capturedCanvas.height * imgWidth) / capturedCanvas.width;\r\n\r\n      pdf.addImage(imgData, \"JPEG\", 0, 0, imgWidth, imgHeight);\r\n\r\n      pdf.save(`${downloadFileName}.pdf`);\r\n      setLoader(false);\r\n    });\r\n  };\r\n  // const downloadPdfDocument = () => {\r\n  //   const input = document.getElementById(rootElementId);\r\n\r\n  //   // Set a delay before capturing the content\r\n\r\n  //     const canvas = document.createElement(\"canvas\");\r\n  //     canvas.width = input.scrollWidth; // Capture entire width\r\n  //     canvas.height = input.scrollHeight + window.scrollY; // Capture entire height\r\n\r\n  //     html2canvas(input, { canvas, scale: 1 }) // Increase the scale (DPI)\r\n  //       .then((capturedCanvas) => {\r\n  //         const imgData = capturedCanvas.toDataURL(\"image/png\");\r\n\r\n  //         const pdf = new jsPDF();\r\n  //         const imgWidth = pdf.internal.pageSize.getWidth();\r\n  //         const imgHeight =\r\n  //           (capturedCanvas.height * imgWidth) / capturedCanvas.width;\r\n\r\n  //         let page = 1; // Initialize page number\r\n\r\n  //         // Function to add a page to the PDF\r\n  //         const addPageToPDF = () => {\r\n  //           pdf.addPage();\r\n  //           pdf.setPage(page);\r\n  //           pdf.rect(5, 5, imgWidth - 10, imgHeight - 15);\r\n  //           pdf.addImage(imgData, \"JPEG\", 0, 0, imgWidth, imgHeight);\r\n  //           pdf.text(`Page ${page}`, imgWidth / 2, imgHeight - 10, {\r\n  //             align: \"center\",\r\n  //           });\r\n  //         };\r\n\r\n  //         // Add the first page\r\n  //         addPageToPDF();\r\n\r\n  //         // Determine the number of remaining pages based on content height\r\n  //         let remainingHeight = capturedCanvas.height - imgHeight;\r\n  //         while (remainingHeight > 0) {\r\n  //           page++;\r\n  //           addPageToPDF();\r\n  //           remainingHeight -= imgHeight;\r\n  //         }\r\n\r\n  //         pdf.save(`${downloadFileName}.pdf`);\r\n  //       });\r\n\r\n  // };\r\n\r\n  return (\r\n    <Button\r\n      color=\"primary\"\r\n      className=\"downloadledger\"\r\n      onClick={downloadPdfDocument}>\r\n      {Loader && Loader ? <>Downloading.</> : <>Download Pdf</>}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default GenericPdfDownloader;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  InputGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  ProductListView,\r\n  UnitListView,\r\n  WarehousetoWareHouseTrx,\r\n  Warehouse_Temporarlylist,\r\n  _Post,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Save_Producton_Process } from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\nimport LedgerPdf from \"../house/LedgerPdf\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst ProductionProcess = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [ExtraCharges, setExtraCharges] = useState({\r\n    Other_Expenses: 100,\r\n    GSTApplied: 18,\r\n    Other_charges: 50,\r\n    discount: 10,\r\n  });\r\n\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [StockTrxdate, setStockTrxDate] = useState(\"\");\r\n  const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [AddExtraCharges, setAddExtraCharges] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [itemList, setitemList] = useState([]);\r\n  const [ProductWTWList, setProductWTWList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [ProductinProduct, setProductionProduct] = useState({});\r\n  const [WareHousetwo, setWareHousetwo] = useState([]);\r\n  const [TypeOfTrx, setTypeOfTrx] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const [items, setItems] = useState(\"\");\r\n  const [audit, setAudit] = useState(false);\r\n  const [WareHouselist, setWarehouseList] = useState([]);\r\n\r\n  const [modalOne, setModalOne] = useState(false);\r\n  const toggleOne = () => setModalOne(!modalOne);\r\n  // const toggle = (item) => {\r\n  //   setItems(item);\r\n  //   setModal(!modal);\r\n  // };\r\n\r\n  // const handleopentoggle = (iteam) => {\r\n  //   // toggle(iteam);\r\n  // };\r\n  const handleExtraCharge = (e) => {\r\n    let { name, value } = e.target;\r\n    setExtraCharges({\r\n      ...ExtraCharges,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      selecetedUnit: \"\",\r\n      WasteUnit: \"\",\r\n      AvailaleQty: null,\r\n      Waste_Qty: null,\r\n      WastePrice: \"\",\r\n      availableQty: \"\",\r\n      transferQty: 1,\r\n      RequiredQty: \"\",\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      stockTrxDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index, avalaibleSize) => {\r\n    if (avalaibleSize >= Number(e.target.value)) {\r\n      setIndex(index);\r\n      console.log(product);\r\n\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      if (name.includes(\"transferQty\")) {\r\n        // list[index][\"Size\"] = Number(value);\r\n        let available = Number(list[index][\"AvailaleQty\"]);\r\n        let Askingfor = Number(value);\r\n        if (available >= Askingfor) {\r\n          list[index][name] = Askingfor;\r\n        } else {\r\n          swal(\"Can not Transfer More then Stock\");\r\n          list[index][name] = available - 1;\r\n        }\r\n      } else {\r\n        list[index][name] = value;\r\n      }\r\n      console.log(GrandTotal);\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map((val) => {\r\n          GrandTotal[index] = val.Size * val.price * val.transferQty;\r\n          list[index][\"totalprice\"] = val.Size * val.price * val.transferQty;\r\n          return val.Size * val.price * val.transferQty;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      // console.log(list)\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const handleProductChangeProductTwo = (e, index) => {\r\n    setIndex(index);\r\n\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n    setProduct(list);\r\n  };\r\n  const handleSubmitCharges = (e) => {\r\n    e.preventDefault();\r\n    debugger;\r\n    const list = [...product];\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        return val?.price * val?.RequiredQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n    }\r\n\r\n    let Totalamount =\r\n      amt +\r\n      ExtraCharges?.Other_Expenses +\r\n      (amt * ExtraCharges?.GSTApplied) / 100 +\r\n      ExtraCharges?.Other_charges;\r\n    // -\r\n    // ExtraCharges?.discount;\r\n\r\n    setGrandTotalAmt(Totalamount.toFixed(2));\r\n  };\r\n  const handleProductChangeProductone = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n\r\n    list[index][name] = Number(value);\r\n\r\n    let amt = 0;\r\n    if (list.length > 0) {\r\n      const x = list?.map((val) => {\r\n        GrandTotal[index] = val.price * val.RequiredQty;\r\n        list[index][\"totalprice\"] = val.price * val.RequiredQty;\r\n        return val?.price * val?.RequiredQty;\r\n      });\r\n      amt = x.reduce((a, b) => a + b);\r\n      console.log(\"GrandTotal\", amt);\r\n    }\r\n    setProduct(list);\r\n    setGrandTotalAmt(amt.toFixed(2));\r\n  };\r\n  console.log(ExtraCharges);\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(selectedItem); // removed item\r\n    // console.log(product);\r\n    // console.log(index);\r\n    // console.log(SelectedITems);\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleRemoveSelectedone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.Size * ele?.price * SelectedSize[i]?.unitQty);\r\n      let indextotal = ele?.Size * SelectedSize[i]?.unitQty;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    // product[index][\"AvailaleQty\"] = myproduct?.Size;\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?.productId?._id;\r\n      updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionProduct = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      // updatedProduct.discount = selectedItem?.discount;\r\n      if (selectedItem?.unitType) {\r\n        updatedProduct.unitType = selectedItem?.unitType.split(\" \")[1];\r\n      }\r\n      // updatedProduct.AvailaleQty = selectedItem?.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n  const handleSelectionone = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem?.unitQty; // Update the price of the copied product\r\n      updatedProduct.unitType = selectedItem?.primaryUnit;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty);\r\n        let indextotal =\r\n          ele?.transferQty * ele?.price * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr?.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // handleInputChange;\r\n  // useEffect(() => {\r\n  //   console.log(window);\r\n  //   console.log(product);\r\n  //   console.log(GrandTotal);\r\n  //   console.log(Salesperson);\r\n  //   console.log(StockTrxdate);\r\n  //   console.log(targetEndDate);\r\n  // }, [product, targetEndDate]);\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    Warehouse_Temporarlylist(userData?._id)\r\n      .then((res) => {\r\n        console.log(res?.adminDetails);\r\n        // let myWarehouse = res?.adminDetails?.filter((ele, i) =>\r\n        //   ele?.rolename?.roleName\r\n        //     ?.split(\" \")\r\n        //     .join(\"\")\r\n        //     .toLowerCase()\r\n        //     .includes(\"warehouse\")\r\n        // );\r\n\r\n        setWarehouseList(res?.adminDetails);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // CreateWarehouseList(userData._id)\r\n    //   .then((res) => {\r\n    //     console.log(res?.Warehouse);\r\n    //     setWarehouseList(res?.Warehouse);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    UnitListView(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        console.log(res?.Unit);\r\n        setUnitList(res?.Unit);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    ProductListView(userdata?._id, userdata?.database)\r\n      .then((res) => {\r\n        console.log(res.Product);\r\n        let Items = res?.Product?.filter(\r\n          (ele) => ele?.addProductType == \"Item\"\r\n        );\r\n        let Products = res?.Product?.filter(\r\n          (ele) => ele?.addProductType == \"Product\"\r\n        );\r\n        if (Products?.length) {\r\n          setProductList(Products);\r\n        }\r\n        if (Items?.length) {\r\n          setitemList(Items);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        selecetedUnit: \"\",\r\n        AvailaleQty: null,\r\n        AvailaleQty: null,\r\n        Waste_Qty: null,\r\n        WastePrice: \"\",\r\n        availableQty: \"\",\r\n        transferQty: 1, //\r\n        RequiredQty: \"\",\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Size: \"\",\r\n        unitType: \"\",\r\n        stockTrxDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n  // let handlePartChange = (i, e) => {\r\n  //   let newFormValues = [...part];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setPart(newFormValues);\r\n  // };\r\n\r\n  const WareHousetoWareHouse = (e) => {\r\n    e.preventDefault();\r\n    // body: warehouse, productId, Size, unitType, transferQty, price, totalPrice;\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        unitType: ele?.unitType,\r\n        price: ele?.price,\r\n        Size: ele?.Size,\r\n        transferQty: ele?.transferQty,\r\n        totalPrice: ele?.totalprice,\r\n        currentStock: ele?.transferQty * ele?.Size,\r\n      };\r\n    });\r\n    let payload = {\r\n      productItems: Allproduct,\r\n      warehouseToId: WareHousetwo[0]?._id,\r\n      warehouseFromId: ProductinProduct[0]?._id,\r\n      stockTransferDate: StockTrxdate,\r\n      grandTotal: grandTotalAmt,\r\n      transferStatus: \"InProcess\",\r\n      created_by: userdata?._id,\r\n    };\r\n    console.log(payload);\r\n    WarehousetoWareHouseTrx(payload)\r\n      .then((res) => {\r\n        //   window.location.reload();\r\n        // history.goBack();\r\n        swal(\"Stock transerffered is Initiated\");\r\n\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Something Went Wrong\");\r\n      });\r\n  };\r\n  const handleAddCharges = (e) => {\r\n    toggleOne();\r\n    e.preventDefault();\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    let Allproduct = product?.map((ele, i) => {\r\n      return {\r\n        productId: ele?.productId,\r\n        unit: ele?.unitType,\r\n        price: ele?.price,\r\n        qty: ele?.RequiredQty,\r\n        unitType: ele?.selecetedUnit,\r\n        totalPrice: ele?.price * ele?.RequiredQty,\r\n      };\r\n    });\r\n    let AllWastagematerial = product?.map((ele, i) => {\r\n      return {\r\n        productId: ele?.productId,\r\n        unit: ele?.WasteUnit,\r\n        price: ele?.price,\r\n        qty: ele?.Waste_Qty,\r\n        unitType: ele?.WasteUnit,\r\n        totalPrice: ele?.price * ele?.Waste_Qty,\r\n      };\r\n    });\r\n    let ALL =\r\n      Number(grandTotalAmt) +\r\n      Number(ExtraCharges?.Other_Expenses) +\r\n      Number(ExtraCharges?.Other_charges) +\r\n      (Number(grandTotalAmt) * ExtraCharges?.GSTApplied) / 100;\r\n    // -\r\n    // Number(ExtraCharges?.discount);\r\n    let payload = {\r\n      created_by: userdata?._id,\r\n      product_name: ProductinProduct?._id,\r\n      productItems: Allproduct,\r\n      wastageItems: AllWastagematerial,\r\n      miscellaneousExpennses: ExtraCharges?.Other_Expenses,\r\n      gstApplied: ExtraCharges?.GSTApplied,\r\n      otherCharges: ExtraCharges?.Other_charges,\r\n      // discount: ExtraCharges?.discount,\r\n      grandTotal: ALL,\r\n    };\r\n    debugger;\r\n    _PostSave(Save_Producton_Process, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\"Production Process is Created\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList[0]);\r\n    setProductionProduct(selectedList[0]);\r\n    // setProductList(selectedList[0].productItems);\r\n  };\r\n  const onSelectone = (selectedList, selectedItem, index) => {\r\n    console.log(selectedList);\r\n\r\n    setProductionProduct(selectedList);\r\n    // const list = [...product];\r\n    let MySelectedwarehouseProduct = selectedList[0].productItems?.map(\r\n      (ele, i) => {\r\n        let myproduct = ele?.productId;\r\n        ele[\"Product_Title\"] = myproduct?.Product_Title;\r\n        ele[\"Product_id\"] = myproduct?._id;\r\n        ele[\"Product_MRP\"] = myproduct?.Product_MRP;\r\n        // ele[\"discount\"] = myproduct?.discount;\r\n        ele[\"transferQty\"] = myproduct?.transferQty;\r\n        ele[\"MIN_stockalert\"] = myproduct?.MIN_stockalert;\r\n      }\r\n    );\r\n\r\n    // console.log(selectedList[0]?.productItems);\r\n\r\n    setProductWTWList(selectedList[0]?.productItems);\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(index);\r\n  };\r\n  const onRemoveone = (selectedList, removedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(index);\r\n  };\r\n  const onSelect2 = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    setWareHousetwo(selectedList);\r\n  };\r\n  const onRemove2 = (selectedList, removedItem, index) => {\r\n    // console.log(selectedList);\r\n    // console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <Card>\r\n        {/* <LedgerPdf downloadFileName=\"CustomPdf\" rootElementId=\"testId\" />\r\n        <div id=\"testId\">This is A Downloadable Component</div> */}\r\n\r\n        <Row className=\"m-2\">\r\n          <Col lg=\"8\" md=\"8\" sm=\"8\" className=\"mb-2 mt-1\">\r\n            <div>\r\n              <h1 className=\"\">Start Production Process</h1>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"float-right\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"float-right mr-1\"\r\n                    color=\"primary\"\r\n                    onClick={() => history.goBack()}>\r\n                    {\" \"}\r\n                    Back\r\n                    {/* <FaPlus size={15} /> Create User */}\r\n                  </Button>\r\n                )}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row></Row>\r\n        <CardBody>\r\n          <Form className=\"m-1\" onSubmit={handleAddCharges}>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Choose Production Product </Label>\r\n\r\n                  <Multiselect\r\n                    required\r\n                    selectionLimit={1}\r\n                    // showCheckbox=\"true\"\r\n                    isObject=\"false\"\r\n                    options={ProductList} // Options to display in the dropdown\r\n                    // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                    onSelect={onSelect1} // Function will trigger on select event\r\n                    onRemove={onRemove1} // Function will trigger on remove event\r\n                    displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            {product &&\r\n              product?.map((product, index) => (\r\n                <Row className=\"\" key={index}>\r\n                  <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Choose item *</Label>\r\n                      <Multiselect\r\n                        required\r\n                        selectionLimit={1}\r\n                        // showCheckbox=\"true\"\r\n                        isObject=\"false\"\r\n                        options={itemList}\r\n                        // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                        onSelect={(selectedList, selectedItem) =>\r\n                          handleSelectionProduct(\r\n                            selectedList,\r\n                            selectedItem,\r\n                            index\r\n                          )\r\n                        }\r\n                        onRemove={(selectedList, selectedItem) => {\r\n                          handleRemoveSelected(\r\n                            selectedList,\r\n                            selectedItem,\r\n                            index\r\n                          );\r\n                        }}\r\n                        displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <label for=\"unit\">Select Unit</label>\r\n                      <select\r\n                        required\r\n                        className=\"form-control\"\r\n                        name=\"selecetedUnit\"\r\n                        placeholder=\"selecetedUnit\"\r\n                        value={product?.selecetedUnit}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProductTwo(e, index)\r\n                        }\r\n                        id=\"unit\">\r\n                        <option value=\"\">--select Unit--</option>\r\n                        <option value=\"kg\">Kilogram (kg)</option>\r\n                        <option value=\"Pcs\">Pieces (Pcs)</option>\r\n                        <option value=\"g\">Gram (g)</option>\r\n                        <option value=\"tonne\">Metric Ton (tonne)</option>\r\n                        <option value=\"m\">Meter (m)</option>\r\n                        <option value=\"cm\">Centimeter (cm)</option>\r\n                        <option value=\"mm\">Millimeter (mm)</option>\r\n                        <option value=\"in\">Inch (in)</option>\r\n                        <option value=\"ft\">Foot (ft)</option>\r\n                        <option value=\"m3\">Cubic Meter (m³)</option>\r\n                        <option value=\"L\">Liter (L)</option>\r\n                        <option value=\"ml\">Milliliter (ml)</option>\r\n                        <option value=\"s\">Second (s)</option>\r\n                        <option value=\"min\">Minute (min)</option>\r\n                        <option value=\"hr\">Hour (hr)</option>\r\n                        <option value=\"°C\">Celsius (°C)</option>\r\n                        <option value=\"°F\">Fahrenheit (°F)</option>\r\n                        <option value=\"Pa\">Pascal (Pa)</option>\r\n                        <option value=\"bar\">Bar (bar)</option>\r\n                        <option value=\"m/s\">Meters per Second (m/s)</option>\r\n                        <option value=\"km/h\">Kilometers per Hour (km/h)</option>\r\n                        <option value=\"A\">Ampere (A)</option>\r\n                        <option value=\"V\">Volt (V)</option>\r\n                        <option value=\"W\">Watt (W)</option>\r\n                        <option value=\"kW\">Kilowatt (kW)</option>\r\n                      </select>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>\r\n                        Price{product?.unitType && product?.unitType}\r\n                      </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"price\"\r\n                        readOnly\r\n                        aria-readonly\r\n                        onChange={(e) =>\r\n                          handleProductChangeProductone(e, index)\r\n                        }\r\n                        placeholder=\"Price\"\r\n                        value={product.price}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Req_Qty</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        min={0}\r\n                        step=\"any\"\r\n                        name=\"RequiredQty\"\r\n                        placeholder=\"Req_Qty\"\r\n                        value={product?.RequiredQty}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProductone(e, index)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  {/* <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Discount</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"discount\"\r\n                        readOnly\r\n                        placeholder=\"Discount\"\r\n                        value={product.discount}\r\n                      />\r\n                    </div>\r\n                  </Col> */}\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Total Price</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"totalprice\"\r\n                        readOnly\r\n                        placeholder=\"TtlPrice\"\r\n                        value={product?.price * product?.RequiredQty}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <label for=\"unit\">Waste Unit</label>\r\n                      <select\r\n                        required\r\n                        className=\"form-control\"\r\n                        name=\"WasteUnit\"\r\n                        placeholder=\"WasteUnit\"\r\n                        value={product?.WasteUnit}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProductTwo(e, index)\r\n                        }\r\n                        id=\"unit\">\r\n                        <option value=\"\">--select Unit--</option>\r\n                        <option value=\"kg\">Kilogram (kg)</option>\r\n                        <option value=\"Pcs\">Pieces (Pcs)</option>\r\n                        <option value=\"g\">Gram (g)</option>\r\n                        <option value=\"tonne\">Metric Ton (tonne)</option>\r\n                        <option value=\"m\">Meter (m)</option>\r\n                        <option value=\"cm\">Centimeter (cm)</option>\r\n                        <option value=\"mm\">Millimeter (mm)</option>\r\n                        <option value=\"in\">Inch (in)</option>\r\n                        <option value=\"ft\">Foot (ft)</option>\r\n                        <option value=\"m3\">Cubic Meter (m³)</option>\r\n                        <option value=\"L\">Liter (L)</option>\r\n                        <option value=\"ml\">Milliliter (ml)</option>\r\n                        <option value=\"s\">Second (s)</option>\r\n                        <option value=\"min\">Minute (min)</option>\r\n                        <option value=\"hr\">Hour (hr)</option>\r\n                        <option value=\"°C\">Celsius (°C)</option>\r\n                        <option value=\"°F\">Fahrenheit (°F)</option>\r\n                        <option value=\"Pa\">Pascal (Pa)</option>\r\n                        <option value=\"bar\">Bar (bar)</option>\r\n                        <option value=\"m/s\">Meters per Second (m/s)</option>\r\n                        <option value=\"km/h\">Kilometers per Hour (km/h)</option>\r\n                        <option value=\"A\">Ampere (A)</option>\r\n                        <option value=\"V\">Volt (V)</option>\r\n                        <option value=\"W\">Watt (W)</option>\r\n                        <option value=\"kW\">Kilowatt (kW)</option>\r\n                      </select>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Waste_Qty</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        min={0}\r\n                        step=\"any\"\r\n                        name=\"Waste_Qty\"\r\n                        placeholder=\"Waste_Qty\"\r\n                        value={product?.Waste_Qty}\r\n                        onChange={(e) =>\r\n                          handleProductChangeProductone(e, index)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"1\" md=\"1\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Total</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"WastePrice\"\r\n                        readOnly\r\n                        placeholder=\"WasteTotal\"\r\n                        value={product?.price * product?.Waste_Qty}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"btnStyle\">\r\n                      {index ? (\r\n                        <Button\r\n                          type=\"button\"\r\n                          color=\"danger\"\r\n                          className=\"button remove \"\r\n                          onClick={() => removeMoreProduct(index)}>\r\n                          - Remove\r\n                        </Button>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"btnStyle\">\r\n                      <Button\r\n                        className=\"ml-1 mb-1\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => addMoreProduct()}>\r\n                        + Add\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n            <Row>\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Discount</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"discount\"\r\n                          readOnly\r\n                          placeholder=\"Dissct\"\r\n                          value={product.discount}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Shipping Cost</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"Shipcst\"\r\n                          readOnly\r\n                          placeholder=\"Shipcst\"\r\n                          value={product.Shipping}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Tax</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"tax\"\r\n                          readOnly\r\n                          placeholder=\"Tax\"\r\n                          value={product.tax}\r\n                        />\r\n                      </div>\r\n                    </Col> */}\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                <div className=\" d-flex justify-content-end\">\r\n                  <Label className=\"pr-5\">\r\n                    Grand Total :{\" \"}\r\n                    <stron>\r\n                      {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                        ? 0\r\n                        : grandTotalAmt}{\" \"}\r\n                    </stron>\r\n                  </Label>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n      <Modal\r\n        style={{ maxWidth: \"1050px\" }}\r\n        isOpen={modalOne}\r\n        toggle={toggleOne}\r\n        {...args}>\r\n        <ModalHeader toggle={toggleOne}>Add Charges</ModalHeader>\r\n        <ModalBody>\r\n          <Form className=\"m-1\" onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Miscellaneous Expenses </Label>\r\n\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"Other_Expenses\"\r\n                    value={ExtraCharges?.Other_Expenses}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>GST Applied </Label>\r\n\r\n                  <CustomInput\r\n                    className=\"form-control\"\r\n                    name=\"GSTApplied\"\r\n                    value={ExtraCharges?.GSTApplied}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"select\">\r\n                    <option>--select--</option>\r\n                    <option value={18}>18</option>\r\n                    <option value={9}>9</option>\r\n                  </CustomInput>\r\n                </div>\r\n              </Col>\r\n              <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Other Charges </Label>\r\n\r\n                  <input\r\n                    className=\"form-control\"\r\n                    name=\"Other_charges\"\r\n                    value={ExtraCharges?.Other_charges}\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\"\">\r\n                  <Label>Discount </Label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    value={ExtraCharges?.discount}\r\n                    name=\"discount\"\r\n                    onChange={handleExtraCharge}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n              </Col> */}\r\n              {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                <div className=\" mt-2\">\r\n                  <Button color=\"primary\" onClick={handleSubmitCharges}>\r\n                    Add Charges\r\n                  </Button>\r\n                </div>\r\n              </Col> */}\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> SubTotal:</strong>{\" \"}\r\n                  {grandTotalAmt && grandTotalAmt == \"NaN\" ? 0 : grandTotalAmt}{\" \"}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> Miscellaneous:</strong>\r\n                  {ExtraCharges?.Other_Expenses}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> GST:</strong>{\" \"}\r\n                  {(ExtraCharges?.GSTApplied * grandTotalAmt) / 100}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> other:</strong>\r\n                  {ExtraCharges?.Other_charges}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> Discount: </strong>\r\n                  {ExtraCharges?.discount}\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <strong> GrandTotal:</strong>\r\n\r\n                  {(\r\n                    Number(grandTotalAmt) +\r\n                    Number(ExtraCharges?.Other_Expenses) +\r\n                    Number(ExtraCharges?.Other_charges) +\r\n                    (Number(grandTotalAmt) * ExtraCharges?.GSTApplied) / 100\r\n                  )?.toFixed(2)}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>{\" \"}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter></ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductionProcess;\r\n"],"sourceRoot":""}