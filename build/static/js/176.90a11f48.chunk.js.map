{"version":3,"sources":["views/apps/freshlist/house/CheckPermission.js","views/apps/freshlist/customer/notes/DebitView.js","views/apps/freshlist/customer/notes/CreditNoteList.js","assets/img/profile/pages/logomain.png","../node_modules/reactstrap/es/FormGroup.js"],"names":["CheckPermission","props","pageparmission","JSON","parse","localStorage","getItem","newparmisson","rolename","rolePermission","find","value","pagename","View","permission","includes","Create","Edit","Delete","DebitView","ViewOneData","useState","formData","setFormData","product","productId","qty","price","totalprice","setProduct","useContext","UserContext","useEffect","console","log","className","fullName","lg","md","sm","disabled","type","placeholder","name","productItems","map","ele","index","key","Product_Title","HSN_Code","i","SelectedColums","CreditNoteList","toggleModal","setState","prevState","modalone","LookupviewStart","modal","handleChangeView","data","types","ViewOneUserView","EditOneUserView","EditOneData","toggleDropdown","isOpen","onGridReady","params","gridApi","api","gridColumnApi","columnApi","gridRef","current","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleChangeHeader","e","target","checked","push","delindex","findIndex","headerName","splice","exportToPDF","csvData","getDataAsCsv","processCellCallback","processCell","parseCsv","parsedData","generatePDF","error","exportToExcel","CsvData","convertCsvToExcel","blob","downloadExcelFile","convertCSVtoExcel","Papa","complete","result","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","shiftElementUp","currentIndex","state","Arrindex","myArrayCopy","SelectedcolumnDefs","elementToMove","shiftElementDown","length","convertCsvToXml","rows","xmlString","forEach","row","cell","Blob","link","document","createElement","href","URL","createObjectURL","download","click","HandleSetVisibleField","preventDefault","setColumnDefs","columnDefs","rowData","setItem","stringify","HeadingRightShift","updatedSelectedColumnDefs","Set","item","handleLeftShift","SelectedCols","slice","React","createRef","InsiderPermissions","ViewData","setMySelectedarr","paginationPageSize","AllcolumnDefs","defaultColDef","sortable","enablePivot","enableValue","resizable","suppressMenu","valueGetter","field","width","filter","cellRendererFramework","size","color","onClick","createdAt","split","userId","firstName","totalAmount","InsidePermissions","this","context","UserInformatio","userid","_id","CreditnoteOrderList","then","res","CreditNote","userHeading","catch","err","id","swal","buttons","cancel","text","Delete_targetINlist","selectedData","getSelectedRows","updateRowData","remove","Promise","resolve","reject","header","skipEmptyLines","Error","pdfsize","Object","keys","doc","jsPDF","setTextColor","tableData","values","addImage","Logo","date","Date","setCreationDate","autoTable","head","body","startY","save","dynamicTyping","worksheet","workbook","excelBuffer","bookType","url","window","a","appendChild","revokeObjectURL","style","fontWeight","cursor","title","position","zIndex","exportDataAsCsv","marginTop","tag","right","onChange","Consumer","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","ref","domLayout","toggle","maxWidth","xl","xs","class","backgroundColor","element","backdrop","fullscreen","Component","contextType","module","exports","_excluded","propTypes","children","PropTypes","node","bool","check","inline","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","defaultProps"],"mappings":"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","file":"static/js/176.90a11f48.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"../../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../../context/Context\";\r\n\r\nconst DebitView = ({ ViewOneData }) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\", //\r\n      productId: \"\",\r\n      qty: 1, //\r\n      price: \"\", //\r\n      totalprice: \"\", //\r\n      //  grandTotal: \"\",\r\n    },\r\n  ]);\r\n  const Context = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n\r\n  useEffect(() => {\r\n    console.log(product);\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    setProduct(ViewOneData);\r\n    setFormData(ViewOneData);\r\n    console.log(ViewOneData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\">\r\n            <Row className=\"mb-2\">\r\n              {formData?.fullName && formData?.fullName ? (\r\n                <>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>FullName</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Full Name\"\r\n                        name=\"FullName\"\r\n                        value={formData?.fullName}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </>\r\n              ) : null}\r\n\r\n              {product &&\r\n                product?.productItems?.map((ele, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>Product Name</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          placeholder=\"ProductName\"\r\n                          name={ele?.productId?.Product_Title}\r\n                          value={ele?.productId?.Product_Title}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          placeholder=\"Price\"\r\n                          name={ele?.price}\r\n                          value={ele?.price}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>Size</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          placeholder=\"Size\"\r\n                          name={ele?.qty}\r\n                          value={ele?.qty}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>GST Rate</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          placeholder=\"Price\"\r\n                          name={ele?.productId[\"GST Rate\"]}\r\n                          value={ele?.productId[\"GST Rate\"]}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>HST Code</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          placeholder=\"HSTCode\"\r\n                          name={ele?.productId.HSN_Code}\r\n                          value={ele?.productId.HSN_Code}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DebitView;\r\n","import React, { useRef } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { ImDownload } from \"react-icons/im\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport Papa from \"papaparse\";\r\nimport { Eye, ChevronDown, Edit, CornerDownLeft } from \"react-feather\";\r\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\r\nimport DebitView from \"./DebitView\";\r\nimport Logo from \"../../../../../assets/img/profile/pages/logomain.png\";\r\nimport { ContextLayout } from \"../../../../../utility/context/Layout\";\r\nimport \"../../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  FaArrowAltCircleLeft,\r\n  FaArrowAltCircleRight,\r\n  FaFilter,\r\n} from \"react-icons/fa\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  CreditnoteOrderList,\r\n  Delete_targetINlist,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  BsCloudDownloadFill,\r\n  BsFillArrowDownSquareFill,\r\n  BsFillArrowUpSquareFill,\r\n} from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport UserContext from \"../../../../../context/Context\";\r\nimport { CheckPermission } from \"../../house/CheckPermission\";\r\n\r\nconst SelectedColums = [];\r\n\r\nclass CreditNoteList extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridRef = React.createRef();\r\n    this.gridApi = null;\r\n    this.state = {\r\n      isOpen: false,\r\n      Arrindex: \"\",\r\n      rowData: [],\r\n      InsiderPermissions: {},\r\n      modal: false,\r\n      modalone: false,\r\n      ViewData: {},\r\n      setMySelectedarr: [],\r\n      SelectedCols: [],\r\n      paginationPageSize: 5,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      AllcolumnDefs: [],\r\n      SelectedcolumnDefs: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        enablePivot: true,\r\n        enableValue: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: \"UID\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          width: 80,\r\n          filter: true,\r\n        },\r\n\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"transactions\",\r\n          width: 180,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                {this.state.InsiderPermissions &&\r\n                  this.state.InsiderPermissions?.View && (\r\n                    <Eye\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"green\"\r\n                      onClick={() => {\r\n                        this.handleChangeView(params?.data, \"readonly\");\r\n                      }}\r\n                    />\r\n                  )}\r\n                {/* <Edit\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"blue\"\r\n                  onClick={() =>\r\n                    this.props.history.push({\r\n                      pathname: `/app/AJgroup/order/editPurchase/${params.data?._id}`,\r\n                      state: params.data,\r\n                    })\r\n                  }\r\n                /> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"order Creation date\",\r\n          field: \"createdAt\",\r\n          filter: true,\r\n          resizable: true,\r\n          width: 230,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <div>\r\n                  <span>{params.data?.createdAt?.split(\"T\")[0]}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Party name\",\r\n          field: \"userId.firstName\",\r\n          filter: true,\r\n          width: 220,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.userId?.firstName}</span>\r\n              </div>\r\n            );\r\n          },\r\n          // valueGetter: (params) => {\r\n          //   if (\r\n          //     params.data?.productItems &&\r\n          //     params.data?.productItems?.length > 0\r\n          //   ) {\r\n          //     return params?.data?.productItems?.map((val) => {\r\n          //       return val?.productId?.Product_Title;\r\n          //     });\r\n          //   }\r\n          //   return null;\r\n          // },\r\n        },\r\n\r\n        // {\r\n        //   headerName: \"GST Rate\",\r\n        //   field: \"productId\",\r\n        //   filter: true,\r\n        //   width: 220,\r\n        //   valueGetter: (params) => {\r\n        //     if (\r\n        //       params.data?.productItems &&\r\n        //       params.data?.productItems?.length > 0\r\n        //     ) {\r\n        //       return params?.data?.productItems?.map((val) => {\r\n        //         return val?.productId[\"GST Rate\"];\r\n        //       });\r\n        //     }\r\n        //     return null;\r\n        //   },\r\n        // },\r\n\r\n        // {\r\n        //   headerName: \"Product MRP\",\r\n        //   field: \"productId\",\r\n        //   filter: true,\r\n        //   width: 180,\r\n        //   valueGetter: (params) => {\r\n        //     if (\r\n        //       params.data.productItems &&\r\n        //       params.data.productItems.length > 0\r\n        //     ) {\r\n        //       return params?.data?.productItems?.map((val) => {\r\n        //         return val?.productId?.Product_MRP;\r\n        //       });\r\n        //     }\r\n        //     return null;\r\n        //   },\r\n        // },\r\n        {\r\n          headerName: \"Total Amount\",\r\n          field: \"totalAmount\",\r\n          filter: true,\r\n          width: 220,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.totalAmount}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        // {\r\n        //   headerName: \"Status\",\r\n        //   field: \"status\",\r\n        //   filter: true,\r\n        //   width: 150,\r\n        //   cellRendererFramework: params => {\r\n        //     return params.value == \"comleted\" ? (\r\n        //       <div className=\"badge badge-pill badge-success\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     ) : params.value == \"pending\" ? (\r\n        //       <div className=\"badge badge-pill badge-warning\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     ) : (\r\n        //       <div className=\"badge badge-pill badge-success\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n      ],\r\n    };\r\n  }\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modalone: !prevState.modalone,\r\n    }));\r\n  };\r\n  LookupviewStart = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  handleChangeView = (data, types) => {\r\n    let type = types;\r\n    if (type == \"readonly\") {\r\n      this.setState({ ViewOneUserView: true });\r\n      this.setState({ ViewOneData: data });\r\n    } else {\r\n      this.setState({ EditOneUserView: true });\r\n      this.setState({ EditOneData: data });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const UserInformation = this.context?.UserInformatio;\r\n    const InsidePermissions = CheckPermission(\"CreditNote\");\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let userid = pageparmission?._id;\r\n    CreditnoteOrderList(userid)\r\n      .then((res) => {\r\n        console.log(res?.CreditNote);\r\n\r\n        if (res?.CreditNote?.length) {\r\n          this.setState({ rowData: res?.CreditNote });\r\n        }\r\n        this.setState({ AllcolumnDefs: this.state.columnDefs });\r\n        this.setState({ SelectedCols: this.state.columnDefs });\r\n\r\n        let userHeading = JSON.parse(\r\n          localStorage.getItem(\"CreditNoteListshow\")\r\n        );\r\n        if (userHeading?.length) {\r\n          this.setState({ columnDefs: userHeading });\r\n          this.gridApi.setColumnDefs(userHeading);\r\n          this.setState({ SelectedcolumnDefs: userHeading });\r\n        } else {\r\n          this.setState({ columnDefs: this.state.columnDefs });\r\n          this.setState({ SelectedcolumnDefs: this.state.columnDefs });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  toggleDropdown = () => {\r\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          Delete_targetINlist(id)\r\n            .then((res) => {\r\n              let selectedData = this.gridApi.getSelectedRows();\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridRef.current = params.api;\r\n\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleChangeHeader = (e, value, index) => {\r\n    let check = e.target.checked;\r\n    if (check) {\r\n      SelectedColums?.push(value);\r\n    } else {\r\n      const delindex = SelectedColums?.findIndex(\r\n        (ele) => ele?.headerName === value?.headerName\r\n      );\r\n\r\n      SelectedColums?.splice(delindex, 1);\r\n    }\r\n  };\r\n  parseCsv(csvData) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: (result) => {\r\n          if (result.data && result.data.length > 0) {\r\n            resolve(result.data);\r\n          } else {\r\n            reject(new Error(\"No data found in the CSV\"));\r\n          }\r\n        },\r\n        error: (error) => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  generatePDF(parsedData) {\r\n    let pdfsize = [Object.keys(parsedData[0])][0].length;\r\n    let size = pdfsize > 15 ? \"a1\" : pdfsize < 14 > 10 ? \"a3\" : \"a4\";\r\n\r\n    const doc = new jsPDF(\"landscape\", \"mm\", size, false);\r\n    doc.setTextColor(5, 87, 97);\r\n    const tableData = parsedData.map((row) => Object.values(row));\r\n    doc.addImage(Logo, \"JPEG\", 10, 10, 50, 30);\r\n    let date = new Date();\r\n    doc.setCreationDate(date);\r\n    doc.text(\"UserAccount\", 14, 51);\r\n    doc.autoTable({\r\n      head: [Object.keys(parsedData[0])],\r\n      body: tableData,\r\n      startY: 60,\r\n    });\r\n\r\n    doc.save(\"UserList.pdf\");\r\n  }\r\n\r\n  exportToPDF = async () => {\r\n    const csvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    try {\r\n      const parsedData = await this.parseCsv(csvData);\r\n      this.generatePDF(parsedData);\r\n    } catch (error) {\r\n      console.error(\"Error parsing CSV:\", error);\r\n    }\r\n  };\r\n  processCell = (params) => {\r\n    return params.value;\r\n  };\r\n\r\n  convertCsvToExcel(csvData) {\r\n    return new Promise((resolve) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        complete: function (result) {\r\n          const worksheet = XLSX.utils.json_to_sheet(result.data);\r\n          const workbook = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n          const excelBuffer = XLSX.write(workbook, {\r\n            bookType: \"xlsx\",\r\n            type: \"array\",\r\n          });\r\n          const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          resolve(blob);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  downloadExcelFile(blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"Userlist.xlsx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  exportToExcel = async (e) => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    const blob = await this.convertCsvToExcel(CsvData);\r\n    this.downloadExcelFile(blob);\r\n  };\r\n\r\n  convertCSVtoExcel = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: (result) => {\r\n        const ws = XLSX.utils.json_to_sheet(result.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelType = \"xls\";\r\n        XLSX.writeFile(wb, `UserList.${excelType}`);\r\n      },\r\n    });\r\n  };\r\n\r\n  shiftElementUp = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex > 0) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex - 1 });\r\n      myArrayCopy.splice(currentIndex - 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n\r\n  shiftElementDown = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex < this.state.SelectedcolumnDefs.length - 1) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex + 1 });\r\n      myArrayCopy.splice(currentIndex + 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n  convertCsvToXml = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: (result) => {\r\n        const rows = result.data;\r\n\r\n        // Create XML\r\n        let xmlString = \"<root>\\n\";\r\n\r\n        rows.forEach((row) => {\r\n          xmlString += \"  <row>\\n\";\r\n          row.forEach((cell, index) => {\r\n            xmlString += `    <field${index + 1}>${cell}</field${index + 1}>\\n`;\r\n          });\r\n          xmlString += \"  </row>\\n\";\r\n        });\r\n\r\n        xmlString += \"</root>\";\r\n        const blob = new Blob([xmlString], { type: \"text/xml\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"output.xml\";\r\n        link.click();\r\n      },\r\n    });\r\n  };\r\n\r\n  HandleSetVisibleField = (e) => {\r\n    e.preventDefault();\r\n    debugger;\r\n    this.gridApi.setColumnDefs(this.state.SelectedcolumnDefs);\r\n    this.setState({ columnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ SelectedcolumnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ rowData: this.state.rowData });\r\n    localStorage.setItem(\r\n      \"CreditNoteListshow\",\r\n      JSON.stringify(this.state.SelectedcolumnDefs)\r\n    );\r\n    this.LookupviewStart();\r\n  };\r\n\r\n  HeadingRightShift = () => {\r\n    const updatedSelectedColumnDefs = [\r\n      ...new Set([\r\n        ...this.state.SelectedcolumnDefs.map((item) => JSON.stringify(item)),\r\n        ...SelectedColums.map((item) => JSON.stringify(item)),\r\n      ]),\r\n    ].map((item) => JSON.parse(item));\r\n    this.setState({\r\n      SelectedcolumnDefs: [...new Set(updatedSelectedColumnDefs)], // Update the state with the combined array\r\n    });\r\n  };\r\n  handleLeftShift = () => {\r\n    let SelectedCols = this.state.SelectedcolumnDefs?.slice();\r\n    let delindex = this.state.Arrindex; /* Your delete index here */\r\n\r\n    if (SelectedCols && delindex >= 0) {\r\n      const splicedElement = SelectedCols?.splice(delindex, 1); // Remove the element\r\n\r\n      this.setState({\r\n        SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n      SelectedcolumnDefs,\r\n      isOpen,\r\n      SelectedCols,\r\n      AllcolumnDefs,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Col className=\"app-user-list\">\r\n          {this.state.EditOneUserView && this.state.EditOneUserView ? (\r\n            <Row className=\"card\">\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end p-1\">\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({ EditOneUserView: false });\r\n                    }}\r\n                    color=\"danger\"\r\n                    size=\"sm\">\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              {/* <EditAccount EditOneData={this.state.EditOneData} /> */}\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {this.state.ViewOneUserView && this.state.ViewOneUserView ? (\r\n                <>\r\n                  <Row className=\"card\">\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-end p-1\">\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.setState({ ViewOneUserView: false });\r\n                          }}\r\n                          color=\"danger\"\r\n                          size=\"sm\">\r\n                          Back\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <DebitView ViewOneData={this.state.ViewOneData} />\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col sm=\"12\">\r\n                    <Card>\r\n                      <Row className=\"ml-2 mt-2 mr-2\">\r\n                        <Col>\r\n                          <h1\r\n                            className=\"float-left\"\r\n                            style={{ fontWeight: \"600\" }}>\r\n                            CreditNote List\r\n                          </h1>\r\n                        </Col>\r\n\r\n                        {this.state.InsiderPermissions &&\r\n                          this.state.InsiderPermissions?.View && (\r\n                            <Col>\r\n                              <span className=\"mx-1\">\r\n                                <FaFilter\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  title=\"filter coloumn\"\r\n                                  size=\"25px\"\r\n                                  onClick={this.LookupviewStart}\r\n                                  color=\"#39cccc\"\r\n                                  className=\"float-right\"\r\n                                />\r\n                              </span>\r\n                              <span className=\"mx-1\">\r\n                                <div className=\"dropdown-container float-right\">\r\n                                  <ImDownload\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    title=\"download file\"\r\n                                    size=\"25px\"\r\n                                    className=\"dropdown-button \"\r\n                                    color=\"#39cccc\"\r\n                                    onClick={this.toggleDropdown}\r\n                                  />\r\n                                  {isOpen && (\r\n                                    <div\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        zIndex: \"1\",\r\n                                      }}\r\n                                      className=\"dropdown-content dropdownmy\">\r\n                                      <h5\r\n                                        onClick={() => this.exportToPDF()}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive mt-1\">\r\n                                        .PDF\r\n                                      </h5>\r\n                                      <h5\r\n                                        onClick={() =>\r\n                                          this.gridApi.exportDataAsCsv()\r\n                                        }\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive\">\r\n                                        .CSV\r\n                                      </h5>\r\n                                      <h5\r\n                                        onClick={this.convertCSVtoExcel}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive\">\r\n                                        .XLS\r\n                                      </h5>\r\n                                      <h5\r\n                                        onClick={this.exportToExcel}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive\">\r\n                                        .XLSX\r\n                                      </h5>\r\n                                      <h5\r\n                                        onClick={() => this.convertCsvToXml()}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        className=\" mx-1 myactive\">\r\n                                        .XML\r\n                                      </h5>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </span>\r\n                              {/* <span>\r\n                            <Route\r\n                              render={({ history }) => (\r\n                                <Badge\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"float-right mr-1\"\r\n                                  color=\"primary\"\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      \"/app/AJgroup/order/AddPurchaseOrder\"\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <FaPlus size={15} /> Add Purchase Order\r\n                                </Badge>\r\n                              )}\r\n                            />\r\n                          </span> */}\r\n                            </Col>\r\n                          )}\r\n                      </Row>\r\n                      <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n                        {this.state.rowData === null ? null : (\r\n                          <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                            <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                              <div className=\"mb-1\">\r\n                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                  <DropdownToggle tag=\"div\">\r\n                                    {this.gridApi\r\n                                      ? this.state.currenPageSize\r\n                                      : \"\" * this.state.getPageSize -\r\n                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {this.state.rowData?.length -\r\n                                      this.state.currenPageSize *\r\n                                        this.state.getPageSize >\r\n                                    0\r\n                                      ? this.state.currenPageSize *\r\n                                        this.state.getPageSize\r\n                                      : this.state.rowData?.length}{\" \"}\r\n                                    of {this.state.rowData?.length}\r\n                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu right>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(5)}>\r\n                                      5\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(20)}>\r\n                                      20\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(50)}>\r\n                                      50\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(100)}>\r\n                                      100\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(134)}>\r\n                                      134\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap justify-content-end mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                  <Input\r\n                                    placeholder=\"search Item here...\"\r\n                                    onChange={(e) =>\r\n                                      this.updateSearchQuery(e.target.value)\r\n                                    }\r\n                                    value={this.state.value}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ContextLayout.Consumer className=\"ag-theme-alpine\">\r\n                              {(context) => (\r\n                                <AgGridReact\r\n                                  id=\"myAgGrid\"\r\n                                  gridOptions={this.gridOptions}\r\n                                  rowSelection=\"multiple\"\r\n                                  defaultColDef={defaultColDef}\r\n                                  columnDefs={columnDefs}\r\n                                  rowData={rowData}\r\n                                  onGridReady={this.onGridReady}\r\n                                  colResizeDefault={\"shift\"}\r\n                                  animateRows={true}\r\n                                  floatingFilter={false}\r\n                                  pagination={true}\r\n                                  paginationPageSize={\r\n                                    this.state.paginationPageSize\r\n                                  }\r\n                                  pivotPanelShow=\"always\"\r\n                                  enableRtl={context.state.direction === \"rtl\"}\r\n                                  ref={this.gridRef} // Attach the ref to the grid\r\n                                  domLayout=\"autoHeight\" // Adjust layout as needed\r\n                                />\r\n                              )}\r\n                            </ContextLayout.Consumer>\r\n                          </div>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.LookupviewStart}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}>\r\n          <ModalHeader toggle={this.LookupviewStart}>Change Fileds</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"12\" xl=\"4\" xs=\"12\">\r\n                <h4>Available Columns</h4>\r\n                <div className=\"mainshffling\">\r\n                  <div class=\"ex1\">\r\n                    {AllcolumnDefs &&\r\n                      AllcolumnDefs?.map((ele, i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              onClick={(e) =>\r\n                                this.handleChangeHeader(e, ele, i)\r\n                              }\r\n                              key={i}\r\n                              className=\"mycustomtag mt-1\">\r\n                              <span className=\"mt-1\">\r\n                                <h5\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"allfields\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    // checked={check && check}\r\n                                    className=\"mx-1\"\r\n                                  />\r\n\r\n                                  {ele?.headerName}\r\n                                </h5>\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"12\" xl=\"2\" xs=\"12\" className=\"colarrowbtn\">\r\n                <div className=\"mainarrowbtn\">\r\n                  <div style={{ cursor: \"pointer\" }}>\r\n                    <FaArrowAltCircleRight\r\n                      onClick={this.HeadingRightShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ cursor: \"pointer\" }} className=\"my-2\">\r\n                    <FaArrowAltCircleLeft\r\n                      onClick={this.handleLeftShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\" xl=\"6\" xs=\"12\">\r\n                <Row>\r\n                  <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n                    <h4>Visible Columns</h4>\r\n                    <div className=\"mainshffling\">\r\n                      <div class=\"ex1\">\r\n                        {SelectedcolumnDefs &&\r\n                          SelectedcolumnDefs?.map((ele, i) => {\r\n                            return (\r\n                              <>\r\n                                <div key={i} className=\"mycustomtag mt-1\">\r\n                                  <span className=\"mt-1\">\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.setState({ Arrindex: i })\r\n                                      }\r\n                                      style={{\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor: `${\r\n                                          this.state.Arrindex === i\r\n                                            ? \"#1877f2\"\r\n                                            : \"\"\r\n                                        }`,\r\n                                      }}\r\n                                      className=\"allfields\">\r\n                                      <IoMdRemoveCircleOutline\r\n                                        onClick={() => {\r\n                                          const SelectedCols =\r\n                                            this.state.SelectedcolumnDefs?.slice();\r\n                                          const delindex =\r\n                                            SelectedCols?.findIndex(\r\n                                              (element) =>\r\n                                                element?.headerName ==\r\n                                                ele?.headerName\r\n                                            );\r\n\r\n                                          if (SelectedCols && delindex >= 0) {\r\n                                            const splicedElement =\r\n                                              SelectedCols?.splice(delindex, 1); // Remove the element\r\n                                            // splicedElement contains the removed element, if needed\r\n\r\n                                            this.setState({\r\n                                              SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n                                            });\r\n                                          }\r\n                                        }}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        size=\"25px\"\r\n                                        color=\"red\"\r\n                                        className=\"mr-1\"\r\n                                      />\r\n\r\n                                      {ele?.headerName}\r\n                                    </h5>\r\n                                  </span>\r\n                                </div>\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"updownbtn justify-content-center\">\r\n                      <div>\r\n                        <BsFillArrowUpSquareFill\r\n                          className=\"arrowassign mb-1\"\r\n                          size=\"30px\"\r\n                          onClick={this.shiftElementUp}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillArrowDownSquareFill\r\n                          onClick={this.shiftElementDown}\r\n                          className=\"arrowassign\"\r\n                          size=\"30px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  {/* <Button onClick={this.HandleSetVisibleField} color=\"primary\">\r\n                    Submit\r\n                  </Button> */}\r\n\r\n                  <Badge\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"\"\r\n                    color=\"primary\"\r\n                    onClick={this.HandleSetVisibleField}>\r\n                    Submit\r\n                  </Badge>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.modalone}\r\n          toggle={this.toggleModal}\r\n          className=\"modal-dialog modal-xl\"\r\n          // className=\"modal-dialog modal-lg\"\r\n          size=\"lg\"\r\n          backdrop={true}\r\n          fullscreen={true}>\r\n          <ModalHeader toggle={this.toggleModal}>View Details</ModalHeader>\r\n          <ModalBody className=\"myproducttable\">\r\n            {/* <div className=\"container\"> */}\r\n            {/* <TargetAssignedOne ViewData={this.state.ViewData} /> */}\r\n            {/* </div> */}\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default CreditNoteList;\r\n","module.exports = __webpack_public_path__ + \"static/media/logomain.cee4d0c2.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}