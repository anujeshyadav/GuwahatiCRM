{"version":3,"sources":["views/apps/freshlist/customer/notes/DebitView.js","views/apps/freshlist/customer/notes/DebitNoteList.js","../node_modules/reactstrap/es/FormGroup.js","assets/img/profile/pages/logomain.png"],"names":["DebitView","ViewOneData","useState","formData","setFormData","product","productId","qty","price","totalprice","setProduct","useContext","UserContext","useEffect","console","log","className","fullName","lg","md","sm","disabled","type","placeholder","name","value","productItems","map","ele","index","key","Product_Title","HSN_Code","i","SelectedColums","DebitNoteList","props","toggleModal","setState","prevState","modalone","LookupviewStart","modal","handleChangeView","data","types","ViewOneUserView","EditOneUserView","EditOneData","toggleDropdown","isOpen","onGridReady","params","gridApi","api","gridColumnApi","columnApi","gridRef","current","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleChangeHeader","e","target","checked","push","delindex","findIndex","headerName","splice","exportToPDF","csvData","getDataAsCsv","processCellCallback","processCell","parseCsv","parsedData","generatePDF","error","exportToExcel","CsvData","convertCsvToExcel","blob","downloadExcelFile","convertCSVtoExcel","Papa","parse","complete","result","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","shiftElementUp","currentIndex","state","Arrindex","myArrayCopy","SelectedcolumnDefs","elementToMove","shiftElementDown","length","convertCsvToXml","rows","xmlString","forEach","row","cell","Blob","link","document","createElement","href","URL","createObjectURL","download","click","HandleSetVisibleField","preventDefault","setColumnDefs","columnDefs","rowData","localStorage","setItem","JSON","stringify","HeadingRightShift","updatedSelectedColumnDefs","Set","item","handleLeftShift","SelectedCols","slice","React","createRef","ViewData","setMySelectedarr","paginationPageSize","AllcolumnDefs","defaultColDef","sortable","enablePivot","enableValue","resizable","suppressMenu","valueGetter","field","width","filter","cellRendererFramework","size","color","onClick","purchaseOrderId","totalAmount","userId","firstName","lastName","email","mobileNumber","createdAt","this","context","UserInformatio","userInfo","getItem","_id","DebitnoteOrderList","then","res","DebitNote","userHeading","catch","err","id","swal","buttons","cancel","text","Delete_targetINlist","selectedData","getSelectedRows","updateRowData","remove","Promise","resolve","reject","header","skipEmptyLines","Error","pdfsize","Object","keys","doc","jsPDF","setTextColor","tableData","values","addImage","Logo","date","Date","setCreationDate","autoTable","head","body","startY","save","dynamicTyping","worksheet","workbook","excelBuffer","bookType","url","window","a","appendChild","revokeObjectURL","style","fontWeight","cursor","title","position","zIndex","border","backgroundColor","exportDataAsCsv","marginTop","tag","right","onChange","Consumer","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","ref","domLayout","toggle","maxWidth","xl","xs","class","element","backdrop","fullscreen","Component","contextType","_excluded","propTypes","children","PropTypes","node","bool","check","inline","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","defaultProps","module","exports"],"mappings":"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","file":"static/js/179.50133a54.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"../../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../../context/Context\";\r\n\r\nconst DebitView = ({ ViewOneData }) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\", //\r\n      productId: \"\",\r\n      qty: 1, //\r\n      price: \"\", //\r\n      totalprice: \"\", //\r\n      //  grandTotal: \"\",\r\n    },\r\n  ]);\r\n  const Context = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n\r\n  useEffect(() => {\r\n    console.log(product);\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    setProduct(ViewOneData);\r\n    setFormData(ViewOneData);\r\n    console.log(ViewOneData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\">\r\n            <Row className=\"mb-2\">\r\n              {formData?.fullName && formData?.fullName ? (\r\n                <>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>FullName</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        placeholder=\"Full Name\"\r\n                        name=\"FullName\"\r\n                        value={formData?.fullName}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </>\r\n              ) : null}\r\n\r\n              {product &&\r\n                product?.productItems?.map((ele, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>Product Name</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          placeholder=\"ProductName\"\r\n                          name={ele?.productId?.Product_Title}\r\n                          value={ele?.productId?.Product_Title}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          placeholder=\"Price\"\r\n                          name={ele?.price}\r\n                          value={ele?.price}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>Size</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          placeholder=\"Size\"\r\n                          name={ele?.qty}\r\n                          value={ele?.qty}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>GST Rate</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          placeholder=\"Price\"\r\n                          name={ele?.productId[\"GST Rate\"]}\r\n                          value={ele?.productId[\"GST Rate\"]}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <Label>HST Code</Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"number\"\r\n                          placeholder=\"HSTCode\"\r\n                          name={ele?.productId.HSN_Code}\r\n                          value={ele?.productId.HSN_Code}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DebitView;\r\n","import React, { useRef } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ImDownload } from \"react-icons/im\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport Papa from \"papaparse\";\r\nimport { Eye, ChevronDown, Edit, CornerDownLeft } from \"react-feather\";\r\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\r\nimport DebitView from \"./DebitView\";\r\nimport Logo from \"../../../../../assets/img/profile/pages/logomain.png\";\r\nimport { ContextLayout } from \"../../../../../utility/context/Layout\";\r\nimport \"../../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  FaArrowAltCircleLeft,\r\n  FaArrowAltCircleRight,\r\n  FaFilter,\r\n} from \"react-icons/fa\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  DebitnoteOrderList,\r\n  Delete_targetINlist,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  BsCloudDownloadFill,\r\n  BsFillArrowDownSquareFill,\r\n  BsFillArrowUpSquareFill,\r\n} from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport UserContext from \"../../../../../context/Context\";\r\n\r\nconst SelectedColums = [];\r\n\r\nclass DebitNoteList extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridRef = React.createRef();\r\n    this.gridApi = null;\r\n    this.state = {\r\n      isOpen: false,\r\n      Arrindex: \"\",\r\n      rowData: [],\r\n      modal: false,\r\n      modalone: false,\r\n      ViewData: {},\r\n      setMySelectedarr: [],\r\n      SelectedCols: [],\r\n      paginationPageSize: 5,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      AllcolumnDefs: [],\r\n      SelectedcolumnDefs: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        enablePivot: true,\r\n        enableValue: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: \"UID\",\r\n          valueGetter: \"node.rowIndex + 1\",\r\n          field: \"node.rowIndex + 1\",\r\n          width: 80,\r\n          filter: true,\r\n        },\r\n\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"transactions\",\r\n          width: 180,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                <Eye\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"green\"\r\n                  onClick={() => {\r\n                    this.handleChangeView(params.data, \"readonly\");\r\n                  }}\r\n                />\r\n                {/* <Edit\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"blue\"\r\n                  onClick={() =>\r\n                    this.props.history.push({\r\n                      pathname: `/app/AJgroup/order/editPurchase/${params.data?._id}`,\r\n                      state: params.data,\r\n                    })\r\n                  }\r\n                /> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"Product Name\",\r\n          field: \"productItems\",\r\n          filter: true,\r\n          width: 220,\r\n          cellRendererFramework: (params) => {\r\n            console.log(params.data);\r\n            return (\r\n              <div>\r\n                <span>\r\n                  {params.data?.productItems?.length &&\r\n                    params.data?.productItems?.length}{\" \"}\r\n                  Product\r\n                </span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Order Id\",\r\n          field: \"purchaseOrderId\",\r\n          filter: true,\r\n          width: 220,\r\n          cellRendererFramework: (params) => {\r\n            console.log(params.data);\r\n            return (\r\n              <div>\r\n                <span>\r\n                  {params.data?.purchaseOrderId && params.data?.purchaseOrderId}{\" \"}\r\n                </span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"Total Amount\",\r\n          field: \"totalAmount\",\r\n          filter: true,\r\n          width: 260,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex justify-content-center mt-1 font-weight-500\">\r\n                <Badge color=\"primary\">{params.data?.totalAmount}</Badge>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Name\",\r\n          field: \"userId.firstName\",\r\n          filter: true,\r\n          width: 220,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.userId?.firstName}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Name\",\r\n          field: \"userId.lastName\",\r\n          filter: true,\r\n          width: 220,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.userId?.lastName}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Name\",\r\n          field: \"userId.email\",\r\n          filter: true,\r\n          width: 220,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.userId?.email}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Mobile Number\",\r\n          field: \"userId.mobileNumber\",\r\n          filter: true,\r\n          width: 220,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.userId?.mobileNumber}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        {\r\n          headerName: \"createdAt\",\r\n          field: \"createdAt\",\r\n          filter: true,\r\n          width: 150,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div>\r\n                <span>{params.data?.createdAt}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n\r\n        // {\r\n        //   headerName: \"Status\",\r\n        //   field: \"status\",\r\n        //   filter: true,\r\n        //   width: 150,\r\n        //   cellRendererFramework: params => {\r\n        //     return params.value == \"comleted\" ? (\r\n        //       <div className=\"badge badge-pill badge-success\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     ) : params.value == \"pending\" ? (\r\n        //       <div className=\"badge badge-pill badge-warning\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     ) : (\r\n        //       <div className=\"badge badge-pill badge-success\">\r\n        //         {params.data.status}\r\n        //       </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n      ],\r\n    };\r\n  }\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      modalone: !prevState.modalone,\r\n    }));\r\n  };\r\n  LookupviewStart = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  handleChangeView = (data, types) => {\r\n    let type = types;\r\n    if (type == \"readonly\") {\r\n      this.setState({ ViewOneUserView: true });\r\n      this.setState({ ViewOneData: data });\r\n    } else {\r\n      this.setState({ EditOneUserView: true });\r\n      this.setState({ EditOneData: data });\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const UserInformation = this.context?.UserInformatio;\r\n const userInfo = JSON.parse(localStorage.getItem(\"userData\"))?._id;\r\n    await DebitnoteOrderList(userInfo)\r\n      .then((res) => {\r\n       \r\n        console.log(res.DebitNote);\r\n        this.setState({ rowData: res?.DebitNote });\r\n        this.setState({ AllcolumnDefs: this.state.columnDefs });\r\n        this.setState({ SelectedCols: this.state.columnDefs });\r\n\r\n        let userHeading = JSON.parse(localStorage.getItem(\"DebitNoteList\"));\r\n        if (userHeading?.length) {\r\n          this.setState({ columnDefs: userHeading });\r\n          this.gridApi.setColumnDefs(userHeading);\r\n          this.setState({ SelectedcolumnDefs: userHeading });\r\n        } else {\r\n          this.setState({ columnDefs: this.state.columnDefs });\r\n          this.setState({ SelectedcolumnDefs: this.state.columnDefs });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  toggleDropdown = () => {\r\n    this.setState(prevState => ({ isOpen: !prevState.isOpen }));\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then(value => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          Delete_targetINlist(id)\r\n            .then(res => {\r\n              let selectedData = this.gridApi.getSelectedRows();\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridRef.current = params.api;\r\n\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleChangeHeader = (e, value, index) => {\r\n    let check = e.target.checked;\r\n    if (check) {\r\n      SelectedColums?.push(value);\r\n    } else {\r\n      const delindex = SelectedColums?.findIndex(\r\n        ele => ele?.headerName === value?.headerName\r\n      );\r\n\r\n      SelectedColums?.splice(delindex, 1);\r\n    }\r\n  };\r\n  parseCsv(csvData) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: result => {\r\n          if (result.data && result.data.length > 0) {\r\n            resolve(result.data);\r\n          } else {\r\n            reject(new Error(\"No data found in the CSV\"));\r\n          }\r\n        },\r\n        error: error => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  generatePDF(parsedData) {\r\n    let pdfsize = [Object.keys(parsedData[0])][0].length;\r\n    let size = pdfsize > 15 ? \"a1\" : pdfsize < 14 > 10 ? \"a3\" : \"a4\";\r\n\r\n    const doc = new jsPDF(\"landscape\", \"mm\", size, false);\r\n    doc.setTextColor(5, 87, 97);\r\n    const tableData = parsedData.map(row => Object.values(row));\r\n    doc.addImage(Logo, \"JPEG\", 10, 10, 50, 30);\r\n    let date = new Date();\r\n    doc.setCreationDate(date);\r\n    doc.text(\"UserAccount\", 14, 51);\r\n    doc.autoTable({\r\n      head: [Object.keys(parsedData[0])],\r\n      body: tableData,\r\n      startY: 60,\r\n    });\r\n\r\n    doc.save(\"UserList.pdf\");\r\n  }\r\n\r\n  exportToPDF = async () => {\r\n    const csvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    try {\r\n      const parsedData = await this.parseCsv(csvData);\r\n      this.generatePDF(parsedData);\r\n    } catch (error) {\r\n      console.error(\"Error parsing CSV:\", error);\r\n    }\r\n  };\r\n  processCell = params => {\r\n    return params.value;\r\n  };\r\n\r\n  convertCsvToExcel(csvData) {\r\n    return new Promise(resolve => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        complete: function (result) {\r\n          const worksheet = XLSX.utils.json_to_sheet(result.data);\r\n          const workbook = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n          const excelBuffer = XLSX.write(workbook, {\r\n            bookType: \"xlsx\",\r\n            type: \"array\",\r\n          });\r\n          const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          resolve(blob);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  downloadExcelFile(blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"Userlist.xlsx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  exportToExcel = async e => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    const blob = await this.convertCsvToExcel(CsvData);\r\n    this.downloadExcelFile(blob);\r\n  };\r\n\r\n  convertCSVtoExcel = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: result => {\r\n        const ws = XLSX.utils.json_to_sheet(result.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelType = \"xls\";\r\n        XLSX.writeFile(wb, `UserList.${excelType}`);\r\n      },\r\n    });\r\n  };\r\n\r\n  shiftElementUp = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex > 0) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex - 1 });\r\n      myArrayCopy.splice(currentIndex - 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n\r\n  shiftElementDown = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex < this.state.SelectedcolumnDefs.length - 1) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex + 1 });\r\n      myArrayCopy.splice(currentIndex + 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n  convertCsvToXml = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: result => {\r\n        const rows = result.data;\r\n\r\n        // Create XML\r\n        let xmlString = \"<root>\\n\";\r\n\r\n        rows.forEach(row => {\r\n          xmlString += \"  <row>\\n\";\r\n          row.forEach((cell, index) => {\r\n            xmlString += `    <field${index + 1}>${cell}</field${index + 1}>\\n`;\r\n          });\r\n          xmlString += \"  </row>\\n\";\r\n        });\r\n\r\n        xmlString += \"</root>\";\r\n        const blob = new Blob([xmlString], { type: \"text/xml\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"output.xml\";\r\n        link.click();\r\n      },\r\n    });\r\n  };\r\n\r\n  HandleSetVisibleField = e => {\r\n    e.preventDefault();\r\n   \r\n    this.gridApi.setColumnDefs(this.state.SelectedcolumnDefs);\r\n    this.setState({ columnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ SelectedcolumnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ rowData: this.state.rowData });\r\n    localStorage.setItem(\r\n      \"DebitNoteList\",\r\n      JSON.stringify(this.state.SelectedcolumnDefs)\r\n    );\r\n    this.LookupviewStart();\r\n  };\r\n\r\n  HeadingRightShift = () => {\r\n    const updatedSelectedColumnDefs = [\r\n      ...new Set([\r\n        ...this.state.SelectedcolumnDefs.map(item => JSON.stringify(item)),\r\n        ...SelectedColums.map(item => JSON.stringify(item)),\r\n      ]),\r\n    ].map(item => JSON.parse(item));\r\n    this.setState({\r\n      SelectedcolumnDefs: [...new Set(updatedSelectedColumnDefs)], // Update the state with the combined array\r\n    });\r\n  };\r\n  handleLeftShift = () => {\r\n    let SelectedCols = this.state.SelectedcolumnDefs?.slice();\r\n    let delindex = this.state.Arrindex; /* Your delete index here */\r\n\r\n    if (SelectedCols && delindex >= 0) {\r\n      const splicedElement = SelectedCols?.splice(delindex, 1); // Remove the element\r\n\r\n      this.setState({\r\n        SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n      SelectedcolumnDefs,\r\n      isOpen,\r\n      SelectedCols,\r\n      AllcolumnDefs,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Col className=\"app-user-list\">\r\n          {this.state.EditOneUserView && this.state.EditOneUserView ? (\r\n            <Row className=\"card\">\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end p-1\">\r\n                  <Button\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState({ EditOneUserView: false });\r\n                    }}\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              {/* <EditAccount EditOneData={this.state.EditOneData} /> */}\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {this.state.ViewOneUserView && this.state.ViewOneUserView ? (\r\n                <>\r\n                  <Row className=\"card\">\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-end p-1\">\r\n                        <Button\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.setState({ ViewOneUserView: false });\r\n                          }}\r\n                          color=\"danger\"\r\n                          size=\"sm\"\r\n                        >\r\n                          Back\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <DebitView ViewOneData={this.state.ViewOneData} />\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col sm=\"12\">\r\n                    <Card>\r\n                      <Row className=\"mt-2 ml-2 mr-2\">\r\n                        <Col>\r\n                          <h1\r\n                            className=\"float-left\"\r\n                            style={{ fontWeight: \"600\" }}\r\n                          >\r\n                            DebitNote List\r\n                          </h1>\r\n                        </Col>\r\n                        <Col>\r\n                          <span className=\"mx-1\">\r\n                            <FaFilter\r\n                              style={{ cursor: \"pointer\" }}\r\n                              title=\"filter coloumn\"\r\n                              size=\"35px\"\r\n                              onClick={this.LookupviewStart}\r\n                              color=\"#39cccc\"\r\n                              className=\"float-right\"\r\n                            />\r\n                          </span>\r\n                          <span className=\"mx-1\">\r\n                            <div className=\"dropdown-container float-right\">\r\n                              <ImDownload\r\n                                style={{ cursor: \"pointer\" }}\r\n                                title=\"download file\"\r\n                                size=\"35px\"\r\n                                className=\"dropdown-button \"\r\n                                color=\"#39cccc\"\r\n                                onClick={this.toggleDropdown}\r\n                              />\r\n                              {isOpen && (\r\n                                <div\r\n                                  style={{\r\n                                    position: \"absolute\",\r\n                                    zIndex: \"1\",\r\n                                    border: \"1px solid #39cccc\",\r\n                                    backgroundColor: \"white\",\r\n                                  }}\r\n                                  className=\"dropdown-content dropdownmy\"\r\n                                >\r\n                                  <h5\r\n                                    onClick={() => this.exportToPDF()}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive mt-1\"\r\n                                  >\r\n                                    .PDF\r\n                                  </h5>\r\n                                  <h5\r\n                                    onClick={() =>\r\n                                      this.gridApi.exportDataAsCsv()\r\n                                    }\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive\"\r\n                                  >\r\n                                    .CSV\r\n                                  </h5>\r\n                                  <h5\r\n                                    onClick={this.convertCSVtoExcel}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive\"\r\n                                  >\r\n                                    .XLS\r\n                                  </h5>\r\n                                  <h5\r\n                                    onClick={this.exportToExcel}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive\"\r\n                                  >\r\n                                    .XLSX\r\n                                  </h5>\r\n                                  <h5\r\n                                    onClick={() => this.convertCsvToXml()}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\" mx-1 myactive\"\r\n                                  >\r\n                                    .XML\r\n                                  </h5>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </span>\r\n                          {/* <span>\r\n                            <Route\r\n                              render={({ history }) => (\r\n                                <Badge\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"float-right mr-1\"\r\n                                  color=\"primary\"\r\n                                  onClick={() =>\r\n                                    history.push(\r\n                                      \"/app/AJgroup/order/AddPurchaseOrder\"\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <FaPlus size={15} /> Add Purchase Order\r\n                                </Badge>\r\n                              )}\r\n                            />\r\n                          </span> */}\r\n                        </Col>\r\n                      </Row>\r\n                      <CardBody style={{ marginTop: \"-1.5rem\" }}>\r\n                        {this.state.rowData === null ? null : (\r\n                          <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                            <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                              <div className=\"mb-1\">\r\n                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                  <DropdownToggle tag=\"div\">\r\n                                    {this.gridApi\r\n                                      ? this.state.currenPageSize\r\n                                      : \"\" * this.state.getPageSize -\r\n                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {this.state.rowData.length -\r\n                                      this.state.currenPageSize *\r\n                                        this.state.getPageSize >\r\n                                    0\r\n                                      ? this.state.currenPageSize *\r\n                                        this.state.getPageSize\r\n                                      : this.state.rowData.length}{\" \"}\r\n                                    of {this.state.rowData.length}\r\n                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu right>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(5)}\r\n                                    >\r\n                                      5\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(20)}\r\n                                    >\r\n                                      20\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(50)}\r\n                                    >\r\n                                      50\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(100)}\r\n                                    >\r\n                                      100\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(134)}\r\n                                    >\r\n                                      134\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap justify-content-end mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                  <Input\r\n                                    placeholder=\"search Item here...\"\r\n                                    onChange={e =>\r\n                                      this.updateSearchQuery(e.target.value)\r\n                                    }\r\n                                    value={this.state.value}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ContextLayout.Consumer className=\"ag-theme-alpine\">\r\n                              {context => (\r\n                                <AgGridReact\r\n                                  id=\"myAgGrid\"\r\n                                  gridOptions={this.gridOptions}\r\n                                  rowSelection=\"multiple\"\r\n                                  defaultColDef={defaultColDef}\r\n                                  columnDefs={columnDefs}\r\n                                  rowData={rowData}\r\n                                  onGridReady={this.onGridReady}\r\n                                  colResizeDefault={\"shift\"}\r\n                                  animateRows={true}\r\n                                  floatingFilter={false}\r\n                                  pagination={true}\r\n                                  paginationPageSize={\r\n                                    this.state.paginationPageSize\r\n                                  }\r\n                                  pivotPanelShow=\"always\"\r\n                                  enableRtl={context.state.direction === \"rtl\"}\r\n                                  ref={this.gridRef} // Attach the ref to the grid\r\n                                  domLayout=\"autoHeight\" // Adjust layout as needed\r\n                                />\r\n                              )}\r\n                            </ContextLayout.Consumer>\r\n                          </div>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.LookupviewStart}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}\r\n        >\r\n          <ModalHeader toggle={this.LookupviewStart}>Change Fileds</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"12\" xl=\"4\" xs=\"12\">\r\n                <h4>Available Columns</h4>\r\n                <div className=\"mainshffling\">\r\n                  <div class=\"ex1\">\r\n                    {AllcolumnDefs &&\r\n                      AllcolumnDefs?.map((ele, i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              onClick={e => this.handleChangeHeader(e, ele, i)}\r\n                              key={i}\r\n                              className=\"mycustomtag mt-1\"\r\n                            >\r\n                              <span className=\"mt-1\">\r\n                                <h5\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"allfields\"\r\n                                >\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    // checked={check && check}\r\n                                    className=\"mx-1\"\r\n                                  />\r\n\r\n                                  {ele?.headerName}\r\n                                </h5>\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"12\" xl=\"2\" xs=\"12\" className=\"colarrowbtn\">\r\n                <div className=\"mainarrowbtn\">\r\n                  <div style={{ cursor: \"pointer\" }}>\r\n                    <FaArrowAltCircleRight\r\n                      onClick={this.HeadingRightShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ cursor: \"pointer\" }} className=\"my-2\">\r\n                    <FaArrowAltCircleLeft\r\n                      onClick={this.handleLeftShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\" xl=\"6\" xs=\"12\">\r\n                <Row>\r\n                  <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n                    <h4>Visible Columns</h4>\r\n                    <div className=\"mainshffling\">\r\n                      <div class=\"ex1\">\r\n                        {SelectedcolumnDefs &&\r\n                          SelectedcolumnDefs?.map((ele, i) => {\r\n                            return (\r\n                              <>\r\n                                <div key={i} className=\"mycustomtag mt-1\">\r\n                                  <span className=\"mt-1\">\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.setState({ Arrindex: i })\r\n                                      }\r\n                                      style={{\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor: `${\r\n                                          this.state.Arrindex === i\r\n                                            ? \"#1877f2\"\r\n                                            : \"\"\r\n                                        }`,\r\n                                      }}\r\n                                      className=\"allfields\"\r\n                                    >\r\n                                      <IoMdRemoveCircleOutline\r\n                                        onClick={() => {\r\n                                          const SelectedCols =\r\n                                            this.state.SelectedcolumnDefs?.slice();\r\n                                          const delindex =\r\n                                            SelectedCols?.findIndex(\r\n                                              element =>\r\n                                                element?.headerName ==\r\n                                                ele?.headerName\r\n                                            );\r\n\r\n                                          if (SelectedCols && delindex >= 0) {\r\n                                            const splicedElement =\r\n                                              SelectedCols?.splice(delindex, 1); // Remove the element\r\n                                            // splicedElement contains the removed element, if needed\r\n\r\n                                            this.setState({\r\n                                              SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n                                            });\r\n                                          }\r\n                                        }}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        size=\"25px\"\r\n                                        color=\"red\"\r\n                                        className=\"mr-1\"\r\n                                      />\r\n\r\n                                      {ele?.headerName}\r\n                                    </h5>\r\n                                  </span>\r\n                                </div>\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"updownbtn justify-content-center\">\r\n                      <div>\r\n                        <BsFillArrowUpSquareFill\r\n                          className=\"arrowassign mb-1\"\r\n                          size=\"30px\"\r\n                          onClick={this.shiftElementUp}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillArrowDownSquareFill\r\n                          onClick={this.shiftElementDown}\r\n                          className=\"arrowassign\"\r\n                          size=\"30px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  {/* <Button onClick={this.HandleSetVisibleField} color=\"primary\">\r\n                    Submit\r\n                  </Button> */}\r\n\r\n                  <Badge\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"\"\r\n                    color=\"primary\"\r\n                    onClick={this.HandleSetVisibleField}\r\n                  >\r\n                    Submit\r\n                  </Badge>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.modalone}\r\n          toggle={this.toggleModal}\r\n          className=\"modal-dialog modal-xl\"\r\n          // className=\"modal-dialog modal-lg\"\r\n          size=\"lg\"\r\n          backdrop={true}\r\n          fullscreen={true}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>View Details</ModalHeader>\r\n          <ModalBody className=\"myproducttable\">\r\n            {/* <div className=\"container\"> */}\r\n            {/* <TargetAssignedOne ViewData={this.state.ViewData} /> */}\r\n            {/* </div> */}\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default DebitNoteList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","module.exports = __webpack_public_path__ + \"static/media/logomain.cee4d0c2.png\";"],"sourceRoot":""}