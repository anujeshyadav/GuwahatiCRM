{"version":3,"sources":["../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx","views/forms/form-elements/datepicker/Timepicker.js","views/forms/form-elements/datepicker/Datepickers.js","views/forms/form-elements/datepicker/Pickers.js","views/apps/freshlist/accounts/CreatePromotionalActivity.js"],"names":["module","exports","require","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","OutsideAlerter","props","clickEvent","wrapperRef","useRef","outsideClick","useEffect","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","React","children","Multiselect","c","_this","state","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","createRef","searchBox","onChange","bind","onKeyPress","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","onCloseOptionList","isVisible","initialSetValue","this","groupBy","singleSelect","groupByOptions","_proto","Promise","resolve","_this2","setState","length","componentDidMount","componentDidUpdate","prevProps","prevSelectedvalues","JSON","stringify","focus","componentWillUnmount","clearTimeout","skipCheck","isObject","displayValue","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","key","push","create","onSearch","value","onKeyPressFn","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","e","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","renderOptionList","emptyRecordMsg","loadingMessage","loading","className","optionContainer","notFound","t","keys","map","Fragment","obj","groupHeading","option","isSelected","_this6","onClick","readOnly","checked","optionValueDecorator","_this7","customCloseIcon","_this8","chips","selectedValueDecorator","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","_this9","placeholder","id","name","hidePlaceholder","disable","showArrow","customArrow","multiselectContainer","hideSelectedList","onKeyDown","inputField","autoComplete","disabled","onMouseDown","preventDefault","render","Component","defaultProps","Timepickers","basic","Date","timeLimit","preloaded","md","sm","enableTime","noCalendar","dateFormat","date","minTime","maxTime","defaultDate","Datepickers","basicPicker","dateTimePicker","humanFriendly","minMax","disabledRange","multipleDates","rangePicker","weekNum","inlinePicker","Card","CardHeader","CardTitle","CardBody","Row","Col","minDate","altInput","altFormat","data-enable-time","maxDate","fp_incr","from","to","mode","preloadRange","weekNumbers","inline","Pickers","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Timepicker","GrandTotal","SelectedITems","CreatePromotionalActivity","args","useState","setIndex","DiscountType","setDiscountType","startdate","setStartDate","FreeNumberofProduct","setFreeNumberofProduct","Enddate","setEnddate","FreeSelectedProduct","setFreeSelectedProduct","AddAnotherProduct","setAddAnotherProduct","NumberofProduct","setNumberofProduct","error","Status","setStatus","Promocode","setPromocode","ProductList","setProductList","setPartyList","Salesperson","setSalesperson","grandTotalAmt","setGrandTotalAmt","TotalAmount","setTotalAmount","Discountpercent","setDiscountpercentage","Discount","setDiscount","setUserInfo","modal","setModal","toggle","product","productId","availableQty","qty","price","totalprice","Salespersonname","targetstartDate","targetEndDate","discount","Shipping","tax","grandTotal","setProduct","handleProductChangeProduct","list","handleRemoveSelected","selectedList","selectedItem","amt","ele","console","log","Product_MRP","indextotal","b","handleSelection","prevProductList","updatedProductList","updatedProduct","_id","ProductListView","then","res","Product","catch","err","CreatePartyList","Party","userInfo","parse","localStorage","getItem","addMoreProduct","removeMoreProduct","newFormValues","handleSubmitPromocode","mypromot","promoCodeWise","promoCode","promoAmount","startDate","endDate","status","SavePromotionsActivity","swal","submitHandler","payload","percentageWise","totalAmount","percentageDiscount","amountWise","percentageAmount","productWise","productQty","discountAmount","discountPercentage","freeSameProductQty","myproduct","freeProductQty","freeOtherProducts","Allproduct","qtyAssign","totalPrice","salesPersonId","products","history","cursor","color","goBack","lg","onSubmit","marginRight","required","onWheel","removedItem","Ripple","isOpen","toUpperCase"],"mappings":"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","file":"static/js/147.ac600adb.chunk.js","sourcesContent":["\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: IMultiselectProps;\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {this.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value)}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow, hideSelectedList } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {!hideSelectedList && this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: v => v,\n  optionValueDecorator: v => v\n} as IMultiselectProps;\n","import React from \"react\"\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\"\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Timepickers extends React.Component{\r\n  state ={\r\n    basic : new Date(),\r\n    timeLimit : new Date(),\r\n    preloaded : new Date()\r\n  }\r\n\r\n  render(){\r\n    let { basic, timeLimit } = this.state\r\n    return(\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Timepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic 24hrs</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basic}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ basic : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Limit</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={timeLimit}\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  minTime: \"16:00\",\r\n                  maxTime: \"22:30\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ timeLimit : date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  enableTime: true,\r\n                  noCalendar: true,\r\n                  dateFormat: \"H:i\",\r\n                  defaultDate: \"13:45\"\r\n                }}\r\n                onChange={date => {\r\n                  this.setState({ preloaded : date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timepickers","import React from \"react\";\r\nimport { Row, Col, Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nclass Datepickers extends React.Component {\r\n  state = {\r\n    basicPicker: new Date(),\r\n    dateTimePicker: new Date(),\r\n    humanFriendly: new Date(),\r\n    minMax: new Date(),\r\n    disabledRange: new Date(),\r\n    multipleDates: new Date(),\r\n    rangePicker: new Date(),\r\n    weekNum: new Date(),\r\n    inlinePicker: new Date(),\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      basicPicker,\r\n      dateTimePicker,\r\n      humanFriendly,\r\n      minMax,\r\n      disabledRange,\r\n      multipleDates,\r\n      rangePicker,\r\n      weekNum,\r\n      inlinePicker,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Datepickers</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Basic</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={basicPicker}\r\n                onChange={(date) => {\r\n                  this.setState({ basicPicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Date & Time</h5>\r\n              <Flatpickr\r\n                options={{\r\n                  minDate: \"today\",\r\n                  altInput: true,\r\n                  // altFormat: \"j-m-Y H:i:S\",\r\n                  altFormat: \"m-j-Y H:i:S\",\r\n                }}\r\n                className=\"form-control\"\r\n                data-enable-time\r\n                value={dateTimePicker}\r\n                onChange={(date) => {\r\n                  this.setState({ dateTimePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Human Friendly</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={humanFriendly}\r\n                options={{\r\n                  altInput: true,\r\n                  altFormat: \"F j, Y\",\r\n                  dateFormat: \"Y-m-d\",\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ humanFriendly: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Min & Max Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={minMax}\r\n                options={{ minDate: \"today\", maxDate: new Date().fp_incr(14) }}\r\n                onChange={(date) => {\r\n                  this.setState({ minMax: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Disabled Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={disabledRange}\r\n                options={{\r\n                  dateFormat: \"Y-m-d\",\r\n                  disable: [\r\n                    {\r\n                      from: \"2020-02-01\",\r\n                      to: \"2020-02-10\",\r\n                    },\r\n                    {\r\n                      from: \"2020-02-20\",\r\n                      to: \"2020-02-25\",\r\n                    },\r\n                  ],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ disabledRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Multiple Dates</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={multipleDates}\r\n                options={{ mode: \"multiple\" }}\r\n                onChange={(date) => {\r\n                  this.setState({ multipleDates: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Range</h5>\r\n              <Flatpickr\r\n                value={rangePicker}\r\n                className=\"form-control\"\r\n                options={{ mode: \"range\" }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Preloaded Range</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                options={{\r\n                  mode: \"range\",\r\n                  defaultDate: [\"2020-02-01\", \"2020-02-15\"],\r\n                }}\r\n                onChange={(date) => {\r\n                  this.setState({ preloadRange: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className=\"mb-md-0 mb-3\" md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Week Numbers</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={weekNum}\r\n                options={{ weekNumbers: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ weekNum: date });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"text-bold-500\">Inline</h5>\r\n              <Flatpickr\r\n                className=\"form-control\"\r\n                value={inlinePicker}\r\n                options={{ inline: true }}\r\n                onChange={(date) => {\r\n                  this.setState({ inlinePicker: date });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datepickers;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Datepickers from \"./Datepickers\";\r\nimport Timepickers from \"./Timepicker\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\";\r\n\r\nclass Pickers extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Date & Time Picker\"\r\n          breadCrumbParent=\"Form Elements\"\r\n          breadCrumbActive=\"Date & Time Picker\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Datepickers />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <Timepickers />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Pickers;\r\n// import { useState, useRef } from \"react\";\r\n// import Tesseract from \"tesseract.js\";\r\n\r\n// function anuj() {\r\n//   const [imagePath, setImagePath] = useState(\"\");\r\n//   const [text, setText] = useState(\"aa\");\r\n\r\n//   const handleChange = (event) => {\r\n//     setImage(URL.createObjectURL(event.target.files[0]));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <main className=\"App-main\">\r\n//         <h3>Actual image uploaded</h3>\r\n//         {/* <img src={imagePath} className=\"App-logo\" alt=\"logo\" /> */}\r\n\r\n//         <h3>Extracted text</h3>\r\n//         <div className=\"text-box\">\r\n//           <p> {text} </p>\r\n//         </div>\r\n//         <input type=\"file\" onChange={handleChange} />\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default anuj;\r\n","\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { BsFillChatDotsFill, BsWhatsapp } from \"react-icons/bs\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nimport { FiSend } from \"react-icons/fi\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  CreateOrder_ViewData,\r\n  CommentOrder,\r\n  CreateOrder_ID,\r\n  CommentProductWiki,\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  Create_Sales_personList,\r\n  Create_Targetsave,\r\n  SavePromotionsActivity,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport Timepickers from \"../../../forms/form-elements/datepicker/Timepicker\";\r\nimport Pickers from \"../../../forms/form-elements/datepicker/Pickers\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst CreatePromotionalActivity = (args) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [Index, setIndex] = useState(\"\");\r\n  // const [targetEndDate, settargetEndDate] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [DiscountType, setDiscountType] = useState(\"\");\r\n  const [startdate, setStartDate] = useState(\"\");\r\n  const [FreeNumberofProduct, setFreeNumberofProduct] = useState(\"\");\r\n  const [Enddate, setEnddate] = useState(\"\");\r\n  const [addonproductQty, setaddonproductQty] = useState(\"\");\r\n  const [FreeSelectedProduct, setFreeSelectedProduct] = useState(false);\r\n  const [AddAnotherProduct, setAddAnotherProduct] = useState(false);\r\n  const [NumberofProduct, setNumberofProduct] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [Promocode, setPromocode] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [Salesperson, setSalesperson] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [TotalAmount, setTotalAmount] = useState(\"\");\r\n  const [Discountpercent, setDiscountpercentage] = useState(\"\");\r\n  const [Discount, setDiscount] = useState(\"\");\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [items, setItems] = useState(\"\");\r\n  const [audit, setAudit] = useState(false);\r\n\r\n  const audittoggle = () => {\r\n    setAudit(!audit);\r\n    // setModal(!modal);\r\n  };\r\n\r\n  const handleHistory = () => {\r\n    audittoggle();\r\n  };\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\", //\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1, //\r\n      price: \"\", //\r\n      totalprice: \"\", //\r\n      Salespersonname: \"\",\r\n      targetstartDate: \"\",\r\n      targetEndDate: \"\",\r\n      discount: \"\",\r\n      Shipping: \"\",\r\n      tax: \"\",\r\n      grandTotal: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...product];\r\n    list[index][name] = value;\r\n    let amt = 0;\r\n\r\n    setProduct(list);\r\n  };\r\n\r\n  const handleRemoveSelected = (selectedList, selectedItem, index) => {\r\n    SelectedITems.splice(index, 1);\r\n    let myarr = product?.map((ele, i) => {\r\n      console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n      let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n      GrandTotal[index] = indextotal;\r\n      return indextotal;\r\n    });\r\n\r\n    let amt = myarr.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct((prevProductList) => {\r\n      const updatedProductList = [...prevProductList]; // Create a copy of the productList array\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      // updatedProduct.price = selectedItem?.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem?._id;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        console.log(ele?.qty * selectedItem[i]?.Product_MRP);\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n    product.map((value) => console.log(value.totalprice));\r\n    // onSelect1(selectedList, selectedItem, index);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // handleInputChange;\r\n  useEffect(() => {\r\n    console.log(product);\r\n    console.log(GrandTotal);\r\n    // console.log(Salesperson);\r\n  }, [product]);\r\n\r\n  useEffect(() => {\r\n    // Create_Sales_personList()\r\n    //   .then((res) => {\r\n    //     console.log(res?.SalesPerson);\r\n    //     setSalesPersonList(res?.SalesPerson);\r\n    //   })\r\n    //   .catch((err) => console.log(err));\r\n    ProductListView()\r\n      .then((res) => {\r\n        console.log(res?.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    CreatePartyList()\r\n      .then((res) => {\r\n        // console.log(res.Party)\r\n        setPartyList(res.Party);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n    // CreateOrder_ID()\r\n    //   .then((res) => {\r\n    //     const lastElement = res?.Order[res?.Order?.length - 1].id;\r\n    //     const prefix = lastElement?.substring(0, 5);\r\n    //     const number = parseInt(lastElement?.match(/\\d+$/)[0], 10) + 1;\r\n    //     const concatenatedString = prefix + number;\r\n    //     setOrderID(concatenatedString);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    // CreateOrder_ViewData()\r\n    //   .then((res) => {\r\n    //     const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n    //     setCreatAccountView(JSON.parse(jsonData));\r\n    //     setStatusDropDown(\r\n    //       JSON.parse(jsonData)?.createOrder.CurrentStatus?.MyDropDown?.dropdown\r\n    //     );\r\n    //     setdropdownValue(JSON.parse(jsonData));\r\n    //     setPartDetails(JSON.parse(jsonData)?.createOrder.PartDetails);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\", //\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1, //\r\n        price: \"\", //\r\n        totalprice: \"\", //\r\n        Salespersonname: \"\",\r\n        targetstartDate: \"\",\r\n        targetEndDate: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n        grandTotal: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = (i) => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    // GrandTotal.splice(i, 1);\r\n    // let amt = GrandTotal.reduce((a, b) => a + b);\r\n    // setGrandTotalAmt(amt);\r\n\r\n    setProduct(newFormValues);\r\n  };\r\n  // let handlePartChange = (i, e) => {\r\n  //   let newFormValues = [...part];\r\n  //   newFormValues[i][e.target.name] = e.target.value;\r\n  //   setPart(newFormValues);\r\n  // };\r\n\r\n  const handleSubmitPromocode = async (e) => {\r\n    e.preventDefault();\r\n    // SavePromotionsActivity()\r\n\r\n    let promo = [\r\n      {\r\n        promoCode: Promocode,\r\n        promoAmount: Discount,\r\n        startDate: startdate,\r\n        endDate: Enddate,\r\n        status: Status,\r\n      },\r\n    ];\r\n    let mypromot = {\r\n      promoCodeWise: promo,\r\n      status: Status,\r\n    };\r\n    await SavePromotionsActivity(mypromot)\r\n      .then((res) => {\r\n        console.log(res);\r\n        swal(\"success\", \"Promotion Code Submitted Successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        swal(\"Error\", \"Something went wrong\");\r\n      });\r\n  };\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    // SavePromotionsActivity();\r\n\r\n    console.log(DiscountType);\r\n    console.log(Salesperson);\r\n    console.log(TotalAmount);\r\n    console.log(Discountpercent);\r\n    console.log(startdate);\r\n    console.log(Enddate);\r\n    console.log(Discount);\r\n    console.log(NumberofProduct);\r\n    console.log(product);\r\n    console.log(Status);\r\n    console.log(FreeSelectedProduct);\r\n    console.log(AddAnotherProduct);\r\n    console.log(FreeNumberofProduct);\r\n    console.log(Promocode);\r\n    console.log(Status);\r\n\r\n    if (DiscountType == \"Percentage Wise\") {\r\n      let percentage = [\r\n        {\r\n          totalAmount: TotalAmount,\r\n          percentageDiscount: Discountpercent,\r\n          startDate: startdate,\r\n          endDate: Enddate,\r\n          status: Status,\r\n        },\r\n      ];\r\n      let payload = {\r\n        percentageWise: percentage,\r\n        status: Status,\r\n      };\r\n      await SavePromotionsActivity(payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"success\", \"Promotion Code Submitted Successfully\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Error\", \"Something went wrong\");\r\n        });\r\n    } else if (DiscountType == \"Amount Wise\") {\r\n      let amount = [\r\n        {\r\n          totalAmount: TotalAmount,\r\n          percentageAmount: Discount,\r\n          startDate: startdate,\r\n          endDate: Enddate,\r\n          status: Status,\r\n        },\r\n      ];\r\n      let payload = {\r\n        amountWise: amount,\r\n        status: Status,\r\n      };\r\n      await SavePromotionsActivity(payload)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(\"success\", \"Submitted Successfully\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          swal(\"Error\", \"Something went wrong\");\r\n        });\r\n    } else {\r\n      if (FreeSelectedProduct) {\r\n        let productWise = [\r\n          {\r\n            productId: Salesperson[0]?._id,\r\n            productQty: NumberofProduct,\r\n            discountAmount: Discount,\r\n            discountPercentage: Discountpercent,\r\n            startDate: startdate,\r\n            endDate: Enddate,\r\n            freeSameProductQty: FreeNumberofProduct,\r\n          },\r\n        ];\r\n        let payload = {\r\n          productWise: productWise,\r\n          status: Status,\r\n        };\r\n        await SavePromotionsActivity(payload)\r\n          .then((res) => {\r\n            console.log(res);\r\n            swal(\"success\", \"Submitted Successfully\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            swal(\"Error\", \"Something went wrong\");\r\n          });\r\n      } else {\r\n        let myproduct = product?.map((ele, i) => {\r\n          return { productId: ele?.productId, freeProductQty: ele?.qty };\r\n        });\r\n        let productWise = [\r\n          {\r\n            productId: Salesperson[0]?._id,\r\n            productQty: NumberofProduct,\r\n            discountAmount: Discount,\r\n            discountPercentage: Discountpercent,\r\n            startDate: startdate,\r\n            endDate: Enddate,\r\n            freeOtherProducts: myproduct,\r\n          },\r\n        ];\r\n        let payload = {\r\n          productWise: productWise,\r\n          status: Status,\r\n        };\r\n\r\n        await SavePromotionsActivity(payload)\r\n          .then((res) => {\r\n            console.log(res);\r\n            swal(\"success\", \"Submitted Successfully\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            swal(\"Error\", \"Something went wrong\");\r\n          });\r\n      }\r\n    }\r\n    // console.log(product);\r\n    // console.log(GrandTotal);\r\n    // console.log(Salesperson[0]?._id);\r\n    // console.log(targetStartDate);\r\n    // console.log(targetEndDate);\r\n    // console.log(grandTotalAmt);\r\n    let Allproduct = product?.map((ele, i) => {\r\n      console.log(ele);\r\n      return {\r\n        productId: ele?.productId,\r\n        qtyAssign: ele?.qty,\r\n        price: ele?.price,\r\n        totalPrice: ele?.totalprice,\r\n      };\r\n    });\r\n    let payload = {\r\n      // startDate: targetStartDate,\r\n      // endDate: targetEndDate,\r\n      grandTotal: grandTotalAmt,\r\n      salesPersonId: Salesperson[0]?._id,\r\n      products: Allproduct,\r\n    };\r\n    // const ObjOrder = {\r\n    //   userId: UserInfo?._id,\r\n    //   fullName: UserInfo?.UserName,\r\n    //   address: UserInfo?.Address,\r\n    //   // MobileNo: 1234567890,\r\n    //   // country: \"USA\",\r\n    //   // state: \"California\",\r\n    //   // city: \"Los Angeles\",\r\n    //   // landMark: \"Nearby Park\",\r\n    //   // pincode: 90001,\r\n    //   // grandTotal: 100.50,\r\n    //   // discount: 10.00,\r\n    //   // shippingCost: 5.00,\r\n    //   // taxAmount: 7.50,\r\n    //   // status: \"pending\",\r\n    //   orderItems: product,\r\n    // };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      // Create_Targetsave(payload)\r\n      //   .then((res) => {\r\n      //     // if (res.status) {\r\n      //     //   setFormData({});\r\n      //     //   window.location.reload();\r\n      //     swal(\"Target Created Successfully\");\r\n      //     // }\r\n      //     console.log(res);\r\n      //   })\r\n      //   .catch((err) => {\r\n      //     console.log(err);\r\n      //   });\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem, index) => {\r\n    // console.log(selectedList);\r\n    setSalesperson(selectedList);\r\n    // console.log(index);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let arr = selectedList.map((ele) => ele.id);\r\n    // setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // if (uniqueChars.length === 1) {\r\n    //   let value = uniqueChars[0];\r\n    //   const formdata = new FormData();\r\n    //   formdata.append(\"state_id\", value);\r\n    //   axiosConfig\r\n    //     .post(`/getcity`, formdata)\r\n    //     .then((res) => {\r\n    //       setCityList(res?.data?.cities);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // } else {\r\n    //   setCityList([]);\r\n    // }\r\n  };\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n\r\n    // setmultiSelect(selectedList);\r\n\r\n    // let arr = selectedList.map((ele) => ele.id);\r\n    // console.log(arr);\r\n    // setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // console.log(uniqueChars);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Promotional Activity</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Badge\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.goBack()}>\r\n                      {\" \"}\r\n                      Back\r\n                    </Badge>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col lg=\"1\" md=\"1\" sm=\"12\">\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Badge\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\" mr-1\"\r\n                      color=\"primary\"\r\n                      onClick={toggle}>\r\n                      {\" \"}\r\n                      +Promocode\r\n                    </Badge>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form className=\"p-1\" onSubmit={submitHandler}>\r\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <div className=\"form-label-group\">\r\n                <input\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"Product Quantity\"\r\n                  value={DiscountType}\r\n                  onChange={(e) => {\r\n                    setDiscountType(\"Percentage Wise\");\r\n                    setFreeSelectedProduct(false);\r\n                    setAddAnotherProduct(false);\r\n                  }}\r\n                />\r\n                <span style={{ marginRight: \"60px\" }}>Percentage Wise</span>\r\n\r\n                <input\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"Product Quantity\"\r\n                  value={DiscountType}\r\n                  onChange={(e) => {\r\n                    setDiscountType(\"Amount Wise\");\r\n                    setFreeSelectedProduct(false);\r\n                    setAddAnotherProduct(false);\r\n                  }}\r\n                />\r\n                <span style={{ marginRight: \"60px\" }}>Amount Wise</span>\r\n                <input\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"Product Quantity\"\r\n                  placeholder=\"Product Quantity\"\r\n                  value={DiscountType}\r\n                  onChange={(e) => setDiscountType(\"Product Wise\")}\r\n                />\r\n                <span style={{ marginRight: \"60px\" }}>Product Wise</span>\r\n              </div>\r\n            </Col>\r\n\r\n            <Row className=\"p-1\">\r\n              {DiscountType && DiscountType == \"Percentage Wise\" ? (\r\n                <>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Total Amount</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"Totalamount\"\r\n                        placeholder=\"Total amount\"\r\n                        value={TotalAmount}\r\n                        onChange={(e) => setTotalAmount(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Discount in Percentage</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"DiscountinPercentage\"\r\n                        placeholder=\"Discount in Percentage %\"\r\n                        value={Discountpercent}\r\n                        onChange={(e) => {\r\n                          if (e.target.value.length < 3) {\r\n                            setDiscountpercentage(e.target.value);\r\n                          } else {\r\n                          }\r\n                        }}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Start Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={startdate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>End Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={Enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </>\r\n              ) : null}\r\n              {DiscountType && DiscountType == \"Amount Wise\" ? (\r\n                <>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Total Amount</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"Totalamount\"\r\n                        placeholder=\"Total amount\"\r\n                        value={TotalAmount}\r\n                        onChange={(e) => setTotalAmount(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Discount Amount</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"DiscountinPercentage\"\r\n                        placeholder=\"Discount Amount\"\r\n                        value={Discount}\r\n                        onChange={(e) => setDiscount(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Start Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={startdate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>End Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={Enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </>\r\n              ) : null}\r\n              {DiscountType && DiscountType == \"Product Wise\" ? (\r\n                <>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Choose Product *</Label>\r\n                      <Multiselect\r\n                        required\r\n                        selectionLimit={1}\r\n                        // showCheckbox=\"true\"\r\n                        isObject=\"false\"\r\n                        options={ProductList} // Options to display in the dropdown\r\n                        // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                        onSelect={onSelect1} // Function will trigger on select event\r\n                        onRemove={onRemove1} // Function will trigger on remove event\r\n                        displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Product Quantity</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"TotalAmount\"\r\n                        placeholder=\"Product Total Amount\"\r\n                        value={NumberofProduct}\r\n                        onChange={(e) => setNumberofProduct(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Discount Amount</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"DiscountAmount\"\r\n                        placeholder=\"Discount Amount\"\r\n                        value={Discount}\r\n                        onChange={(e) => setDiscount(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label> or Discount %</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"DiscountAmount\"\r\n                        placeholder=\"Discount Percentage %\"\r\n                        value={Discountpercent}\r\n                        onChange={(e) => setDiscountpercentage(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Start Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        value={startdate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>End Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        value={Enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <div className=\"p-1\">\r\n                    <Row>\r\n                      <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"\">\r\n                        <div className=\"form-label-group\">\r\n                          <input\r\n                            style={{ marginRight: \"3px\" }}\r\n                            type=\"radio\"\r\n                            name=\"ProductQuantity1\"\r\n                            placeholder=\"Product Quantity\"\r\n                            onChange={(e) => {\r\n                              setFreeSelectedProduct(true);\r\n                              setAddAnotherProduct(false);\r\n                            }}\r\n                          />\r\n                          <span style={{ marginRight: \"60px\" }}>\r\n                            or Free selected Product Quantity\r\n                          </span>\r\n\r\n                          <input\r\n                            style={{ marginRight: \"3px\" }}\r\n                            type=\"radio\"\r\n                            name=\"ProductQuantity1\"\r\n                            placeholder=\"Product Quantity\"\r\n                            // value={targetStartDate}\r\n                            onChange={(e) => {\r\n                              setFreeSelectedProduct(false);\r\n\r\n                              setAddAnotherProduct(true);\r\n                            }}\r\n                          />\r\n                          <span style={{ marginRight: \"60px\" }}>\r\n                            Want to Add Another Product\r\n                          </span>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </>\r\n              ) : null}\r\n              <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                <Row>\r\n                  {AddAnotherProduct && (\r\n                    <>\r\n                      {product &&\r\n                        product?.map((product, index) => (\r\n                          <Row className=\"\" key={index}>\r\n                            <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <div className=\"\">\r\n                                <Label>Product Name</Label>\r\n                                <Multiselect\r\n                                  required\r\n                                  selectionLimit={1}\r\n                                  isObject=\"false\"\r\n                                  options={ProductList}\r\n                                  onSelect={(selectedList, selectedItem) =>\r\n                                    handleSelection(\r\n                                      selectedList,\r\n                                      selectedItem,\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                  onRemove={(selectedList, selectedItem) => {\r\n                                    handleRemoveSelected(\r\n                                      selectedList,\r\n                                      selectedItem,\r\n                                      index\r\n                                    );\r\n                                  }}\r\n                                  displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                              <div className=\"\">\r\n                                <Label>Quantity</Label>\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  name=\"qty\"\r\n                                  placeholder=\"Req_Qty\"\r\n                                  value={product?.qty}\r\n                                  onChange={(e) =>\r\n                                    handleProductChangeProduct(e, index)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            {/* <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                              <div className=\"\">\r\n                                <Label>Price</Label>\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  name=\"price\"\r\n                                  readOnly\r\n                                  placeholder=\"Price\"\r\n                                  value={product.price}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                              <div className=\"\">\r\n                                <Label>Total Price</Label>\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  name=\"totalprice\"\r\n                                  readOnly\r\n                                  placeholder=\"TtlPrice\"\r\n                                  value={product.price * product?.qty}\r\n                                />\r\n                              </div>\r\n                            </Col> */}\r\n\r\n                            <Col\r\n                              className=\"d-flex mt-1 abb\"\r\n                              lg=\"3\"\r\n                              md=\"3\"\r\n                              sm=\"12\">\r\n                              <div className=\"btnStyle\">\r\n                                {index ? (\r\n                                  <Button\r\n                                    type=\"button\"\r\n                                    color=\"danger\"\r\n                                    className=\"button remove \"\r\n                                    onClick={() => removeMoreProduct(index)}>\r\n                                    - Remove\r\n                                  </Button>\r\n                                ) : null}\r\n                              </div>\r\n\r\n                              <div className=\"btnStyle\">\r\n                                <Button\r\n                                  className=\"ml-1 mb-1\"\r\n                                  color=\"primary\"\r\n                                  type=\"button\"\r\n                                  onClick={() => addMoreProduct()}>\r\n                                  + Add\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        ))}\r\n                      {/* <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Add another Product *</Label>\r\n\r\n                          <Multiselect\r\n                            required\r\n                            selectionLimit={1}\r\n                            // showCheckbox=\"true\"\r\n                            isObject=\"false\"\r\n                            options={ProductList} // Options to display in the dropdown\r\n                            // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                            onSelect={onSelect1} // Function will trigger on select event\r\n                            onRemove={onRemove1} // Function will trigger on remove event\r\n                            displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Quantity</Label>\r\n                          <Input\r\n                            required\r\n                            type=\"number\"\r\n                            name=\"targetEndDate\"\r\n                            placeholder=\"Number of Quantity\"\r\n                            value={addonproductQty}\r\n                            onChange={(e) => setaddonproductQty(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Col> */}\r\n                    </>\r\n                  )}\r\n                  {FreeSelectedProduct && (\r\n                    <>\r\n                      {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div className=\"\">\r\n                     <Label>Choose Warehouse (to be Transfer) * </Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={SalesPersonList} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelect1} // Function will trigger on select event\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                    </div>\r\n                     </Col> */}\r\n                      <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Free Selected Product Quantity</Label>\r\n                          <Input\r\n                            required\r\n                            type=\"number\"\r\n                            placeholder=\"Number of Quantity\"\r\n                            value={FreeNumberofProduct}\r\n                            onChange={(e) =>\r\n                              setFreeNumberofProduct(e.target.value)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </>\r\n                  )}\r\n                </Row>\r\n              </Col>\r\n              {/* <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Warehouse(from where) *</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={SalesPersonList} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelect1} // Function will trigger on select event\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Warehouse (to be Transfer) * </Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      // showCheckbox=\"true\"\r\n                      isObject=\"false\"\r\n                      options={SalesPersonList} // Options to display in the dropdown\r\n                      // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                      onSelect={onSelect1} // Function will trigger on select event\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Stock Transfer date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"targetEndDate\"\r\n                      placeholder=\"Date of Delivery\"\r\n                      value={targetStartDate}\r\n                      onChange={(e) => settargetStartDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col> */}\r\n            </Row>\r\n            {/* {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Product Name</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            handleRemoveSelected(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            );\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Quantity To be Transfer</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          value={product?.qty}\r\n                          onChange={(e) => handleProductChangeProduct(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.price * product?.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            - Remove\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          + Add\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))} */}\r\n\r\n            {/* <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total : <stron>{grandTotalAmt}</stron>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <Label className=\"mb-0\">Status</Label>\r\n              <div\r\n                className=\"form-label-group mt-1\"\r\n                onChange={(e) => {\r\n                  setStatus(e.target.value);\r\n                }}>\r\n                <input\r\n                  checked={Status == \"Active\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Active\"\r\n                />\r\n                <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                <input\r\n                  // checked={status == \"Inactive\"}\r\n                  checked={Status == \"Deactive\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Deactive\"\r\n                />\r\n                <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n              </div>\r\n            </Col>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button.Ripple color=\"primary\" type=\"submit\" className=\"mt-2\">\r\n                    Submit\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Modal isOpen={modal} toggle={toggle} {...args}>\r\n            <ModalHeader toggle={toggle}>Add Promotion Code here</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={handleSubmitPromocode}>\r\n                <Row>\r\n                  <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label>Promo code</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"targetEndDate\"\r\n                      placeholder=\"Enter Promotion Code\"\r\n                      value={Promocode}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value.toUpperCase());\r\n                        setPromocode(e.target.value.toUpperCase());\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label>Amount</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      placeholder=\"Enter Amount\"\r\n                      value={Discount}\r\n                      onChange={(e) => setDiscount(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>Start Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={startdate}\r\n                        onChange={(e) => setStartDate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"mb-1\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <div className=\"\">\r\n                      <Label>End Date</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"date\"\r\n                        name=\"DiscountinPercentage\"\r\n                        value={Enddate}\r\n                        onChange={(e) => setEnddate(e.target.value)}\r\n                        onWheel={(e) => e.preventDefault()}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n                    <Label className=\"mb-0\">Status</Label>\r\n                    <div\r\n                      className=\"form-label-group mt-1\"\r\n                      onChange={(e) => {\r\n                        setStatus(e.target.value);\r\n                      }}>\r\n                      <input\r\n                        checked={Status == \"Active\"}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Active\"\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                      <input\r\n                        // checked={status == \"Inactive\"}\r\n                        checked={Status == \"Deactive\"}\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"status\"\r\n                        value=\"Deactive\"\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mt-2\">\r\n                        Submit\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatePromotionalActivity;\r\n"],"sourceRoot":""}