{"version":3,"sources":["views/apps/freshlist/order/SalesReturnView.js"],"names":["SalesReturnView","args","useState","setIndex","error","setProductList","grandTotalAmt","setGrandTotalAmt","setEditdata","setUserInfo","setSalesPersonList","location","useParams","useLocation","productId","Product_Title","Qty_Sales","Qty_Return","Product_Price","OrderedListData","setOrderedListData","handleProductChangeProduct","e","index","target","name","value","list","useEffect","getFromLocalData","JSON","parse","localStorage","getItem","orderItems","state","grandTotal","reduce","a","b","product","Product_MRP","setItem","console","log","Create_Sales_personList","then","res","SalesPerson","catch","err","userdata","ProductListView","_id","database","Product","userInfo","className","render","history","style","cursor","color","size","onClick","goBack","onSubmit","preventDefault","userData","myarr","map","ele","i","qty","Number","returnQty","price","payload","userId","returnItems","mobileNumber","email","Return_amount","orderId","created_by","swal","SalesReturnProduct","item","key","lg","md","sm","type","readOnly","placeholder","onChange","Ripple"],"mappings":"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","file":"static/js/463.1d3ce4b3.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SalesReturnProduct,\r\n  ProductListView,\r\n  Create_Sales_personList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst SalesReturnView = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [Editdata, setEditdata] = useState({});\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [SalesPersonList, setSalesPersonList] = useState([]);\r\n  const Params = useParams();\r\n  const location = useLocation();\r\n\r\n  const [OrderedListData, setOrderedListData] = useState([\r\n    {\r\n      productId: \"\",\r\n      Product_Title: \"\",\r\n      Qty_Sales: \"\",\r\n      Qty_Return: 0,\r\n      Product_Price: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index) => {\r\n    setIndex(index);\r\n    const { name, value } = e.target;\r\n    const list = [...OrderedListData];\r\n    list[index][name] = value;\r\n    setOrderedListData(list);\r\n  };\r\n  useEffect(() => {\r\n    let getFromLocalData = JSON.parse(\r\n      localStorage.getItem(\"OrderList\")\r\n    ).orderItems;\r\n    if (location?.state) {\r\n      setOrderedListData(location?.state.orderItems);\r\n      let grandTotal = location?.state.orderItems.reduce(\r\n        (a, b) => a + b.product.Product_MRP,\r\n        0\r\n      );\r\n\r\n      setGrandTotalAmt(grandTotal);\r\n      localStorage.setItem(\"EditoneProduct\", location?.state);\r\n      setEditdata(location?.state);\r\n    } else {\r\n      setOrderedListData(getFromLocalData);\r\n      let grandTotal = location?.state.orderItems.reduce(\r\n        (a, b) => a + b.product.Product_MRP,\r\n        0\r\n      );\r\n      console.log(grandTotal);\r\n      setGrandTotalAmt(grandTotal);\r\n    }\r\n  }, []);\r\n  useEffect(() => {}, [OrderedListData]);\r\n\r\n  useEffect(() => {\r\n    Create_Sales_personList()\r\n      .then(res => {\r\n        setSalesPersonList(res?.SalesPerson);\r\n      })\r\n      .catch(err => console.log(err));\r\n      let userdata = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n      ProductListView(userdata?._id, userdata?.database)\r\n        .then((res) => {\r\n          setProductList(res?.Product);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(OrderedListData);\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userData);\r\n\r\n    let myarr = OrderedListData?.map((ele, i) => {\r\n      return {\r\n        productId: ele?.product?._id,\r\n        Qty_Sales: ele?.qty,\r\n        Qty_Return: Number(ele?.returnQty),\r\n        Product_Price: ele?.price,\r\n      };\r\n    });\r\n\r\n    let payload = {\r\n      userId: userData?._id,\r\n      returnItems: myarr,\r\n      mobileNumber: userData?.mobileNumber,\r\n      email: userData.email,\r\n      Return_amount: grandTotalAmt,\r\n      orderId: location?.state?._id,\r\n      created_by: userData?._id,\r\n    };\r\n\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SalesReturnProduct(payload)\r\n        .then(res => {\r\n          swal(\"Sales Returned Successfully\");\r\n\r\n          console.log(res);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Sales Return</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"float-right\">\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Button\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"float-right mr-1\"\r\n                      color=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => history.goBack()}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              {OrderedListData &&\r\n                OrderedListData?.map((item, index) => {\r\n                  console.log(item);\r\n                  return (\r\n                    <Row className=\"\" key={index}>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Product Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"Product_Title\"\r\n                            readOnly\r\n                            placeholder=\"Product Name\"\r\n                            value={item?.product?.Product_Title}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Price</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"price\"\r\n                            readOnly\r\n                            placeholder=\"Price\"\r\n                            value={item?.product?.Product_MRP}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Purchased Quantity</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            readOnly\r\n                            name=\"qty\"\r\n                            placeholder=\"Req_Qty\"\r\n                            value={item?.qty}\r\n                            onChange={e => handleProductChangeProduct(e, index)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                        <div className=\"\">\r\n                          <Label>Return Quantity</Label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            name=\"returnQty\"\r\n                            placeholder=\"Return Quantity\"\r\n                            value={OrderedListData.returnQty}\r\n                            onChange={e => handleProductChangeProduct(e, index)}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                })}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <Label className=\"pr-5\">\r\n                      Grand Total :\r\n                      <strong>\r\n                        {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                          ? 0\r\n                          : grandTotalAmt}\r\n                      </strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SalesReturnView;\r\n"],"sourceRoot":""}