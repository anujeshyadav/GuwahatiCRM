{"version":3,"sources":["../node_modules/reactstrap/es/Spinner.js","views/apps/freshlist/accounts/DepartmentRoleAssign.js"],"names":["_excluded","propTypes","tag","tagPropType","type","PropTypes","string","size","color","className","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","i","DepartmentRoleAssign","useState","selectedDepartment","setSelectedDepartment","selectedRoles","setSelectedRoles","DepartMentList","setDepartMentList","RoleList","setRoleList","Loader","setLoader","useEffect","userData","JSON","parse","localStorage","getItem","URL","List_Department","database","_GetList","then","res","console","log","Department","catch","err","RoleLists","Get_RoleList","_id","WithoutAssign","Role","filter","ele","assign","rank","roleName","Position","rolename","position","handleAssignRoles","userinfo","MainData","map","roleId","rolePosition","createdPosition","payload","created_by","departmentName","roles","_PostSave","Save_Assigned_Role","swal","style","display","justifyContent","marginTop","height","width","lg","render","history","cursor","onClick","goBack","sm","md","id","onChange","event","department","target","value","key","required","marginRight","includes","splice","indexOf","push","handleRoleChange","fontSize","right","e","data","AllSelected","Number","handleAddRanking","placeholder","disabled","length"],"mappings":"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","file":"static/js/317.bbbf6222.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Input, Label, Row, Spinner } from \"reactstrap\";\r\nimport {\r\n  Get_RoleList,\r\n  _Get,\r\n  _GetList,\r\n  _PostSave,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  List_Department,\r\n  Save_Assigned_Role,\r\n} from \"../../../../ApiEndPoint/Api\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst DepartmentRoleAssign = () => {\r\n  const [selectedDepartment, setSelectedDepartment] = useState(\"\");\r\n  const [selectedRoles, setSelectedRoles] = useState([]);\r\n  const [DepartMentList, setDepartMentList] = useState([]);\r\n  const [RoleList, setRoleList] = useState([]);\r\n  const [Loader, setLoader] = useState(false);\r\n\r\n  //   const roleList = [\"Manager\", \"Developer\", \"Accountant\"]; // Replace with your actual role list\r\n\r\n  const handleDepartmentChange = (event) => {\r\n    const department = event.target.value;\r\n    setSelectedDepartment(department);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let URL = `${List_Department}/${userData?.database}`;\r\n    _GetList(URL)\r\n      .then((res) => {\r\n        console.log(res?.Department);\r\n        debugger;\r\n        setDepartMentList(res?.Department);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    RoleLists();\r\n  }, []);\r\n\r\n  const RoleLists = () => {\r\n    let userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    Get_RoleList(userData?._id, userData?.database)\r\n      .then((res) => {\r\n        let WithoutAssign = res?.Role?.filter(\r\n          (ele) =>\r\n            ele?.assign == 0 &&\r\n            ele?.rank == 0 &&\r\n            ele?.roleName != \"SuperAdmin\" &&\r\n            ele?.roleName != \"Admin\"\r\n        );\r\n        let Position = userData?.rolename?.position;\r\n        let ShowList = res?.Role?.filter((ele, i) => ele?.position > Position);\r\n\r\n        setRoleList(WithoutAssign);\r\n        // setRoleList(res?.Role);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleRoleChange = (role) => {\r\n    const roles = [...selectedRoles];\r\n\r\n    if (roles?.includes(role)) {\r\n      // Remove role if it's already selected\r\n      roles?.splice(roles.indexOf(role), 1);\r\n    } else {\r\n      // Add role if it's not selected\r\n      roles.push(role);\r\n    }\r\n\r\n    setSelectedRoles(roles);\r\n  };\r\n\r\n  const handleAssignRoles = async () => {\r\n    // Implement your logic to assign roles to the selected department\r\n    let userinfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setLoader(true);\r\n    let MainData = selectedRoles?.map((ele, i) => {\r\n      return {\r\n        roleName: ele?.roleName,\r\n        database: ele?.database,\r\n        roleId: ele?._id,\r\n        rolePosition: ele?.createdPosition,\r\n      };\r\n    });\r\n    let payload = {\r\n      created_by: userinfo?._id,\r\n      database: userinfo?.database,\r\n      departmentName: selectedDepartment,\r\n      roles: MainData,\r\n    };\r\n\r\n    await _PostSave(Save_Assigned_Role, payload)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setSelectedRoles([]);\r\n        setLoader(false);\r\n\r\n        swal(\"Roles Assigned Successfully\");\r\n        RoleLists();\r\n      })\r\n      .catch((err) => {\r\n        setLoader(false);\r\n\r\n        console.log(err);\r\n        swal(\"Something went wrong\");\r\n      });\r\n    // You can send this data to your server or manage it in your state\r\n  };\r\n  if (Loader) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"20rem\",\r\n        }}>\r\n        <Spinner\r\n          style={{\r\n            height: \"4rem\",\r\n            width: \"4rem\",\r\n          }}\r\n          color=\"primary\">\r\n          Loading...\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n  const handleAddRanking = (e, data, i) => {\r\n    let AllSelected = [...selectedRoles];\r\n\r\n    let index = selectedRoles?.indexOf(data);\r\n    AllSelected[index][\"createdPosition\"] = Number(e.target.value);\r\n    setSelectedRoles(AllSelected);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"card p-3\">\r\n        <Row>\r\n          <Col></Col>\r\n          <Col lg=\"2\">\r\n            <Route\r\n              render={({ history }) => (\r\n                <Button\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"float-right mr-1\"\r\n                  color=\"primary\"\r\n                  onClick={() => history.goBack()}>\r\n                  {\" \"}\r\n                  Back\r\n                  {/* <FaPlus size={15} /> Create User */}\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3 className=\"mb-3\">\r\n            <strong>Assign Roles to Department</strong>\r\n          </h3>\r\n        </div>\r\n        <Row>\r\n          <Col lg=\"4\" sm=\"6\" md=\"4\">\r\n            <Label>Select Department:</Label>\r\n            <select\r\n              id=\"departments\"\r\n              className=\"form-control\"\r\n              onChange={handleDepartmentChange}\r\n              value={selectedDepartment}>\r\n              <option value=\"\">--Select Department--</option>\r\n              {DepartMentList &&\r\n                DepartMentList?.map((department, i) => (\r\n                  <option key={department?._id} value={department?._id}>\r\n                    {department?.departmentName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3 className=\"mb-3\">\r\n            <strong>Choose Roles</strong>\r\n          </h3>\r\n        </div>\r\n        <Row>\r\n          {RoleList.map((role, i) => (\r\n            <Col lg=\"6\" sm=\"12\" md=\"6\">\r\n              <div key={role?._id} className=\"form-label-group d-flex\">\r\n                <input\r\n                  className=\"mt-1\"\r\n                  required\r\n                  type=\"checkbox\"\r\n                  style={{ marginRight: \"3px\", height: \"22px\", width: \"22px\" }}\r\n                  id={role}\r\n                  value={role}\r\n                  //   checked={selectedRoles?.includes(role?._id)}\r\n                  onChange={() => handleRoleChange(role)}\r\n                />\r\n                <span\r\n                  className=\"mb-1 ml-1\"\r\n                  style={{ marginRight: \"20px\", fontSize: \"25px\" }}>\r\n                  {role?.roleName}\r\n                </span>\r\n                <span\r\n                  className=\"input\"\r\n                  style={{ position: \"absolute\", right: 200 }}>\r\n                  <Input\r\n                    onChange={(e) => handleAddRanking(e, role, i)}\r\n                    placeholder=\"Enter Position of Role\"\r\n                    type=\"number\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleAssignRoles}\r\n            disabled={!selectedDepartment || selectedRoles.length === 0}>\r\n            Assign Roles\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DepartmentRoleAssign;\r\n"],"sourceRoot":""}