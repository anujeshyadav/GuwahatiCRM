{"version":3,"sources":["views/apps/freshlist/Production/Createitemforproduction.js"],"names":["GrandTotal","SelectedITems","SelectedSize","Createitemforproduction","useState","setIndex","error","ProductList","setProductList","setPartyList","PartyId","UnitList","setUnitList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","productId","availableQty","qty","price","Size","unitType","totalprice","product","setProduct","handleRequredQty","e","index","avalaibleSize","target","name","value","Number","list","amt","length","map","val","reduce","a","b","acc","useEffect","userId","JSON","parse","localStorage","getItem","_id","ProductListView","then","res","Product","catch","err","console","log","CreatePartyList","Party","UnitListView","Unit","userInfo","addMoreProduct","unitQty","removeMoreProduct","i","newFormValues","splice","onRemove1","selectedList","removedItem","className","render","history","color","size","onClick","push","onSubmit","preventDefault","fullname","firstName","lastName","payload","fullName","address","currentAddress","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","swal","SaveOrder","lg","md","sm","key","required","selectionLimit","isObject","options","onSelect","selectedItem","prevProductList","updatedProductList","updatedProduct","Product_MRP","handleSelection","onRemove","displayValue","type","min","placeholder","autocomplete","onChange","updatedUnitList","primaryUnit","ele","indextotal","handleSelectionUnit","disabled","Ripple"],"mappings":"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","file":"static/js/394.bc043c51.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n  BaseUnitListView,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\n\r\nconst Createitemforproduction = () => { \r\n    const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n      totalprice: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    const { name, value } = e.target;\r\n    if (Number(value) <= avalaibleSize) {\r\n      if (Number(value != 0)) {\r\n        setIndex(index);\r\n        const list = [...product];\r\n        list[index][name] = Number(value);\r\n\r\n        let amt = 0;\r\n        if (list.length > 0) {\r\n          const x = list?.map(val => {\r\n            GrandTotal[index] = val.Size * val.qty * val.price;\r\n            list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n            return val.Size * val.qty * val.price;\r\n          });\r\n          amt = x.reduce((a, b) => a + b);\r\n        }\r\n        setProduct(list);\r\n        setGrandTotalAmt(amt);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem._id);\r\n  };\r\n\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  const handleSelectionUnit = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedUnitList = [...prevProductList];\r\n      const updatedProduct = { ...updatedUnitList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem.unitQty;\r\n      updatedProduct.unitType = selectedItem.primaryUnit;\r\n      updatedUnitList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        updatedUnitList[index][\"totalprice\"] =\r\n          ele?.qty * ele.price * SelectedSize[i]?.unitQty;\r\n        let indextotal = ele?.price * ele.qty * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedUnitList; // Return the updated product list\r\n    });\r\n  };\r\n  let subtotal = product?.reduce((acc, product) => acc + product.totalprice, 0);\r\n  let taxRate = 0.1; // 10%\r\n  let tax = subtotal * taxRate;\r\n  let discountRate = 0.2;\r\n  let discountAmount = subtotal * discountRate;\r\n  let Grandtotals = subtotal + tax;\r\n\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    ProductListView(userId)\r\n      .then(res => {\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreatePartyList(userId)\r\n      .then(res => {\r\n        setPartyList(res.Party);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    UnitListView(userId)\r\n      .then(res => {\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        unitQty: \"\",\r\n        unitType: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const fullname = UserInfo?.firstName + \" \" + UserInfo?.lastName;\r\n    const payload = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.currentAddress,\r\n      grandTotal: grandTotalAmt,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveOrder(payload)\r\n        .then(res => {\r\n          swal(\"Order Created Successfully\");\r\n          //  history.push(\"/app/softnumen/order/orderList\")\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Item</h1>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/views/apps/freshlist/Production/Itemproduct\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                \r\n                \r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Product Name</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    \r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          min={0}\r\n                          placeholder=\"Req_Qty\"\r\n                          required\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Choose Unit</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionUnit(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"primaryUnit\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          disabled\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          disabled\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.Size * product.price * product.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total:\r\n                          <span className=\"p-2\">\r\n                            {grandTotalAmt && grandTotalAmt == \"NaN\"\r\n                              ? 0\r\n                              : grandTotalAmt}\r\n                          </span>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Createitemforproduction;\r\n"],"sourceRoot":""}