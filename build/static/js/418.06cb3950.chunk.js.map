{"version":3,"sources":["views/apps/freshlist/order/CreateOrder.js"],"names":["GrandTotal","SelectedITems","CreateOrder","args","useState","setIndex","index","error","ProductList","setProductList","PartyList","setPartyList","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","product","productId","availableQty","qty","price","totalprice","partyId","DateofDelivery","setProduct","handleProductChangeProduct","e","avalaibleSize","target","value","name","list","map","ele","amt","length","val","console","log","reduce","a","b","useEffect","ProductListView","then","res","Product","catch","err","CreatePartyList","Party","userInfo","JSON","parse","localStorage","getItem","addMoreProduct","discount","Shipping","tax","removeMoreProduct","i","newFormValues","splice","onRemove1","selectedList","removedItem","className","render","history","color","size","onClick","push","onSubmit","preventDefault","UserName","ObjOrder","userId","_id","fullName","address","Address","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","swal","SaveOrder","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","prevProductList","updatedProductList","updatedProduct","handleSelectionParty","onRemove","displayValue","type","onChange","key","Product_MRP","Size","myarr","indextotal","handleSelection","placeholder","autocomplete","readOnly","Ripple"],"mappings":"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","file":"static/js/418.06cb3950.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { history } from \"../../../../history\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SaveOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nconst CreateOrder = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      partyId: \"\",\r\n      DateofDelivery: \"\",\r\n      // discount: \"\",\r\n      // Shipping: \"\",\r\n      // tax: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleProductChangeProduct = (e, index, avalaibleSize) => {\r\n    if (avalaibleSize >= e.target.value) {\r\n      setIndex(index);\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      list[index][name] = value;\r\n      product.map(ele => {});\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map(val => {\r\n          console.log(val.qty * val.price);\r\n          list[index][\"totalprice\"] = val.qty * val.price;\r\n          return val.qty * val.price;\r\n        });\r\n        amt = x.reduce((a, b) => a + b, 0);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] };\r\n      updatedProduct.partyId = selectedItem?._id;\r\n      updatedProductList[index] = updatedProduct;\r\n      return updatedProductList;\r\n    });\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    console.log(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        let indextotal = ele?.qty * SelectedITems[i]?.Product_MRP;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      console.log(myarr);\r\n      let amt = myarr.reduce((a, b) => a + b, 0);\r\n      setGrandTotalAmt(amt);\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(product);\r\n    console.log(GrandTotal);\r\n  }, [product, GrandTotal]);\r\n\r\n  useEffect(() => {\r\n    ProductListView()\r\n      .then(res => {\r\n        console.log(res.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreatePartyList()\r\n      .then(res => {\r\n        console.log(res.Party);\r\n        setPartyList(res.Party);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\",\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n        DateofDelivery: \"\",\r\n        partyId: \"\",\r\n        discount: \"\",\r\n        Shipping: \"\",\r\n        tax: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b, 0);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    // product?.map(ele => {\r\n    //   return {};\r\n    // });\r\n    console.log(UserInfo?.UserName);\r\n    const ObjOrder = {\r\n      userId: UserInfo?._id,\r\n      fullName: UserInfo?.UserName,\r\n      address: UserInfo?.Address,\r\n      grandTotal: grandTotalAmt,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SaveOrder(ObjOrder)\r\n        .then(res => {\r\n          console.log(res);\r\n          // if (res.status) {\r\n          //   setFormData({});\r\n          //   window.location.reload();\r\n          swal(\"Order Created Successfully\");\r\n          // }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n    console.log(index);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Order</h1>\r\n              </div>\r\n            </Col>\r\n            {/* <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" float-right\"\r\n                    color=\"danger\"\r\n                    onClick={history.push(\"/app/softnumen/order/orderList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col> */}\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\"btn float-right\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/softnumen/order/orderList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={e => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\"></Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"availableQty\"\r\n                          placeholder=\"AvailableSize\"\r\n                          value={product?.availableQty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Required Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleProductChangeProduct(\r\n                              e,\r\n                              index,\r\n                              product?.availableQty\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\" lg=\"2\" md=\"2\" sm=\"12\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.price * product?.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-1 abb\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            size=\"sm\"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          size=\"sm\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          SubTotal : <strong>{grandTotalAmt}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost : <strong>RS 50</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS 25</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Discount : <strong>RS 5</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        {\" \"}\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :{\" \"}\r\n                          <strong>{grandTotalAmt + 50 + 25 + 5}</strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateOrder;\r\n"],"sourceRoot":""}