{"version":3,"sources":["views/apps/freshlist/customer/HRM/Time-sheet/attenform.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AttenForm","useState","employee","date","hours","remark","formData","setFormData","handleInputChange","e","target","name","value","onSubmit","preventDefault","console","log","row","for","sm","type","id","onChange","placeholder","size","offset","Ripple","color","className","_excluded","propTypes","children","PropTypes","node","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"+QAkHeA,UA9GG,WAEhB,MAAgCC,mBAAS,CACvCC,SAAU,GACVC,KAAM,GACNC,MAAO,GACPC,OAAQ,KACR,mBALKC,EAAQ,KAAEC,EAAW,KAetBC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdL,EAAY,2BAAKD,GAAQ,kBAAGK,EAAOC,MAGrC,OACE,kBAAC,IAAI,KACH,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACC,SAfS,SAACJ,GACpBA,EAAEK,iBAEFC,QAAQC,IAAI,kBAAmBV,KAazB,4BAAI,mBACJ,kBAAC,IAAS,CAACW,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,WAAWC,GAAI,GAAG,YAG7B,kBAAC,IAAG,CAACA,GAAI,IACP,kBAAC,IAAK,CACJC,KAAK,SACLT,KAAK,WACLU,GAAG,WACHT,MAAON,EAASJ,SAChBoB,SAAUd,GAGV,4BAAQI,MAAM,IAAG,mBACjB,4BAAQA,MAAM,aAAY,cAC1B,4BAAQA,MAAM,aAAY,cAC1B,4BAAQA,MAAM,aAAY,cAC1B,4BAAQA,MAAM,aAAY,iBAKhC,kBAAC,IAAS,CAACK,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,OAAOC,GAAI,GAAG,QAGzB,kBAAC,IAAG,CAACA,GAAI,IACP,kBAAC,IAAK,CACJC,KAAK,OACLT,KAAK,OACLU,GAAG,OACHT,MAAON,EAASH,KAChBmB,SAAUd,MAIhB,kBAAC,IAAS,CAACS,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,QAAQC,GAAI,GAAG,SAG1B,kBAAC,IAAG,CAACA,GAAI,IACP,kBAAC,IAAK,CACJC,KAAK,SACLG,YAAY,QACZZ,KAAK,QACLU,GAAG,QACHT,MAAON,EAASF,MAChBkB,SAAUd,MAIhB,kBAAC,IAAS,CAACS,KAAG,GACZ,kBAAC,IAAK,CAACC,IAAI,SAASC,GAAI,GAAG,UAG3B,kBAAC,IAAG,CAACA,GAAI,IACP,kBAAC,IAAK,CACJC,KAAK,WACLT,KAAK,SACLU,GAAG,SACHT,MAAON,EAASD,OAChBiB,SAAUd,MAIhB,kBAAC,IAAS,CAACS,KAAG,GACZ,kBAAC,IAAG,CAACE,GAAI,CAAEK,KAAM,GAAIC,OAAQ,IAG3B,kBAAC,IAAOC,OAAM,CACZC,MAAM,UACNP,KAAK,SACLQ,UAAU,QAAO,iB,iCCvGjC,2EAEIC,EAAY,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,OAK7EC,EAAY,CACdC,SAAUC,IAAUC,KACpBhB,IAAKe,IAAUE,KACfC,MAAOH,IAAUE,KACjBE,OAAQJ,IAAUE,KAClBG,SAAUL,IAAUE,KACpBI,IAAKC,cACLX,UAAWI,IAAUQ,OACrBC,UAAWT,IAAUU,QAMnBC,EAAY,SAAmBC,GACjC,IAAIhB,EAAYgB,EAAMhB,UAClBa,EAAYG,EAAMH,UAClBxB,EAAM2B,EAAM3B,IACZoB,EAAWO,EAAMP,SACjBF,EAAQS,EAAMT,MACdC,EAASQ,EAAMR,OACfS,EAAMD,EAAMN,IACZQ,EAAaC,YAA8BH,EAAOf,GAElDmB,EAAUC,0BAAgBC,IAAWtB,IAAWX,GAAM,MAAekB,EAAQ,aAAe,gBAAcA,IAASC,IAAS,uBAA6BD,IAASE,IAAW,YAAqBI,GAMtM,MAJY,aAARI,IACFC,EAAWT,SAAWA,GAGJc,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpElB,UAAWoB,MAIfL,EAAUb,UAAYA,EACtBa,EAAUW,aA1BS,CACjBhB,IAAK,OA0BQK","file":"static/js/391.5fe56f1b.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Col, Form, FormGroup, Label, Input, Button, Card, CardBody } from 'reactstrap';\r\n\r\nconst AttenForm = () => {\r\n  // State to store form data\r\n  const [formData, setFormData] = useState({\r\n    employee: '',\r\n    date: '',\r\n    hours: '',\r\n    remark: '',\r\n  });\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add your logic for form submission here\r\n    console.log('Form submitted:', formData);\r\n  };\r\n\r\n  // Handle form field changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Form onSubmit={handleSubmit}>\r\n          <h1>Attendance Form</h1>\r\n          <FormGroup row>\r\n            <Label for=\"employee\" sm={2}>\r\n              Employee\r\n            </Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"employee\"\r\n                id=\"employee\"\r\n                value={formData.employee}\r\n                onChange={handleInputChange}\r\n              >\r\n                {/* Populate dropdown options with employees */}\r\n                <option value=\"\">Select Employee</option>\r\n                <option value=\"employee1\">Employee 1</option>\r\n                <option value=\"employee2\">Employee 2</option>\r\n                <option value=\"employee3\">Employee 3</option>\r\n                <option value=\"employee4\">Employee 4</option>\r\n                {/* Add more options as needed */}\r\n              </Input>\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"date\" sm={2}>\r\n              Date\r\n            </Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"date\"\r\n                value={formData.date}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"hours\" sm={2}>\r\n              Hours\r\n            </Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"number\"\r\n                placeholder='Hours'\r\n                name=\"hours\"\r\n                id=\"hours\"\r\n                value={formData.hours}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Label for=\"remark\" sm={2}>\r\n              Remark\r\n            </Label>\r\n            <Col sm={10}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"remark\"\r\n                id=\"remark\"\r\n                value={formData.remark}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <FormGroup row>\r\n            <Col sm={{ size: 10, offset: 2 }}>\r\n              {/* <Button type=\"submit\">Submit</Button> */}\r\n\r\n              <Button.Ripple\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"mt-2\">\r\n                Submit\r\n              </Button.Ripple>\r\n            </Col>\r\n          </FormGroup>\r\n        </Form>\r\n\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\nexport default AttenForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}