{"version":3,"sources":["views/apps/freshlist/order/PlaceOrder.js"],"names":["GrandTotal","SelectedITems","SelectedSize","PlaceOrder","args","useState","setIndex","error","ProductList","setProductList","UnitList","setUnitList","PartyList","setPartyList","PartyId","setPartyId","grandTotalAmt","setGrandTotalAmt","UserInfo","setUserInfo","dateofDelivery","setDateofDelivery","product","productId","availableQty","qty","price","totalprice","unitQty","Size","unitType","setProduct","history","useHistory","handleProductChangeProduct","e","index","availableSize","target","value","name","list","amt","length","map","val","console","log","reduce","a","b","handleRequredQty","avalaibleSize","Number","useEffect","userId","JSON","parse","localStorage","getItem","_id","ProductListView","then","res","Product","catch","err","CreatePartyList","Party","UnitListView","Unit","userInfo","addMoreProduct","removeMoreProduct","i","newFormValues","splice","onRemove1","selectedList","removedItem","className","color","onClick","push","onSubmit","preventDefault","fullname","firstName","lastName","ObjOrder","fullName","address","Address","grandTotal","MobileNo","mobileNumber","country","Country","state","State","city","City","orderItems","DateofDelivery","partyId","swal","SavePlaceOrder","lg","md","sm","required","selectionLimit","isObject","options","onSelect","selectedItem","handleSelectionParty","onRemove","displayValue","type","onChange","key","prevProductList","updatedProductList","updatedProduct","Product_MRP","handleSelection","placeholder","autocomplete","updatedUnitList","primaryUnit","ele","indextotal","handleSelectionUnit","readOnly","Ripple"],"mappings":"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","file":"static/js/458.f4294973.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Modal,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  SavePlaceOrder,\r\n  ProductListView,\r\n  CreatePartyList,\r\n  UnitListView,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nlet GrandTotal = [];\r\nlet SelectedITems = [];\r\nlet SelectedSize = [];\r\nconst PlaceOrder = args => {\r\n  const [Index, setIndex] = useState(\"\");\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ProductList, setProductList] = useState([]);\r\n  const [UnitList, setUnitList] = useState([]);\r\n  const [PartyList, setPartyList] = useState([]);\r\n  const [PartyId, setPartyId] = useState(\"\");\r\n  const [grandTotalAmt, setGrandTotalAmt] = useState(0);\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [UserInfo, setUserInfo] = useState({});\r\n  const [dateofDelivery, setDateofDelivery] = useState(\"\");\r\n\r\n  const [product, setProduct] = useState([\r\n    {\r\n      product: \"\",\r\n      productId: \"\",\r\n      availableQty: \"\",\r\n      qty: 1,\r\n      price: \"\",\r\n      totalprice: \"\",\r\n      unitQty: \"\",\r\n      Size: \"\",\r\n      unitType: \"\",\r\n    },\r\n  ]);\r\n  let history = useHistory();\r\n\r\n  const handleProductChangeProduct = (e, index, availableSize) => {\r\n    if (availableSize >= e.target.value) {\r\n      setIndex(index);\r\n      const { name, value } = e.target;\r\n      const list = [...product];\r\n      list[index][name] = value;\r\n\r\n      let amt = 0;\r\n      if (list.length > 0) {\r\n        const x = list?.map(val => {\r\n          console.log(val.qty * val.price);\r\n          list[index][\"totalprice\"] = val.qty * val.price;\r\n          return val.qty * val.price;\r\n        });\r\n        amt = x.reduce((a, b) => a + b);\r\n        console.log(\"GrandTotal\", amt);\r\n      }\r\n      console.log(list);\r\n      setProduct(list);\r\n      setGrandTotalAmt(amt);\r\n      console.log(GrandTotal);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSelectionParty = (selectedList, selectedItem, index) => {\r\n    setPartyId(selectedItem._id);\r\n  };\r\n\r\n  const handleRequredQty = (e, index, avalaibleSize) => {\r\n    const { name, value } = e.target;\r\n    if (Number(value) <= avalaibleSize) {\r\n      if (Number(value != 0)) {\r\n        setIndex(index);\r\n        const list = [...product];\r\n        list[index][name] = Number(value);\r\n\r\n        let amt = 0;\r\n        if (list.length > 0) {\r\n          const x = list?.map(val => {\r\n            GrandTotal[index] = val.Size * val.qty * val.price;\r\n            list[index][\"totalprice\"] = val.Size * val.qty * val.price;\r\n            return val.Size * val.qty * val.price;\r\n          });\r\n          amt = x.reduce((a, b) => a + b);\r\n        }\r\n        setProduct(list);\r\n        setGrandTotalAmt(amt);\r\n      }\r\n    }\r\n  };\r\n  const handleSelectionUnit = (selectedList, selectedItem, index) => {\r\n    SelectedSize.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedUnitList = [...prevProductList];\r\n      const updatedProduct = { ...updatedUnitList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.Size = selectedItem.unitQty;\r\n      updatedProduct.unitType = selectedItem.primaryUnit;\r\n      updatedUnitList[index] = updatedProduct;\r\n      let myarr = prevProductList?.map((ele, i) => {\r\n        updatedUnitList[index][\"totalprice\"] =\r\n          ele?.qty * ele.price * SelectedSize[i]?.unitQty;\r\n        let indextotal = ele?.price * ele.qty * SelectedSize[i]?.unitQty;\r\n        GrandTotal[index] = indextotal;\r\n        return indextotal;\r\n      });\r\n      let amt = myarr.reduce((a, b) => a + b);\r\n      setGrandTotalAmt(amt);\r\n      return updatedUnitList; // Return the updated product list\r\n    });\r\n  };\r\n  const handleSelection = (selectedList, selectedItem, index) => {\r\n    SelectedITems.push(selectedItem);\r\n    setProduct(prevProductList => {\r\n      const updatedProductList = [...prevProductList];\r\n      const updatedProduct = { ...updatedProductList[index] }; // Create a copy of the product at the specified index\r\n      updatedProduct.price = selectedItem.Product_MRP; // Update the price of the copied product\r\n      updatedProduct.productId = selectedItem._id;\r\n      updatedProduct.availableQty = selectedItem.Size;\r\n      updatedProductList[index] = updatedProduct; // Replace the product at the specified index with the updated one\r\n      return updatedProductList; // Return the updated product list to set the state\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(product);\r\n    console.log(GrandTotal);\r\n  }, [product, GrandTotal]);\r\n\r\n  useEffect(() => {\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    ProductListView(userId)\r\n      .then(res => {\r\n        console.log(res.Product);\r\n        setProductList(res?.Product);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    CreatePartyList()\r\n      .then(res => {\r\n        console.log(res.Party);\r\n        setPartyList(res.Party);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    UnitListView(userId)\r\n      .then(res => {\r\n        setUnitList(res.Unit);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userData\"));\r\n    console.log(userInfo);\r\n    setUserInfo(userInfo);\r\n  }, []);\r\n\r\n  let addMoreProduct = () => {\r\n    setProduct([\r\n      ...product,\r\n      {\r\n        product: \"\",\r\n        productId: \"\",\r\n        availableQty: \"\",\r\n        qty: 1,\r\n        price: \"\",\r\n        totalprice: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  let removeMoreProduct = i => {\r\n    let newFormValues = [...product];\r\n    newFormValues.splice(i, 1);\r\n    GrandTotal.splice(i, 1);\r\n    let amt = GrandTotal.reduce((a, b) => a + b);\r\n    setGrandTotalAmt(amt);\r\n    setProduct(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(\"Final \", product);\r\n    let fullname = UserInfo.firstName + \" \" + UserInfo?.lastName;\r\n    const ObjOrder = {\r\n      userId: UserInfo?._id,\r\n      fullName: fullname,\r\n      address: UserInfo?.Address,\r\n      grandTotal: grandTotalAmt,\r\n      MobileNo: UserInfo?.mobileNumber,\r\n      country: UserInfo?.Country,\r\n      state: UserInfo?.State,\r\n      city: UserInfo?.City,\r\n      orderItems: product,\r\n      DateofDelivery: dateofDelivery,\r\n      partyId: PartyId,\r\n      // address: UserInfo?.currentAddress,\r\n    };\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      SavePlaceOrder(ObjOrder)\r\n        .then(res => {\r\n          swal(\"Order Place Successfully\");\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove1 = (selectedList, removedItem, index) => {\r\n    console.log(selectedList);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Place Order</h1>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"\">\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Button\r\n                  className=\"btn float-right\"\r\n                  color=\"warning\"\r\n                  onClick={() =>\r\n                    history.push(\"/app/AjGroup/order/placeOrderList\")\r\n                  }\r\n                >\r\n                  Back\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Choose Party</Label>\r\n                    <Multiselect\r\n                      required\r\n                      selectionLimit={1}\r\n                      isObject=\"false\"\r\n                      options={PartyList}\r\n                      onSelect={(selectedList, selectedItem) =>\r\n                        handleSelectionParty(selectedList, selectedItem, index)\r\n                      }\r\n                      onRemove={onRemove1} // Function will trigger on remove event\r\n                      displayValue=\"firstName\" // Property name to display in the dropdown options\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"mb-1\" lg=\"4\" md=\"4\" sm=\"12\">\r\n                  <div className=\"\">\r\n                    <Label>Expected Delivery Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"DateofDelivery\"\r\n                      value={dateofDelivery}\r\n                      onChange={e => setDateofDelivery(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              {product &&\r\n                product?.map((product, index) => (\r\n                  <Row className=\"\" key={index}>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>ProductName</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={ProductList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelection(selectedList, selectedItem, index)\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"Product_Title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Available Size</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"availableQty\"\r\n                          placeholder=\"availableQty\"\r\n                          value={product?.availableQty}\r\n                          onChange={e => handleProductChangeProduct(e, index)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Required Qty</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          placeholder=\"Req_Qty\"\r\n                          autocomplete=\"off\"\r\n                          value={product?.qty}\r\n                          onChange={e =>\r\n                            handleRequredQty(e, index, product?.availableQty)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Choose Unit</Label>\r\n                        <Multiselect\r\n                          required\r\n                          selectionLimit={1}\r\n                          isObject=\"false\"\r\n                          options={UnitList}\r\n                          onSelect={(selectedList, selectedItem) =>\r\n                            handleSelectionUnit(\r\n                              selectedList,\r\n                              selectedItem,\r\n                              index\r\n                            )\r\n                          }\r\n                          onRemove={(selectedList, selectedItem) => {\r\n                            onRemove1(selectedList, selectedItem, index);\r\n                          }}\r\n                          displayValue=\"primaryUnit\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"price\"\r\n                          readOnly\r\n                          placeholder=\"Price\"\r\n                          value={product.price}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"mb-1\">\r\n                      <div className=\"\">\r\n                        <Label>Total Price</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"totalprice\"\r\n                          readOnly\r\n                          placeholder=\"TtlPrice\"\r\n                          value={product.Size * product.price * product.qty}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-1 abb\">\r\n                      <div className=\"btnStyle\">\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            color=\"danger\"\r\n                            className=\"button remove \"\r\n                            onClick={() => removeMoreProduct(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div className=\"btnStyle\">\r\n                        <Button\r\n                          className=\"ml-1 mb-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addMoreProduct()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n              <Row>\r\n                <Col className=\"mb-1\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                  <div className=\" d-flex justify-content-end\">\r\n                    <ul className=\"subtotal\">\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          SubTotal : <strong>{grandTotalAmt}</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Shipping Cost : <strong>RS 50</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Tax: <strong>RS 25</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        <Label className=\"\">\r\n                          Discount : <strong>RS 5</strong>\r\n                        </Label>\r\n                      </li>\r\n                      <li>\r\n                        {\" \"}\r\n                        <Label className=\"pr-5\">\r\n                          Grand Total :{\" \"}\r\n                          <strong>{grandTotalAmt + 50 + 25 + 5}</strong>\r\n                        </Label>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"mt-2\"\r\n                    >\r\n                      Submit\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PlaceOrder;\r\n"],"sourceRoot":""}