{"version":3,"sources":["views/apps/freshlist/house/CheckPermission.js","views/apps/freshlist/accounts/GoodDispatchEdit.js","views/apps/freshlist/accounts/GoodDispatchView.js","views/apps/freshlist/accounts/GoodDispatchList.js","assets/img/profile/pages/logomain.png"],"names":["CheckPermission","props","console","log","pageparmission","JSON","parse","localStorage","getItem","newparmisson","rolename","rolePermission","find","value","pagename","View","permission","includes","Create","Edit","Delete","GoodDispatchEdit","EditOneData","useState","CreatAccountView","setCreatAccountView","formData","setFormData","dropdownValue","setdropdownValue","index","error","handleInputChange","useContext","UserContext","e","type","i","target","name","files","useEffect","_id","GoodDispatchxmlView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","GoodDispatch","input","catch","err","Card","Form","className","onSubmit","preventDefault","formdata","FormData","map","el","_text","append","EditGoodDispatch","swal","Row","Col","lg","md","sm","ele","_attributes","key","FormGroup","Label","label","Input","placeholder","onChange","style","color","MyDropdown","dropdown","CustomInput","required","option","checked","marginRight","Button","Ripple","GoodDispatchView","ViewOneData","setindex","setError","disabled","src","alt","width","height","test","length","AssignDeliveryBoy","SelectedColums","GoodDispatchList","LookupviewStart","setState","prevState","modal","handleChangeEdit","types","ViewOneUserView","EditOneUserView","toggleDropdown","isOpen","onGridReady","params","gridApi","api","gridColumnApi","columnApi","gridRef","current","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleChangeHeader","push","delindex","findIndex","headerName","splice","exportToPDF","csvData","getDataAsCsv","processCellCallback","processCell","parseCsv","parsedData","generatePDF","exportToExcel","CsvData","convertCsvToExcel","blob","downloadExcelFile","convertCSVtoExcel","Papa","complete","result","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","shiftElementUp","currentIndex","state","Arrindex","myArrayCopy","SelectedcolumnDefs","elementToMove","shiftElementDown","convertCsvToXml","rows","xmlString","forEach","row","cell","Blob","link","document","createElement","href","URL","createObjectURL","download","click","HandleSetVisibleField","setColumnDefs","columnDefs","rowData","setItem","stringify","HeadingRightShift","updatedSelectedColumnDefs","Set","item","handleLeftShift","SelectedCols","slice","React","createRef","setMySelectedarr","InsiderPermissions","paginationPageSize","AllcolumnDefs","defaultColDef","sortable","enablePivot","enableValue","resizable","suppressMenu","this","context","UserInformatio","InsidePermissions","userId","headerSet","indexB","indexOf","indexC","inputs","field","filter","myHeadings","Product","render","history","size","onClick","runthisfunction","cellRendererFramework","CNUpload","FetchSalesInvoice","createdAt","userHeading","GoodDispatchListView","id","buttons","cancel","text","DeleteAccount","selectedData","getSelectedRows","updateRowData","remove","Promise","resolve","reject","header","skipEmptyLines","Error","pdfsize","Object","keys","doc","jsPDF","setTextColor","tableData","values","addImage","Logo","date","Date","setCreationDate","autoTable","head","body","startY","save","dynamicTyping","worksheet","workbook","excelBuffer","bookType","url","window","a","appendChild","revokeObjectURL","cursor","title","position","zIndex","exportDataAsCsv","Badge","CardBody","UncontrolledDropdown","DropdownToggle","tag","DropdownMenu","right","DropdownItem","Consumer","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","ref","domLayout","Modal","toggle","maxWidth","ModalHeader","ModalBody","xl","xs","class","backgroundColor","element","Component","contextType","module","exports"],"mappings":"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","file":"static/js/153.fd283fda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const CheckPermission = (props) => {\r\n  console.log(props);\r\n\r\n  let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n  let newparmisson = pageparmission?.rolename?.rolePermission?.find(\r\n    (value) => value?.pagename === props\r\n  );\r\n  const pageParmission = {\r\n    View: newparmisson?.permission.includes(\"View\"),\r\n    Create: newparmisson?.permission.includes(\"Create\"),\r\n    Edit: newparmisson?.permission.includes(\"Edit\"),\r\n    Delete: newparmisson?.permission.includes(\"Delete\"),\r\n  };\r\n\r\n  return pageParmission;\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport {\r\n  GoodDispatchxmlView,\r\n  EditGoodDispatch,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst GoodDispatchEdit = ({ EditOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (type == \"text\") {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    } else if (type == \"file\") {\r\n      console.log(e.target.name);\r\n      setFormData({\r\n        ...formData,\r\n        [name]: files[0],\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    console.log(EditOneData?._id);\r\n    setFormData(EditOneData);\r\n  }, []);\r\n  useEffect(() => {\r\n    GoodDispatchxmlView()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setCreatAccountView(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setdropdownValue(JSON.parse(jsonData)?.GoodDispatch);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    console.log(EditOneData?._id);\r\n    const formdata = new FormData();\r\n    CreatAccountView.map(el => {\r\n      if (el?.name?._text == \"CNUpload\") {\r\n        formdata.append(`${el?.name?._text}`, formData[el?.name?._text]);\r\n      }\r\n      if (el?.name?._text == \"FetchSalesInvoice\") {\r\n        formdata.append(`${el?.name?._text}`, formData[el?.name?._text]);\r\n      }\r\n    });\r\n    EditGoodDispatch(formdata, EditOneData?._id)\r\n      .then(res => {\r\n        // setFormData({});\r\n        console.log(res);\r\n        //   if (res.status) {\r\n        // window.location.reload();\r\n        swal(\"Good Dispatch Updated Successfully\");\r\n        //   }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\" onSubmit={submitHandler}>\r\n            <Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                <h2> Edit Dispatch</h2>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                {\" \"}\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-2\">\r\n              {CreatAccountView &&\r\n                CreatAccountView?.map((ele, i) => {\r\n                  if (ele?.type?._attributes?.type == \"text\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                            onChange={e => {\r\n                              handleInputChange(\r\n                                e,\r\n                                ele?.type?._attributes?.type,\r\n                                i\r\n                              );\r\n                            }}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else if (ele?.type?._attributes?.type == \"file\") {\r\n                    console.log(\"file\", ele?.name?._text);\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label className=\"\">{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            name={ele?.name?._text}\r\n                            // value={formData[ele?.name?._text]}\r\n                            onChange={e => {\r\n                              handleInputChange(\r\n                                e,\r\n                                ele?.type?._attributes?.type,\r\n                                i\r\n                              );\r\n                            }}\r\n                          />\r\n\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                })}\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.label?._text}\r\n                  </Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name={dropdownValue?.MyDropdown?.dropdown?.name?._text}\r\n                    value={\r\n                      formData[dropdownValue?.MyDropdown?.dropdown?.name?._text]\r\n                    }\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <option value=\"\">--Assign Delivery Boy--</option>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.option.map(\r\n                      (option, index) => (\r\n                        <option key={index} value={option?._attributes?.value}>\r\n                          {option?._attributes?.value}\r\n                        </option>\r\n                      )\r\n                    )}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2 mt-1\">\r\n              <Label className=\"mb-0\">Status</Label>\r\n              <div\r\n                className=\"form-label-group\"\r\n                onChange={e => {\r\n                  setFormData({\r\n                    ...formData,\r\n                    [\"status\"]: e.target.value,\r\n                  });\r\n                }}\r\n              >\r\n                <input\r\n                  checked={formData[\"status\"] == \"Active\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Active\"\r\n                />\r\n                <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                <input\r\n                  // checked={status == \"Inactive\"}\r\n                  checked={formData[\"status\"] == \"Deactive\"}\r\n                  style={{ marginRight: \"3px\" }}\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"Deactive\"\r\n                />\r\n                <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n              </div>\r\n            </Col>\r\n            <Row>\r\n              <Button.Ripple\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"mr-1 mt-2 mx-2\"\r\n              >\r\n                Submit\r\n              </Button.Ripple>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoodDispatchEdit;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport {\r\n  GoodDispatchxmlView,\r\n  Get_RoleList,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst GoodDispatchView = ({ ViewOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState([]);\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const Context = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    console.log(ViewOneData);\r\n    setFormData(ViewOneData);\r\n  }, []);\r\n  useEffect(() => {\r\n    GoodDispatchxmlView()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        // console.log(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setCreatAccountView(JSON.parse(jsonData)?.GoodDispatch?.input);\r\n        setdropdownValue(JSON.parse(jsonData)?.GoodDispatch);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Form className=\"mr-1 ml-1\">\r\n            <Row className=\"mb-2\">\r\n              {CreatAccountView &&\r\n                CreatAccountView?.map((ele, i) => {\r\n                  if (ele?.type?._attributes?.type == \"text\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            disabled\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else if (ele?.type?._attributes?.type == \"file\") {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label className=\"m-2\">{ele?.label?._text}</Label>\r\n                          <img\r\n                            // className=\"form-control\"\r\n                            src={`http://64.227.162.41:5000/Images/${\r\n                              formData[ele?.name?._text]\r\n                            }`}\r\n                            alt=\"image\"\r\n                            width={50}\r\n                            height={50}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <Col key={i} lg=\"3\" md=\"3\" sm=\"12\">\r\n                        <FormGroup key={i}>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            type={ele?.type?._attributes?.type}\r\n                            disabled\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                          />\r\n                          {index === i ? (\r\n                            <>\r\n                              {error && (\r\n                                <span style={{ color: \"red\" }}>{error}</span>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  }\r\n                })}\r\n              <Col lg=\"6\" md=\"6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {dropdownValue?.MyDropdown?.dropdown?.label?._text}\r\n                  </Label>\r\n                  <CustomInput\r\n                    required\r\n                    type=\"select\"\r\n                    name={dropdownValue?.MyDropdown?.dropdown?.name?._text}\r\n                    value={\r\n                      formData[dropdownValue?.MyDropdown?.dropdown?.name?._text]\r\n                    }\r\n                    disabled\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    <option value=\"\">{formData.AssignDeliveryBoy}</option>\r\n                    {/* <option value=\"\">--DeliveryAuthentication--</option> */}\r\n                    {/* {dropdownValue?.MyDropdown?.dropdown?.option.map(\r\n                      (option, index) => (\r\n                        <option key={index} value={option?._attributes?.value}>\r\n                          {option?._attributes?.value}\r\n                        </option>\r\n                      )\r\n                    )} */}\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GoodDispatchView;\r\n","import React, { useRef } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport GoodDispatchEdit from \"./GoodDispatchEdit\";\r\nimport GoodDispatchView from \"../accounts/GoodDispatchView\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport Logo from \"../../../../assets/img/profile/pages/logomain.png\";\r\nimport Papa from \"papaparse\";\r\nimport { Eye, Trash2, ChevronDown, Edit } from \"react-feather\";\r\nimport { IoMdRemoveCircleOutline } from \"react-icons/io\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport {\r\n  FaArrowAltCircleLeft,\r\n  FaArrowAltCircleRight,\r\n  FaFilter,\r\n  FaPlus,\r\n} from \"react-icons/fa\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  GoodDispatchListView,\r\n  GoodDispatchxmlView,\r\n  DeleteAccount,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport {\r\n  BsCloudDownloadFill,\r\n  BsFillArrowDownSquareFill,\r\n  BsFillArrowUpSquareFill,\r\n} from \"react-icons/bs\";\r\nimport * as XLSX from \"xlsx\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CheckPermission } from \"../house/CheckPermission\";\r\nconst SelectedColums = [];\r\n\r\nclass GoodDispatchList extends React.Component {\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridRef = React.createRef();\r\n    this.gridApi = null;\r\n    this.state = {\r\n      isOpen: false,\r\n      Arrindex: \"\",\r\n      rowData: [],\r\n      setMySelectedarr: [],\r\n      InsiderPermissions: {},\r\n\r\n      SelectedCols: [],\r\n      paginationPageSize: 5,\r\n      currenPageSize: \"\",\r\n      getPageSize: \"\",\r\n      columnDefs: [],\r\n      AllcolumnDefs: [],\r\n      SelectedcolumnDefs: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        enablePivot: true,\r\n        enableValue: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  LookupviewStart = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  handleChangeEdit = (data, types) => {\r\n    let type = types;\r\n    if (type == \"readonly\") {\r\n      this.setState({ ViewOneUserView: true });\r\n      this.setState({ ViewOneData: data });\r\n    } else {\r\n      this.setState({ EditOneUserView: true });\r\n      this.setState({ EditOneData: data });\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const UserInformation = this.context?.UserInformatio;\r\n    const InsidePermissions = CheckPermission(\"Dispatch details\");\r\n    this.setState({ InsiderPermissions: InsidePermissions });\r\n    const userId = JSON.parse(localStorage.getItem(\"userData\"))._id;\r\n    GoodDispatchxmlView()\r\n      .then((res) => {\r\n        var mydropdownArray = [];\r\n        var adddropdown = [];\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        let headerSet = JSON.parse(jsonData)?.GoodDispatch?.input;\r\n        let indexB = headerSet?.indexOf(\"CNUpload\");\r\n        // Find the index of 'c' in the array\r\n        let indexC = headerSet?.indexOf(\"FetchSalesInvoice\");\r\n\r\n        // Check if 'b' and 'c' exist in the array before removing\r\n        if (indexB !== -1 && indexC !== -1) {\r\n          // Use splice to remove elements from the array\r\n          headerSet?.splice(indexB, 1); // Remove 'b'\r\n          headerSet?.splice(indexC - 1, 1); // Since 'b' is removed, remove 'c' from updated index\r\n        }\r\n\r\n        const inputs = headerSet?.map((ele) => {\r\n          return {\r\n            headerName: ele?.label._text,\r\n            field: ele?.name._text,\r\n            filter: true,\r\n            sortable: true,\r\n          };\r\n        });\r\n\r\n        let myHeadings = [\r\n          // ...checkboxinput,\r\n          ...inputs,\r\n          // ...adddropdown,\r\n          // ...addRadio,\r\n          ...mydropdownArray,\r\n        ];\r\n        // console.log(myHeadings);\r\n        let Product = [\r\n          {\r\n            headerName: \"Actions\",\r\n            field: \"sortorder\",\r\n            field: \"transactions\",\r\n            width: 190,\r\n            cellRendererFramework: (params) => {\r\n              return (\r\n                <div className=\"actions cursor-pointer\">\r\n                  {this.state.InsiderPermissions &&\r\n                    this.state.InsiderPermissions?.View && (\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Eye\r\n                            className=\"mr-50\"\r\n                            size=\"25px\"\r\n                            color=\"green\"\r\n                            onClick={() => {\r\n                              this.handleChangeEdit(params.data, \"readonly\");\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n                  {this.state.InsiderPermissions &&\r\n                    this.state.InsiderPermissions?.Edit && (\r\n                      <Route\r\n                        render={({ history }) => (\r\n                          <Edit\r\n                            className=\"mr-50\"\r\n                            size=\"25px\"\r\n                            color=\"blue\"\r\n                            onClick={() => {\r\n                              this.handleChangeEdit(params.data, \"Editable\");\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n\r\n                  {this.state.InsiderPermissions &&\r\n                    this.state.InsiderPermissions?.Delete && (\r\n                      <Route\r\n                        render={() => (\r\n                          <Trash2\r\n                            className=\"mr-50\"\r\n                            size=\"25px\"\r\n                            color=\"red\"\r\n                            onClick={() => {\r\n                              this.runthisfunction(params?.data?._id);\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    )}\r\n                </div>\r\n              );\r\n            },\r\n          },\r\n\r\n          ...myHeadings,\r\n          //   {\r\n          //     headerName: \"Status\",\r\n          //     field: \"status\",\r\n          //     filter: true,\r\n          //     width: 100,\r\n          //     cellRendererFramework: (params) => {\r\n          //       return params.data.status === \"Active\" ? (\r\n          //         <div className=\"badge badge-pill badge-success\">\r\n          //           {params.data.status}\r\n          //         </div>\r\n          //       ) : params.data.status === \"Deactive\" ? (\r\n          //         <div className=\"badge badge-pill badge-warning\">\r\n          //           {params.data.status}\r\n          //         </div>\r\n          //       ) : null;\r\n          //     },\r\n          //   },\r\n          {\r\n            headerName: \"CNUpload\",\r\n            field: \"CnUpload\",\r\n            filter: true,\r\n            sortable: true,\r\n            cellRendererFramework: (params) => {\r\n              return (\r\n                <>\r\n                  <div className=\"actions cursor-pointer\">\r\n                    <img\r\n                      src={`http://64.227.162.41:5000/Images/${params?.data?.CNUpload}`}\r\n                      alt=\"CNUpload Not Find\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            headerName: \"FetchSalesInvoice\",\r\n            field: \"FetchSalesInvoice\",\r\n            filter: true,\r\n            sortable: true,\r\n            cellRendererFramework: (params) => {\r\n              return (\r\n                <>\r\n                  <div className=\"actions cursor-pointer\">\r\n                    <img\r\n                      src={`http://64.227.162.41:5000/Images/${params?.data?.FetchSalesInvoice}`}\r\n                      alt=\"FetchSalesInvoice Not Find\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            headerName: \"Updated date\",\r\n            field: \"updatedAt\",\r\n            filter: true,\r\n            sortable: true,\r\n            cellRendererFramework: (params) => {\r\n              return (\r\n                <>\r\n                  <div className=\"actions cursor-pointer\">\r\n                    <div className=\"actions cursor-pointer\">\r\n                      <span>{params?.data?.createdAt}</span>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        ];\r\n\r\n        this.setState({ AllcolumnDefs: Product });\r\n\r\n        let userHeading = JSON.parse(localStorage.getItem(\"PartyList\"));\r\n        if (userHeading?.length) {\r\n          this.setState({ columnDefs: userHeading });\r\n          this.gridApi.setColumnDefs(userHeading);\r\n          this.setState({ SelectedcolumnDefs: userHeading });\r\n        } else {\r\n          this.setState({ columnDefs: Product });\r\n          this.setState({ SelectedcolumnDefs: Product });\r\n        }\r\n        this.setState({ SelectedCols: Product });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    await GoodDispatchListView(userId)\r\n      .then((res) => {\r\n        // console.log(res.GoodDispatch[0].CNUpload);\r\n\r\n        // Find the index of 'b' in the array\r\n        let indexB = res?.GoodDispatch?.indexOf(\"CNUpload\");\r\n        // Find the index of 'c' in the array\r\n        let indexC = res?.GoodDispatch?.indexOf(\"FetchSalesInvoice\");\r\n\r\n        // Check if 'b' and 'c' exist in the array before removing\r\n        if (indexB !== -1 && indexC !== -1) {\r\n          // Use splice to remove elements from the array\r\n          res?.GoodDispatch?.splice(indexB, 1); // Remove 'b'\r\n          res?.GoodDispatch?.splice(indexC - 1, 1); // Since 'b' is removed, remove 'c' from updated index\r\n        }\r\n        this.setState({ rowData: res.GoodDispatch });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  toggleDropdown = () => {\r\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\r\n  };\r\n\r\n  runthisfunction(id) {\r\n    swal(\"Warning\", \"Sure You Want to Delete it\", {\r\n      buttons: {\r\n        cancel: \"cancel\",\r\n        catch: { text: \"Delete \", value: \"delete\" },\r\n      },\r\n    }).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          DeleteAccount(id)\r\n            .then((res) => {\r\n              let selectedData = this.gridApi.getSelectedRows();\r\n              this.gridApi.updateRowData({ remove: selectedData });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.gridRef.current = params.api;\r\n\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleChangeHeader = (e, value, index) => {\r\n    let check = e.target.checked;\r\n    if (check) {\r\n      SelectedColums?.push(value);\r\n    } else {\r\n      const delindex = SelectedColums?.findIndex(\r\n        (ele) => ele?.headerName === value?.headerName\r\n      );\r\n\r\n      SelectedColums?.splice(delindex, 1);\r\n    }\r\n  };\r\n  parseCsv(csvData) {\r\n    return new Promise((resolve, reject) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        skipEmptyLines: true,\r\n        complete: (result) => {\r\n          if (result.data && result.data.length > 0) {\r\n            resolve(result.data);\r\n          } else {\r\n            reject(new Error(\"No data found in the CSV\"));\r\n          }\r\n        },\r\n        error: (error) => {\r\n          reject(error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  generatePDF(parsedData) {\r\n    let pdfsize = [Object.keys(parsedData[0])][0].length;\r\n    let size = pdfsize > 15 ? \"a1\" : pdfsize < 14 > 10 ? \"a3\" : \"a4\";\r\n\r\n    const doc = new jsPDF(\"landscape\", \"mm\", size, false);\r\n    doc.setTextColor(5, 87, 97);\r\n    const tableData = parsedData.map((row) => Object.values(row));\r\n    doc.addImage(Logo, \"JPEG\", 10, 10, 50, 30);\r\n    let date = new Date();\r\n    doc.setCreationDate(date);\r\n    doc.text(\"UserAccount\", 14, 51);\r\n    doc.autoTable({\r\n      head: [Object.keys(parsedData[0])],\r\n      body: tableData,\r\n      startY: 60,\r\n    });\r\n\r\n    doc.save(\"UserList.pdf\");\r\n  }\r\n\r\n  exportToPDF = async () => {\r\n    const csvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    try {\r\n      const parsedData = await this.parseCsv(csvData);\r\n      this.generatePDF(parsedData);\r\n    } catch (error) {\r\n      console.error(\"Error parsing CSV:\", error);\r\n    }\r\n  };\r\n  processCell = (params) => {\r\n    return params.value;\r\n  };\r\n\r\n  convertCsvToExcel(csvData) {\r\n    return new Promise((resolve) => {\r\n      Papa.parse(csvData, {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        complete: function (result) {\r\n          const worksheet = XLSX.utils.json_to_sheet(result.data);\r\n          const workbook = XLSX.utils.book_new();\r\n          XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\r\n          const excelBuffer = XLSX.write(workbook, {\r\n            bookType: \"xlsx\",\r\n            type: \"array\",\r\n          });\r\n          const blob = new Blob([excelBuffer], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          resolve(blob);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  downloadExcelFile(blob) {\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"Userlist.xlsx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  }\r\n\r\n  exportToExcel = async (e) => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    const blob = await this.convertCsvToExcel(CsvData);\r\n    this.downloadExcelFile(blob);\r\n  };\r\n\r\n  convertCSVtoExcel = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: (result) => {\r\n        const ws = XLSX.utils.json_to_sheet(result.data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n        const excelType = \"xls\";\r\n        XLSX.writeFile(wb, `UserList.${excelType}`);\r\n      },\r\n    });\r\n  };\r\n\r\n  shiftElementUp = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex > 0) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex - 1 });\r\n      myArrayCopy.splice(currentIndex - 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n\r\n  shiftElementDown = () => {\r\n    let currentIndex = this.state.Arrindex;\r\n    if (currentIndex < this.state.SelectedcolumnDefs.length - 1) {\r\n      const myArrayCopy = [...this.state.SelectedcolumnDefs];\r\n      const elementToMove = myArrayCopy.splice(currentIndex, 1)[0];\r\n      this.setState({ Arrindex: currentIndex + 1 });\r\n      myArrayCopy.splice(currentIndex + 1, 0, elementToMove);\r\n      this.setState({ SelectedcolumnDefs: myArrayCopy });\r\n    }\r\n  };\r\n  convertCsvToXml = () => {\r\n    const CsvData = this.gridApi.getDataAsCsv({\r\n      processCellCallback: this.processCell,\r\n    });\r\n    Papa.parse(CsvData, {\r\n      complete: (result) => {\r\n        const rows = result.data;\r\n\r\n        // Create XML\r\n        let xmlString = \"<root>\\n\";\r\n\r\n        rows.forEach((row) => {\r\n          xmlString += \"  <row>\\n\";\r\n          row.forEach((cell, index) => {\r\n            xmlString += `    <field${index + 1}>${cell}</field${index + 1}>\\n`;\r\n          });\r\n          xmlString += \"  </row>\\n\";\r\n        });\r\n\r\n        xmlString += \"</root>\";\r\n\r\n        // setXmlData(xmlString);\r\n\r\n        // Create a download link\r\n        const blob = new Blob([xmlString], { type: \"text/xml\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"output.xml\";\r\n        link.click();\r\n      },\r\n    });\r\n  };\r\n\r\n  HandleSetVisibleField = (e) => {\r\n    e.preventDefault();\r\n    this.gridApi.setColumnDefs(this.state.SelectedcolumnDefs);\r\n    this.setState({ columnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ SelectedcolumnDefs: this.state.SelectedcolumnDefs });\r\n    this.setState({ rowData: this.state.rowData });\r\n    localStorage.setItem(\r\n      \"PartyList\",\r\n      JSON.stringify(this.state.SelectedcolumnDefs)\r\n    );\r\n    this.LookupviewStart();\r\n  };\r\n\r\n  HeadingRightShift = () => {\r\n    const updatedSelectedColumnDefs = [\r\n      ...new Set([\r\n        ...this.state.SelectedcolumnDefs.map((item) => JSON.stringify(item)),\r\n        ...SelectedColums.map((item) => JSON.stringify(item)),\r\n      ]),\r\n    ].map((item) => JSON.parse(item));\r\n    this.setState({\r\n      SelectedcolumnDefs: [...new Set(updatedSelectedColumnDefs)], // Update the state with the combined array\r\n    });\r\n  };\r\n  handleLeftShift = () => {\r\n    let SelectedCols = this.state.SelectedcolumnDefs.slice();\r\n    let delindex = this.state.Arrindex; /* Your delete index here */\r\n\r\n    if (SelectedCols && delindex >= 0) {\r\n      const splicedElement = SelectedCols.splice(delindex, 1); // Remove the element\r\n\r\n      this.setState({\r\n        SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      rowData,\r\n      columnDefs,\r\n      defaultColDef,\r\n      SelectedcolumnDefs,\r\n      isOpen,\r\n      SelectedCols,\r\n      InsiderPermissions,\r\n      AllcolumnDefs,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Col className=\"app-user-list\">\r\n          {this.state.EditOneUserView && this.state.EditOneUserView ? (\r\n            <Row className=\"card\">\r\n              <Col>\r\n                <div className=\"d-flex justify-content-end p-1\">\r\n                  <Button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({ EditOneUserView: false });\r\n                    }}\r\n                    color=\"danger\">\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              <GoodDispatchEdit EditOneData={this.state.EditOneData} />\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {this.state.ViewOneUserView && this.state.ViewOneUserView ? (\r\n                <>\r\n                  <Row className=\"card\">\r\n                    <Col>\r\n                      <div className=\"d-flex justify-content-end p-1\">\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.setState({ ViewOneUserView: false });\r\n                          }}\r\n                          color=\"danger\">\r\n                          Back\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <GoodDispatchView ViewOneData={this.state.ViewOneData} />\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Col sm=\"12\">\r\n                    <Card>\r\n                      <Row className=\"m-2\">\r\n                        <Col>\r\n                          <h1 className=\"float-left\">Good Dispatch List</h1>\r\n                        </Col>\r\n\r\n                        {InsiderPermissions && InsiderPermissions?.View && (\r\n                          <Col>\r\n                            <span className=\"mx-1\">\r\n                              <FaFilter\r\n                                style={{ cursor: \"pointer\" }}\r\n                                title=\"filter coloumn\"\r\n                                size=\"25px\"\r\n                                onClick={this.LookupviewStart}\r\n                                color=\"#39cccc\"\r\n                                className=\"float-right\"\r\n                              />\r\n                            </span>\r\n                            <span className=\"mx-1\">\r\n                              <div className=\"dropdown-container float-right\">\r\n                                <BsCloudDownloadFill\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  title=\"download file\"\r\n                                  size=\"25px\"\r\n                                  className=\"dropdown-button \"\r\n                                  color=\"#39cccc\"\r\n                                  onClick={this.toggleDropdown}\r\n                                />\r\n                                {isOpen && (\r\n                                  <div\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      zIndex: \"1\",\r\n                                    }}\r\n                                    className=\"dropdown-content dropdownmy\">\r\n                                    <h5\r\n                                      onClick={() => this.exportToPDF()}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive mt-1\">\r\n                                      .PDF\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.gridApi.exportDataAsCsv()\r\n                                      }\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\">\r\n                                      .CSV\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={this.convertCSVtoExcel}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\">\r\n                                      .XLS\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={this.exportToExcel}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\">\r\n                                      .XLSX\r\n                                    </h5>\r\n                                    <h5\r\n                                      onClick={() => this.convertCsvToXml()}\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                      className=\" mx-1 myactive\">\r\n                                      .XML\r\n                                    </h5>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </span>\r\n                            <span>\r\n                              <Route\r\n                                render={({ history }) => (\r\n                                  <Badge\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    className=\"float-right mr-1\"\r\n                                    color=\"primary\"\r\n                                    onClick={() =>\r\n                                      history.push(\r\n                                        \"/app/AjGroup/dispatch/CreateDispach\"\r\n                                      )\r\n                                    }>\r\n                                    <FaPlus size={15} /> Create Dispatch\r\n                                  </Badge>\r\n                                )}\r\n                              />\r\n                            </span>\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                      <CardBody>\r\n                        {this.state.rowData === null ? null : (\r\n                          <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                            <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                              <div className=\"mb-1\">\r\n                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                                  <DropdownToggle tag=\"div\">\r\n                                    {this.gridApi\r\n                                      ? this.state.currenPageSize\r\n                                      : \"\" * this.state.getPageSize -\r\n                                        (this.state.getPageSize - 1)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {this.state.rowData.length -\r\n                                      this.state.currenPageSize *\r\n                                        this.state.getPageSize >\r\n                                    0\r\n                                      ? this.state.currenPageSize *\r\n                                        this.state.getPageSize\r\n                                      : this.state.rowData.length}{\" \"}\r\n                                    of {this.state.rowData.length}\r\n                                    <ChevronDown className=\"ml-50\" size={15} />\r\n                                  </DropdownToggle>\r\n                                  <DropdownMenu right>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(5)}>\r\n                                      5\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(20)}>\r\n                                      20\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(50)}>\r\n                                      50\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(100)}>\r\n                                      100\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                      tag=\"div\"\r\n                                      onClick={() => this.filterSize(134)}>\r\n                                      134\r\n                                    </DropdownItem>\r\n                                  </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                              </div>\r\n                              <div className=\"d-flex flex-wrap justify-content-end mb-1\">\r\n                                <div className=\"table-input mr-1\">\r\n                                  <Input\r\n                                    placeholder=\"search Item here...\"\r\n                                    onChange={(e) =>\r\n                                      this.updateSearchQuery(e.target.value)\r\n                                    }\r\n                                    value={this.state.value}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <ContextLayout.Consumer className=\"ag-theme-alpine\">\r\n                              {(context) => (\r\n                                <AgGridReact\r\n                                  id=\"myAgGrid\"\r\n                                  // gridOptions={{\r\n                                  //   domLayout: \"autoHeight\",\r\n                                  //   // or other layout options\r\n                                  // }}\r\n                                  gridOptions={this.gridOptions}\r\n                                  rowSelection=\"multiple\"\r\n                                  defaultColDef={defaultColDef}\r\n                                  columnDefs={columnDefs}\r\n                                  rowData={rowData}\r\n                                  // onGridReady={(params) => {\r\n                                  //   this.gridApi = params.api;\r\n                                  //   this.gridColumnApi = params.columnApi;\r\n                                  //   this.gridRef.current = params.api;\r\n\r\n                                  //   this.setState({\r\n                                  //     currenPageSize:\r\n                                  //       this.gridApi.paginationGetCurrentPage() +\r\n                                  //       1,\r\n                                  //     getPageSize:\r\n                                  //       this.gridApi.paginationGetPageSize(),\r\n                                  //     totalPages:\r\n                                  //       this.gridApi.paginationGetTotalPages(),\r\n                                  //   });\r\n                                  // }}\r\n                                  onGridReady={this.onGridReady}\r\n                                  colResizeDefault={\"shift\"}\r\n                                  animateRows={true}\r\n                                  floatingFilter={false}\r\n                                  pagination={true}\r\n                                  paginationPageSize={\r\n                                    this.state.paginationPageSize\r\n                                  }\r\n                                  pivotPanelShow=\"always\"\r\n                                  enableRtl={context.state.direction === \"rtl\"}\r\n                                  ref={this.gridRef} // Attach the ref to the grid\r\n                                  domLayout=\"autoHeight\" // Adjust layout as needed\r\n                                />\r\n                              )}\r\n                            </ContextLayout.Consumer>\r\n                          </div>\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.LookupviewStart}\r\n          className={this.props.className}\r\n          style={{ maxWidth: \"1050px\" }}>\r\n          <ModalHeader toggle={this.LookupviewStart}>Change Fileds</ModalHeader>\r\n          <ModalBody className=\"modalbodyhead\">\r\n            <Row>\r\n              <Col lg=\"4\" md=\"4\" sm=\"12\" xl=\"4\" xs=\"12\">\r\n                <h4>Avilable Columns</h4>\r\n                <div className=\"mainshffling\">\r\n                  <div class=\"ex1\">\r\n                    {AllcolumnDefs &&\r\n                      AllcolumnDefs?.map((ele, i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              onClick={(e) =>\r\n                                this.handleChangeHeader(e, ele, i)\r\n                              }\r\n                              key={i}\r\n                              className=\"mycustomtag mt-1\">\r\n                              <span className=\"mt-1\">\r\n                                <h5\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  className=\"allfields\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    // checked={check && check}\r\n                                    className=\"mx-1\"\r\n                                  />\r\n\r\n                                  {ele?.headerName}\r\n                                </h5>\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"2\" md=\"2\" sm=\"12\" xl=\"2\" xs=\"12\" className=\"colarrowbtn\">\r\n                <div className=\"mainarrowbtn\">\r\n                  <div style={{ cursor: \"pointer\" }}>\r\n                    <FaArrowAltCircleRight\r\n                      onClick={this.HeadingRightShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ cursor: \"pointer\" }} className=\"my-2\">\r\n                    <FaArrowAltCircleLeft\r\n                      onClick={this.handleLeftShift}\r\n                      className=\"arrowassign\"\r\n                      size=\"30px\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"6\" sm=\"12\" xl=\"6\" xs=\"12\">\r\n                <Row>\r\n                  <Col lg=\"8\" md=\"8\" sm=\"12\" xs=\"12\">\r\n                    <h4>Visible Columns</h4>\r\n                    <div className=\"mainshffling\">\r\n                      <div class=\"ex1\">\r\n                        {SelectedcolumnDefs &&\r\n                          SelectedcolumnDefs?.map((ele, i) => {\r\n                            return (\r\n                              <>\r\n                                <div key={i} className=\"mycustomtag mt-1\">\r\n                                  <span className=\"mt-1\">\r\n                                    <h5\r\n                                      onClick={() =>\r\n                                        this.setState({ Arrindex: i })\r\n                                      }\r\n                                      style={{\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor: `${\r\n                                          this.state.Arrindex === i\r\n                                            ? \"#1877f2\"\r\n                                            : \"\"\r\n                                        }`,\r\n                                      }}\r\n                                      className=\"allfields\">\r\n                                      <IoMdRemoveCircleOutline\r\n                                        onClick={() => {\r\n                                          const SelectedCols =\r\n                                            this.state.SelectedcolumnDefs.slice();\r\n                                          const delindex =\r\n                                            SelectedCols.findIndex(\r\n                                              (element) =>\r\n                                                element?.headerName ==\r\n                                                ele?.headerName\r\n                                            );\r\n\r\n                                          if (SelectedCols && delindex >= 0) {\r\n                                            const splicedElement =\r\n                                              SelectedCols.splice(delindex, 1); // Remove the element\r\n                                            // splicedElement contains the removed element, if needed\r\n\r\n                                            this.setState({\r\n                                              SelectedcolumnDefs: SelectedCols, // Update the state with the modified array\r\n                                            });\r\n                                          }\r\n                                          // const delindex =\r\n                                          //   SelectedCols.findIndex(\r\n                                          //     (element) =>\r\n                                          //       element?.headerName ==\r\n                                          //       ele?.headerName\r\n                                          //   );\r\n\r\n                                          // SelectedCols?.splice(delindex, 1);\r\n                                          // this.setState({\r\n                                          //   SelectedcolumnDefs: SelectedCols,\r\n                                          // });\r\n                                        }}\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        size=\"25px\"\r\n                                        color=\"red\"\r\n                                        className=\"mr-1\"\r\n                                      />\r\n\r\n                                      {ele?.headerName}\r\n                                    </h5>\r\n                                  </span>\r\n                                </div>\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"4\" md=\"4\" sm=\"12\" xs=\"12\">\r\n                    <div className=\"updownbtn justify-content-center\">\r\n                      <div>\r\n                        <BsFillArrowUpSquareFill\r\n                          className=\"arrowassign mb-1\"\r\n                          size=\"30px\"\r\n                          onClick={this.shiftElementUp}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <BsFillArrowDownSquareFill\r\n                          onClick={this.shiftElementDown}\r\n                          className=\"arrowassign\"\r\n                          size=\"30px\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button onClick={this.HandleSetVisibleField} color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default GoodDispatchList;\r\n","module.exports = __webpack_public_path__ + \"static/media/logomain.cee4d0c2.png\";"],"sourceRoot":""}